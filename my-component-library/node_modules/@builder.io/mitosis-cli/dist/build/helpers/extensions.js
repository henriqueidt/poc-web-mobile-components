"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFileExtensionForTarget = void 0;
var getFileExtensionForTarget = function (_a) {
    var _b;
    var type = _a.type, target = _a.target, options = _a.options;
    var isTs = !!((_b = options.options[target]) === null || _b === void 0 ? void 0 : _b.typescript);
    switch (target) {
        case 'angular':
            return '.ts';
        case 'alpine':
        case 'html':
            return '.html';
        case 'svelte':
            return '.svelte';
        case 'swift':
            return '.swift';
        case 'vue':
        case 'vue2':
        case 'vue3':
            return '.vue';
        case 'webcomponent':
            return '.ts';
        case 'lit':
            return '.ts';
        // all JSX frameworks
        case 'solid':
        case 'qwik':
        case 'react':
        case 'reactNative':
        case 'rsc':
        case 'stencil':
            switch (type) {
                case 'import':
                    // we can't have `.jsx`/`.tsx` extensions in the import paths, so we stick with implicit file extensions.
                    return '';
                case 'filename':
                    return isTs ? '.tsx' : '.jsx';
            }
        case 'marko':
            return '.marko';
        default:
            return '.js';
    }
};
exports.getFileExtensionForTarget = getFileExtensionForTarget;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5zaW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idWlsZC9oZWxwZXJzL2V4dGVuc2lvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRU8sSUFBTSx5QkFBeUIsR0FBRyxVQUFDLEVBUXpDOztRQVBDLElBQUksVUFBQSxFQUNKLE1BQU0sWUFBQSxFQUNOLE9BQU8sYUFBQTtJQU1QLElBQU0sSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFBLE1BQUEsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsMENBQUUsVUFBVSxDQUFBLENBQUM7SUFDbkQsUUFBUSxNQUFNLEVBQUU7UUFDZCxLQUFLLFNBQVM7WUFDWixPQUFPLEtBQUssQ0FBQztRQUNmLEtBQUssUUFBUSxDQUFDO1FBQ2QsS0FBSyxNQUFNO1lBQ1QsT0FBTyxPQUFPLENBQUM7UUFDakIsS0FBSyxRQUFRO1lBQ1gsT0FBTyxTQUFTLENBQUM7UUFDbkIsS0FBSyxPQUFPO1lBQ1YsT0FBTyxRQUFRLENBQUM7UUFDbEIsS0FBSyxLQUFLLENBQUM7UUFDWCxLQUFLLE1BQU0sQ0FBQztRQUNaLEtBQUssTUFBTTtZQUNULE9BQU8sTUFBTSxDQUFDO1FBQ2hCLEtBQUssY0FBYztZQUNqQixPQUFPLEtBQUssQ0FBQztRQUNmLEtBQUssS0FBSztZQUNSLE9BQU8sS0FBSyxDQUFDO1FBRWYscUJBQXFCO1FBQ3JCLEtBQUssT0FBTyxDQUFDO1FBQ2IsS0FBSyxNQUFNLENBQUM7UUFDWixLQUFLLE9BQU8sQ0FBQztRQUNiLEtBQUssYUFBYSxDQUFDO1FBQ25CLEtBQUssS0FBSyxDQUFDO1FBQ1gsS0FBSyxTQUFTO1lBQ1osUUFBUSxJQUFJLEVBQUU7Z0JBQ1osS0FBSyxRQUFRO29CQUNYLHlHQUF5RztvQkFDekcsT0FBTyxFQUFFLENBQUM7Z0JBQ1osS0FBSyxVQUFVO29CQUNiLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQzthQUNqQztRQUNILEtBQUssT0FBTztZQUNWLE9BQU8sUUFBUSxDQUFDO1FBQ2xCO1lBQ0UsT0FBTyxLQUFLLENBQUM7S0FDaEI7QUFDSCxDQUFDLENBQUM7QUFoRFcsUUFBQSx5QkFBeUIsNkJBZ0RwQyJ9