"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = void 0;
var mitosis_1 = require("@builder.io/mitosis");
var debug_1 = __importDefault(require("debug"));
var function_1 = require("fp-ts/lib/function");
var fs_extra_1 = require("fs-extra");
var lodash_1 = require("lodash");
var fast_clone_1 = require("../helpers/fast-clone");
var context_1 = require("./helpers/context");
var extensions_1 = require("./helpers/extensions");
var files_1 = require("./helpers/files");
var inputs_extensions_1 = require("./helpers/inputs-extensions");
var options_1 = require("./helpers/options");
var overrides_1 = require("./helpers/overrides");
var transpile_1 = require("./helpers/transpile");
var cwd = process.cwd();
/**
 * This provides the default path for a target's contents, both in the input and output directories.
 */
var getTargetPath = function (_a) {
    var target = _a.target;
    switch (target) {
        case 'vue2':
            return 'vue/vue2';
        case 'vue':
        case 'vue3':
            return 'vue/vue3';
        default:
            return (0, lodash_1.kebabCase)(target);
    }
};
var DEFAULT_CONFIG = {
    targets: [],
    dest: 'output',
    files: 'src/*',
    overridesDir: 'overrides',
    getTargetPath: getTargetPath,
};
var getOptions = function (config) { return (__assign(__assign(__assign({}, DEFAULT_CONFIG), config), { options: __assign(__assign({}, DEFAULT_CONFIG.options), config === null || config === void 0 ? void 0 : config.options) })); };
function clean(options) {
    return __awaiter(this, void 0, void 0, function () {
        var patterns, files;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    patterns = options.targets.map(function (target) { return "".concat(options.dest, "/").concat(options.getTargetPath({ target: target }), "/").concat(options.files); });
                    files = (0, files_1.getFiles)({ files: patterns, exclude: options.exclude });
                    return [4 /*yield*/, Promise.all(files.map(function (file) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, (0, fs_extra_1.remove)(file)];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/];
                                }
                            });
                        }); }))];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
}
var getRequiredParsers = function (options) {
    var targetsOptions = Object.values(options.options);
    var targetsRequiringTypeScript = targetsOptions.filter(function (option) { return option.typescript; }).length;
    var needsTypeScript = targetsRequiringTypeScript > 0;
    /**
     * We use 2 ways to check if the user requires a JS output:
     * - either there are fewer `options[target].typescript === true` than there are items in `targets`
     * - either there are fewer `options[target].typescript === true` than there are items in `options.options`
     *
     * The reason for checking in multiple ways is if there is a mismatch between the number of targets in the `targets`
     * array compared to the configurations in `options.options`.
     */
    var needsJavaScript = options.targets.length > targetsRequiringTypeScript ||
        targetsOptions.length > targetsRequiringTypeScript;
    return {
        typescript: needsTypeScript,
        javascript: needsJavaScript,
    };
};
var parseJsxComponent = function (_a) {
    var options = _a.options, path = _a.path, file = _a.file;
    return __awaiter(void 0, void 0, void 0, function () {
        var requiredParses, typescriptMitosisJson, javascriptMitosisJson, _b, _c, singleParse, _d, output;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    requiredParses = getRequiredParsers(options);
                    if (!(requiredParses.typescript && requiredParses.javascript)) return [3 /*break*/, 7];
                    if (!options.parser) return [3 /*break*/, 2];
                    return [4 /*yield*/, options.parser(file, path)];
                case 1:
                    _b = _e.sent();
                    return [3 /*break*/, 3];
                case 2:
                    _b = (0, mitosis_1.parseJsx)(file, { typescript: true });
                    _e.label = 3;
                case 3:
                    typescriptMitosisJson = _b;
                    if (!options.parser) return [3 /*break*/, 5];
                    return [4 /*yield*/, options.parser(file, path)];
                case 4:
                    _c = _e.sent();
                    return [3 /*break*/, 6];
                case 5:
                    _c = (0, mitosis_1.parseJsx)(file, { typescript: false });
                    _e.label = 6;
                case 6:
                    javascriptMitosisJson = _c;
                    return [3 /*break*/, 11];
                case 7:
                    if (!options.parser) return [3 /*break*/, 9];
                    return [4 /*yield*/, options.parser(file, path)];
                case 8:
                    _d = _e.sent();
                    return [3 /*break*/, 10];
                case 9:
                    _d = (0, mitosis_1.parseJsx)(file, { typescript: requiredParses.typescript });
                    _e.label = 10;
                case 10:
                    singleParse = _d;
                    // technically only one of these will be used, but we set both to simplify things types-wise.
                    typescriptMitosisJson = singleParse;
                    javascriptMitosisJson = singleParse;
                    _e.label = 11;
                case 11:
                    output = {
                        path: path,
                        typescriptMitosisJson: typescriptMitosisJson,
                        javascriptMitosisJson: javascriptMitosisJson,
                    };
                    return [2 /*return*/, output];
            }
        });
    });
};
var parseSvelteComponent = function (_a) {
    var path = _a.path, file = _a.file;
    return __awaiter(void 0, void 0, void 0, function () {
        var json, output;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, (0, mitosis_1.parseSvelte)(file, path)];
                case 1:
                    json = _b.sent();
                    output = {
                        path: path,
                        typescriptMitosisJson: json,
                        javascriptMitosisJson: json,
                    };
                    return [2 /*return*/, output];
            }
        });
    });
};
var getMitosisComponentJSONs = function (options) { return __awaiter(void 0, void 0, void 0, function () {
    var paths;
    return __generator(this, function (_a) {
        paths = (0, files_1.getFiles)({ files: options.files, exclude: options.exclude }).filter(inputs_extensions_1.checkIsMitosisComponentFilePath);
        return [2 /*return*/, Promise.all(paths.map(function (path) { return __awaiter(void 0, void 0, void 0, function () {
                var file, err_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 6, , 7]);
                            return [4 /*yield*/, (0, fs_extra_1.readFile)(path, 'utf8')];
                        case 1:
                            file = _a.sent();
                            if (!inputs_extensions_1.INPUT_EXTENSIONS.svelte.some(function (x) { return path.endsWith(x); })) return [3 /*break*/, 3];
                            return [4 /*yield*/, parseSvelteComponent({ path: path, file: file })];
                        case 2: return [2 /*return*/, _a.sent()];
                        case 3: return [4 /*yield*/, parseJsxComponent({ options: options, path: path, file: file })];
                        case 4: return [2 /*return*/, _a.sent()];
                        case 5: return [3 /*break*/, 7];
                        case 6:
                            err_1 = _a.sent();
                            console.error('Could not parse file:', path);
                            throw err_1;
                        case 7: return [2 /*return*/];
                    }
                });
            }); }))];
    });
}); };
var getTargetContexts = function (options) {
    return options.targets.map(function (target) { return ({
        target: target,
        generator: getGeneratorForTarget({ target: target }),
        outputPath: options.getTargetPath({ target: target }),
    }); });
};
var buildAndOutputNonComponentFiles = function (targetContext) { return __awaiter(void 0, void 0, void 0, function () {
    var files;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, buildNonComponentFiles(targetContext)];
            case 1:
                files = _a.sent();
                return [4 /*yield*/, outputNonComponentFiles(__assign(__assign({}, targetContext), { files: files }))];
            case 2: return [2 /*return*/, _a.sent()];
        }
    });
}); };
function build(config) {
    return __awaiter(this, void 0, void 0, function () {
        var options, mitosisComponents, targetContexts;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    options = getOptions(config);
                    // clean output directory
                    return [4 /*yield*/, clean(options)];
                case 1:
                    // clean output directory
                    _a.sent();
                    return [4 /*yield*/, getMitosisComponentJSONs(options)];
                case 2:
                    mitosisComponents = _a.sent();
                    targetContexts = getTargetContexts(options);
                    return [4 /*yield*/, Promise.all(targetContexts.map(function (targetContext) { return __awaiter(_this, void 0, void 0, function () {
                            var files, x;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        files = (0, fast_clone_1.fastClone)(mitosisComponents);
                                        return [4 /*yield*/, Promise.all([
                                                buildAndOutputNonComponentFiles(__assign(__assign({}, targetContext), { options: options })),
                                                buildAndOutputComponentFiles(__assign(__assign({}, targetContext), { options: options, files: files })),
                                            ])];
                                    case 1:
                                        x = _a.sent();
                                        console.info("Mitosis: ".concat(targetContext.target, ": generated ").concat(x[1].length, " components, ").concat(x[0].length, " regular files."));
                                        return [2 /*return*/];
                                }
                            });
                        }); }))];
                case 3:
                    _a.sent();
                    console.info('Mitosis: generation completed.');
                    return [2 /*return*/];
            }
        });
    });
}
exports.build = build;
var getGeneratorForTarget = function (_a) {
    var target = _a.target;
    switch (target) {
        case 'alpine':
            return mitosis_1.componentToAlpine;
        case 'customElement':
            return mitosis_1.componentToCustomElement;
        case 'html':
            return mitosis_1.componentToHtml;
        case 'reactNative':
            return mitosis_1.componentToReactNative;
        case 'vue2':
            return mitosis_1.componentToVue2;
        case 'vue':
            console.log('Targeting Vue: defaulting to vue v3');
            return mitosis_1.componentToVue3;
        case 'vue3':
            return mitosis_1.componentToVue3;
        case 'angular':
            return mitosis_1.componentToAngular;
        case 'react':
            return mitosis_1.componentToReact;
        case 'swift':
            return mitosis_1.componentToSwift;
        case 'solid':
            return mitosis_1.componentToSolid;
        case 'webcomponent':
            return mitosis_1.componentToCustomElement;
        case 'svelte':
            return mitosis_1.componentToSvelte;
        case 'qwik':
            return mitosis_1.componentToQwik;
        case 'marko':
            return mitosis_1.componentToMarko;
        case 'preact':
            return mitosis_1.componentToPreact;
        case 'rsc':
            return mitosis_1.componentToRsc;
        case 'lit':
            return mitosis_1.componentToLit;
        case 'mitosis':
            return mitosis_1.componentToMitosis;
        case 'stencil':
            return mitosis_1.componentToStencil;
        case 'template':
            return mitosis_1.componentToTemplate;
        case 'liquid':
            return mitosis_1.componentToLiquid;
        case 'taro':
            return mitosis_1.componentToTaro;
        default:
            throw new Error('CLI does not yet support target: ' + target);
    }
};
var getComponentOutputFileName = function (_a) {
    var target = _a.target, path = _a.path, options = _a.options;
    return path.replace(inputs_extensions_1.INPUT_EXTENSION_REGEX, (0, extensions_1.getFileExtensionForTarget)({ type: 'filename', target: target, options: options }));
};
/**
 * Transpiles and outputs Mitosis component files.
 */
function buildAndOutputComponentFiles(_a) {
    var target = _a.target, files = _a.files, options = _a.options, generator = _a.generator, outputPath = _a.outputPath;
    return __awaiter(this, void 0, void 0, function () {
        var debugTarget, shouldOutputTypescript, output;
        var _this = this;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    debugTarget = (0, debug_1.default)("mitosis:".concat(target));
                    shouldOutputTypescript = (0, options_1.checkShouldOutputTypeScript)({ options: options, target: target });
                    output = files.map(function (_a) {
                        var path = _a.path, typescriptMitosisJson = _a.typescriptMitosisJson, javascriptMitosisJson = _a.javascriptMitosisJson;
                        return __awaiter(_this, void 0, void 0, function () {
                            var outputFilePath, overrideFilePath, overrideFile, transpiled, component, outputDir;
                            return __generator(this, function (_b) {
                                switch (_b.label) {
                                    case 0:
                                        outputFilePath = getComponentOutputFileName({ target: target, path: path, options: options });
                                        overrideFilePath = "".concat(options.overridesDir, "/").concat(getTargetPath({ target: target }));
                                        return [4 /*yield*/, (0, overrides_1.getOverrideFile)({
                                                filename: outputFilePath,
                                                path: overrideFilePath,
                                                target: target,
                                            })];
                                    case 1:
                                        overrideFile = _b.sent();
                                        debugTarget("transpiling ".concat(path, "..."));
                                        transpiled = '';
                                        if (overrideFile) {
                                            debugTarget("override exists for ".concat(path, ": ").concat(!!overrideFile));
                                        }
                                        try {
                                            component = shouldOutputTypescript ? typescriptMitosisJson : javascriptMitosisJson;
                                            transpiled = overrideFile !== null && overrideFile !== void 0 ? overrideFile : generator(options.options[target])({ path: path, component: component });
                                            debugTarget("Success: transpiled ".concat(path, ". Output length: ").concat(transpiled.length));
                                        }
                                        catch (error) {
                                            debugTarget("Failure: transpiled ".concat(path, "."));
                                            debugTarget(error);
                                            throw error;
                                        }
                                        transpiled = (0, transpile_1.transformImports)({ target: target, options: options })(transpiled);
                                        outputDir = "".concat(options.dest, "/").concat(outputPath);
                                        return [4 /*yield*/, (0, fs_extra_1.outputFile)("".concat(outputDir, "/").concat(outputFilePath), transpiled)];
                                    case 2:
                                        _b.sent();
                                        return [2 /*return*/];
                                }
                            });
                        });
                    });
                    return [4 /*yield*/, Promise.all(output)];
                case 1: return [2 /*return*/, _b.sent()];
            }
        });
    });
}
var getNonComponentFileExtension = (0, function_1.flow)(options_1.checkShouldOutputTypeScript, function (shouldOutputTypeScript) {
    return shouldOutputTypeScript ? '.ts' : '.js';
});
/**
 * Outputs non-component files to the destination directory, without modifying them.
 */
var outputNonComponentFiles = function (_a) {
    var files = _a.files, options = _a.options, outputPath = _a.outputPath, target = _a.target;
    return __awaiter(void 0, void 0, void 0, function () {
        var extension, folderPath;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    extension = getNonComponentFileExtension({ target: target, options: options });
                    folderPath = "".concat(options.dest, "/").concat(outputPath);
                    return [4 /*yield*/, Promise.all(files.map(function (_a) {
                            var path = _a.path, output = _a.output;
                            return (0, fs_extra_1.outputFile)("".concat(folderPath, "/").concat(path.replace(/\.tsx?$/, extension)), output);
                        }))];
                case 1: return [2 /*return*/, _b.sent()];
            }
        });
    });
};
function buildContextFile(_a) {
    var target = _a.target, options = _a.options, path = _a.path;
    return __awaiter(this, void 0, void 0, function () {
        var output;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, (0, context_1.generateContextFile)({ path: path, options: options, target: target })];
                case 1:
                    output = _b.sent();
                    if (!!(0, options_1.checkShouldOutputTypeScript)({ target: target, options: options })) return [3 /*break*/, 3];
                    return [4 /*yield*/, (0, transpile_1.transpile)({
                            path: path,
                            target: target,
                            content: output,
                            options: options,
                        })];
                case 2:
                    output = _b.sent();
                    _b.label = 3;
                case 3:
                    // we remove the `.lite` extension from the path for Context files.
                    path = path.replace('.lite.ts', '.ts');
                    return [2 /*return*/, {
                            path: path,
                            output: output,
                        }];
            }
        });
    });
}
/**
 * Transpiles all non-component files, including Context files.
 */
function buildNonComponentFiles(args) {
    return __awaiter(this, void 0, void 0, function () {
        var target, options, nonComponentFiles;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    target = args.target, options = args.options;
                    nonComponentFiles = (0, files_1.getFiles)({ files: options.files, exclude: options.exclude }).filter(function (file) { return file.endsWith('.ts') || file.endsWith('.js'); });
                    return [4 /*yield*/, Promise.all(nonComponentFiles.map(function (path) { return __awaiter(_this, void 0, void 0, function () {
                            var overrideFilePath, overrideFile, _a, output_1, _b, isContextFile, file, output, _c;
                            return __generator(this, function (_d) {
                                switch (_d.label) {
                                    case 0:
                                        overrideFilePath = "".concat(options.overridesDir, "/").concat(getTargetPath({ target: target }), "/").concat(path);
                                        return [4 /*yield*/, (0, fs_extra_1.pathExists)(overrideFilePath)];
                                    case 1:
                                        if (!(_d.sent())) return [3 /*break*/, 3];
                                        return [4 /*yield*/, (0, fs_extra_1.readFile)(overrideFilePath, 'utf8')];
                                    case 2:
                                        _a = _d.sent();
                                        return [3 /*break*/, 4];
                                    case 3:
                                        _a = null;
                                        _d.label = 4;
                                    case 4:
                                        overrideFile = _a;
                                        if (!overrideFile) return [3 /*break*/, 6];
                                        _b = function_1.pipe;
                                        return [4 /*yield*/, (0, transpile_1.transpileIfNecessary)({ path: path, target: target, content: overrideFile, options: options })];
                                    case 5:
                                        output_1 = _b.apply(void 0, [_d.sent(), (0, transpile_1.transformImports)({ target: target, options: options })]);
                                        return [2 /*return*/, { output: output_1, path: path }];
                                    case 6:
                                        isContextFile = path.endsWith('.context.lite.ts');
                                        if (isContextFile) {
                                            return [2 /*return*/, buildContextFile(__assign(__assign({}, args), { path: path }))];
                                        }
                                        return [4 /*yield*/, (0, fs_extra_1.readFile)(path, 'utf8')];
                                    case 7:
                                        file = _d.sent();
                                        _c = function_1.pipe;
                                        return [4 /*yield*/, (0, transpile_1.transpileIfNecessary)({ path: path, target: target, options: options, content: file })];
                                    case 8:
                                        output = _c.apply(void 0, [_d.sent(), (0, transpile_1.transformImports)({ target: target, options: options })]);
                                        return [2 /*return*/, { output: output, path: path }];
                                }
                            });
                        }); }))];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
if (require.main === module) {
    build().catch(console.error);
}
//# sourceMappingURL=data:application/json;base64,