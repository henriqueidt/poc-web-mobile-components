"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var mitosis_1 = require("@builder.io/mitosis");
var path_1 = require("path");
var get_mitosis_config_1 = require("../helpers/get-mitosis-config");
var command = {
    name: 'compile',
    alias: 'c',
    run: function (toolbox) { return __awaiter(void 0, void 0, void 0, function () {
        function readFiles() {
            return __asyncGenerator(this, arguments, function readFiles_1() {
                var data, _i, paths_1, path, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!isStdin) return [3 /*break*/, 4];
                            return [4 /*yield*/, __await(readStdin())];
                        case 1:
                            data = _a.sent();
                            return [4 /*yield*/, __await({ data: data })];
                        case 2: return [4 /*yield*/, _a.sent()];
                        case 3:
                            _a.sent();
                            _a.label = 4;
                        case 4:
                            _i = 0, paths_1 = paths;
                            _a.label = 5;
                        case 5:
                            if (!(_i < paths_1.length)) return [3 /*break*/, 9];
                            path = paths_1[_i];
                            if (filesystem.exists(path) !== 'file') {
                                print.error("\"".concat(path, "\" is not a file"));
                                process.exit(1);
                            }
                            data = filesystem.read(path);
                            return [4 /*yield*/, __await({ path: path, data: data })];
                        case 6: return [4 /*yield*/, _a.sent()];
                        case 7:
                            _a.sent();
                            _a.label = 8;
                        case 8:
                            _i++;
                            return [3 /*break*/, 5];
                        case 9: return [2 /*return*/];
                    }
                });
            });
        }
        var parameters, strings, filesystem, print, opts, configRelPath, from_, to, out, force, dryRun, outDir, header, plugins, mitosisConfig, generatorOptions, generatorOpts, paths, isStdin, generator, _a, _b, _c, data, path, output, json, isJSON, e_1_1;
        var e_1, _d;
        var _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
        return __generator(this, function (_s) {
            switch (_s.label) {
                case 0:
                    parameters = toolbox.parameters, strings = toolbox.strings, filesystem = toolbox.filesystem, print = toolbox.print;
                    opts = parameters.options;
                    if ((_f = (_e = opts.l) !== null && _e !== void 0 ? _e : opts.list) !== null && _f !== void 0 ? _f : false) {
                        return [2 /*return*/, listTargets()];
                    }
                    configRelPath = (_g = opts.config) !== null && _g !== void 0 ? _g : opts.c;
                    from_ = strings.camelCase((_j = (_h = opts.f) !== null && _h !== void 0 ? _h : opts.from) !== null && _j !== void 0 ? _j : 'mitosis');
                    to = strings.camelCase((_k = opts.t) !== null && _k !== void 0 ? _k : opts.to);
                    out = (_l = opts.o) !== null && _l !== void 0 ? _l : opts.out;
                    force = (_m = opts.force) !== null && _m !== void 0 ? _m : false;
                    dryRun = (_p = (_o = opts.dryRun) !== null && _o !== void 0 ? _o : opts.n) !== null && _p !== void 0 ? _p : false;
                    outDir = opts.outDir;
                    header = opts.header;
                    plugins = [];
                    if (!opts.builderComponents) {
                        plugins.push((0, mitosis_1.compileAwayBuilderComponents)());
                    }
                    mitosisConfig = (0, get_mitosis_config_1.getMitosisConfig)(configRelPath);
                    generatorOptions = (_q = mitosisConfig === null || mitosisConfig === void 0 ? void 0 : mitosisConfig.options) === null || _q === void 0 ? void 0 : _q[to];
                    generatorOpts = __assign(__assign({}, generatorOptions), { prettier: (_r = opts.prettier) !== null && _r !== void 0 ? _r : true, plugins: __spreadArray(__spreadArray([], plugins, true), ((generatorOptions === null || generatorOptions === void 0 ? void 0 : generatorOptions.plugins) || []), true), format: opts.format, prefix: opts.prefix, includeIds: opts.includeIds, stylesType: opts.styles, stateType: opts.state, type: opts.type, cssNamespace: opts.cssNamespace });
                    paths = parameters.array || [];
                    isStdin = parameters.first === '-' || paths.length === 0;
                    // Input validations
                    // Validate that "--to" is supported
                    if (!isTarget(to)) {
                        console.error("no matching output target for \"".concat(to, "\""));
                        process.exit(1);
                    }
                    generator = mitosis_1.targets[to];
                    if (out && paths.length > 1) {
                        console.error("--out doesn't support multiple input files, did you mean --outDir?");
                        process.exit(1);
                    }
                    _s.label = 1;
                case 1:
                    _s.trys.push([1, 6, 7, 12]);
                    _a = __asyncValues(readFiles());
                    _s.label = 2;
                case 2: return [4 /*yield*/, _a.next()];
                case 3:
                    if (!(_b = _s.sent(), !_b.done)) return [3 /*break*/, 5];
                    _c = _b.value, data = _c.data, path = _c.path;
                    output = void 0;
                    if (outDir) {
                        out = (0, path_1.join)(outDir, path);
                    }
                    // Validate that "--out" file doesn't already exist
                    if (force === false && out && filesystem.exists(out) === 'file') {
                        print.error("".concat(out, " already exists. Use --force if you want to overwrite existing files."));
                        process.exit(1);
                    }
                    try {
                        json = void 0;
                        switch (from_) {
                            case 'mitosis':
                                json = (0, mitosis_1.parseJsx)(data, { typescript: generatorOpts.typescript });
                                break;
                            case 'builder':
                                json = (0, mitosis_1.builderContentToMitosisComponent)(JSON.parse(data));
                                break;
                            default:
                                print.error("".concat(from_, " is not a valid input type"));
                                process.exit(1);
                        }
                        // TODO validate generator options
                        output = generator(generatorOpts)({ component: json, path: path });
                    }
                    catch (e) {
                        print.divider();
                        print.info("Path: ".concat(path));
                        print.divider();
                        print.info('Error:');
                        print.error(e);
                        process.exit(1);
                    }
                    isJSON = typeof output === 'object';
                    if (!isJSON) {
                        output = header ? "".concat(header, "\n").concat(output) : output;
                    }
                    if (!out) {
                        if (isJSON) {
                            console.log(JSON.stringify(output, null, 2));
                            return [2 /*return*/];
                        }
                        console.log(output);
                        return [2 /*return*/];
                    }
                    print.info(out);
                    if (!dryRun) {
                        filesystem.write(out, output);
                    }
                    _s.label = 4;
                case 4: return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 12];
                case 6:
                    e_1_1 = _s.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 12];
                case 7:
                    _s.trys.push([7, , 10, 11]);
                    if (!(_b && !_b.done && (_d = _a.return))) return [3 /*break*/, 9];
                    return [4 /*yield*/, _d.call(_a)];
                case 8:
                    _s.sent();
                    _s.label = 9;
                case 9: return [3 /*break*/, 11];
                case 10:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 11: return [7 /*endfinally*/];
                case 12: return [2 /*return*/];
            }
        });
    }); },
};
module.exports = command;
/**
 * List all targets (args to --to). This could be moved to it's own command at
 * some point depending on the desired API.
 */
function listTargets() {
    for (var _i = 0, _a = Object.keys(mitosis_1.targets); _i < _a.length; _i++) {
        var prop = _a[_i];
        console.log(prop);
    }
    return;
}
function isTarget(term) {
    return typeof mitosis_1.targets[term] !== 'undefined';
}
function readStdin() {
    return __awaiter(this, void 0, void 0, function () {
        var chunks;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    chunks = [];
                    return [4 /*yield*/, new Promise(function (res) {
                            return process.stdin
                                .on('data', function (data) {
                                return chunks.push(data);
                            })
                                .on('end', function () {
                                return res(true);
                            });
                        })];
                case 1:
                    _a.sent();
                    return [2 /*return*/, Buffer.concat(chunks).toString('utf-8')];
            }
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9jb21waWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0NBUzZCO0FBRTdCLDZCQUE0QjtBQUU1QixvRUFBaUU7QUFTakUsSUFBTSxPQUFPLEdBQW1CO0lBQzlCLElBQUksRUFBRSxTQUFTO0lBQ2YsS0FBSyxFQUFFLEdBQUc7SUFDVixHQUFHLEVBQUUsVUFBTyxPQUFPO1FBK0RqQixTQUFnQixTQUFTOzs7Ozs7aUNBQ25CLE9BQU8sRUFBUCx3QkFBTzs0QkFDSSw2QkFBTSxTQUFTLEVBQUUsR0FBQTs7NEJBQXhCLElBQUksR0FBRyxTQUFpQjt5REFDeEIsRUFBRSxJQUFJLE1BQUEsRUFBRTtnQ0FBZCxnQ0FBYzs7NEJBQWQsU0FBYyxDQUFDOzs7a0NBRU8sRUFBTCxlQUFLOzs7aUNBQUwsQ0FBQSxtQkFBSyxDQUFBOzRCQUFiLElBQUk7NEJBQ2IsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLE1BQU0sRUFBRTtnQ0FDdEMsS0FBSyxDQUFDLEtBQUssQ0FBQyxZQUFJLElBQUkscUJBQWlCLENBQUMsQ0FBQztnQ0FDdkMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzs2QkFDakI7NEJBQ0ssSUFBSSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7eURBQzdCLEVBQUUsSUFBSSxNQUFBLEVBQUUsSUFBSSxNQUFBLEVBQUU7Z0NBQXBCLGdDQUFvQjs7NEJBQXBCLFNBQW9CLENBQUM7Ozs0QkFOSixJQUFLLENBQUE7Ozs7OztTQVF6Qjs7Ozs7OztvQkEzRU8sVUFBVSxHQUFpQyxPQUFPLFdBQXhDLEVBQUUsT0FBTyxHQUF3QixPQUFPLFFBQS9C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