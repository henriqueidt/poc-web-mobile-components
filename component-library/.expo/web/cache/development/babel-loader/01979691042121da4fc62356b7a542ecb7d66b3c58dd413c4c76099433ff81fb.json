{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar expo_pwa_1 = require(\"expo-pwa\");\nvar webpack_1 = require(\"webpack\");\nvar ModifyJsonWebpackPlugin_1 = __importDefault(require(\"./ModifyJsonWebpackPlugin\"));\nvar ChromeIconsWebpackPlugin = function (_ModifyJsonWebpackPlu) {\n  _inherits(ChromeIconsWebpackPlugin, _ModifyJsonWebpackPlu);\n  var _super = _createSuper(ChromeIconsWebpackPlugin);\n  function ChromeIconsWebpackPlugin(options, icon) {\n    var _this;\n    _classCallCheck(this, ChromeIconsWebpackPlugin);\n    _this = _super.call(this);\n    _this.options = options;\n    _this.icon = icon;\n    return _this;\n  }\n  _createClass(ChromeIconsWebpackPlugin, [{\n    key: \"modifyAsync\",\n    value: function () {\n      var _modifyAsync = _asyncToGenerator(function* (compiler, compilation, data) {\n        var logger = compiler.getInfrastructureLogger('chrome-icons-plugin');\n        function logNotice(type, message) {\n          logger.log(chalk_1.default.magenta(\"\\u203A \" + type + \": \" + chalk_1.default.gray(message)));\n        }\n        function logWarning(type, message) {\n          logger.warn(chalk_1.default.yellow(\"\\u203A \" + type + \": \" + chalk_1.default.gray(message)));\n        }\n        if (Array.isArray(data.json.icons)) {\n          logNotice('Chrome Icons', \"Using custom `icons` from PWA manifest\");\n          return data;\n        }\n        if (!this.icon) {\n          logWarning('Chrome Icons', \"No template image found, skipping auto generation...\");\n          return data;\n        }\n        data.json.icons = [];\n        var iconAssets = yield (0, expo_pwa_1.generateChromeIconAsync)(this.options, this.icon, {});\n        for (var asset of iconAssets) {\n          compilation.emitAsset(asset.asset.path, new webpack_1.sources.RawSource(asset.asset.source));\n          data.json.icons.push(asset.manifest);\n        }\n        return data;\n      });\n      function modifyAsync(_x, _x2, _x3) {\n        return _modifyAsync.apply(this, arguments);\n      }\n      return modifyAsync;\n    }()\n  }]);\n  return ChromeIconsWebpackPlugin;\n}(ModifyJsonWebpackPlugin_1.default);\nexports.default = ChromeIconsWebpackPlugin;","map":{"version":3,"names":["chalk_1","__importDefault","require","expo_pwa_1","webpack_1","ModifyJsonWebpackPlugin_1","ChromeIconsWebpackPlugin","_ModifyJsonWebpackPlu","_inherits","_super","_createSuper","options","icon","_this","_classCallCheck","call","_createClass","key","value","_modifyAsync","_asyncToGenerator","compiler","compilation","data","logger","getInfrastructureLogger","logNotice","type","message","log","default","magenta","gray","logWarning","warn","yellow","Array","isArray","json","icons","iconAssets","generateChromeIconAsync","asset","emitAsset","path","sources","RawSource","source","push","manifest","modifyAsync","_x","_x2","_x3","apply","arguments","exports"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/plugins/ChromeIconsWebpackPlugin.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { generateChromeIconAsync, IconOptions, ProjectOptions } from 'expo-pwa';\nimport { Compilation, Compiler, sources } from 'webpack';\n\nimport { BeforeEmitOptions } from './JsonWebpackPlugin';\nimport ModifyJsonWebpackPlugin from './ModifyJsonWebpackPlugin';\n\nexport type Options = {\n  source: string;\n  outputPath?: string;\n  backgroundColor?: string;\n  resizeMode?: 'contain' | 'cover';\n};\n\nexport default class ChromeIconsWebpackPlugin extends ModifyJsonWebpackPlugin {\n  // Maybe we should support the ability to create all icons individually\n  constructor(private options: ProjectOptions, private icon: IconOptions | null) {\n    // TODO(Bacon): Validation\n    super();\n  }\n\n  async modifyAsync(\n    compiler: Compiler,\n    compilation: Compilation,\n    data: BeforeEmitOptions\n  ): Promise<BeforeEmitOptions> {\n    const logger = compiler.getInfrastructureLogger('chrome-icons-plugin');\n\n    function logNotice(type: string, message: string) {\n      logger.log(chalk.magenta(`\\u203A ${type}: ${chalk.gray(message)}`));\n    }\n\n    function logWarning(type: string, message: string) {\n      logger.warn(chalk.yellow(`\\u203A ${type}: ${chalk.gray(message)}`));\n    }\n\n    // If the icons array is already defined, then skip icon generation.\n    if (Array.isArray(data.json.icons)) {\n      logNotice('Chrome Icons', `Using custom \\`icons\\` from PWA manifest`);\n      return data;\n    }\n    if (!this.icon) {\n      logWarning('Chrome Icons', `No template image found, skipping auto generation...`);\n      return data;\n    }\n\n    data.json.icons = [];\n\n    const iconAssets = await generateChromeIconAsync(this.options, this.icon, {});\n\n    for (const asset of iconAssets) {\n      compilation.emitAsset(asset.asset.path, new sources.RawSource(asset.asset.source));\n      data.json.icons.push(asset.manifest);\n    }\n\n    return data;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAGA,IAAAG,yBAAA,GAAAJ,eAAA,CAAAC,OAAA;AAAgE,IAS3CI,wBAAyB,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,wBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,wBAAA;EAE5C,SAAAA,yBAAoBK,OAAuB,EAAUC,IAAwB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,wBAAA;IAE3EO,KAAA,GAAAJ,MAAA,CAAAM,IAAA;IAFkBF,KAAA,CAAAF,OAAO,GAAPA,OAAO;IAA0BE,KAAA,CAAAD,IAAI,GAAJA,IAAI;IAAoB,OAAAC,KAAA;EAG7E;EAACG,YAAA,CAAAV,wBAAA;IAAAW,GAAA;IAAAC,KAAA;MAAA,IAAAC,YAAA,GAAAC,iBAAA,CAED,WACEC,QAAkB,EAClBC,WAAwB,EACxBC,IAAuB;QAEvB,IAAMC,MAAM,GAAGH,QAAQ,CAACI,uBAAuB,CAAC,qBAAqB,CAAC;QAEtE,SAASC,SAASA,CAACC,IAAY,EAAEC,OAAe;UAC9CJ,MAAM,CAACK,GAAG,CAAC7B,OAAA,CAAA8B,OAAK,CAACC,OAAO,aAAWJ,IAAI,UAAK3B,OAAA,CAAA8B,OAAK,CAACE,IAAI,CAACJ,OAAO,CAAC,CAAG,CAAC;QACrE;QAEA,SAASK,UAAUA,CAACN,IAAY,EAAEC,OAAe;UAC/CJ,MAAM,CAACU,IAAI,CAAClC,OAAA,CAAA8B,OAAK,CAACK,MAAM,aAAWR,IAAI,UAAK3B,OAAA,CAAA8B,OAAK,CAACE,IAAI,CAACJ,OAAO,CAAC,CAAG,CAAC;QACrE;QAGA,IAAIQ,KAAK,CAACC,OAAO,CAACd,IAAI,CAACe,IAAI,CAACC,KAAK,CAAC,EAAE;UAClCb,SAAS,CAAC,cAAc,2CAA6C;UACrE,OAAOH,IAAI;;QAEb,IAAI,CAAC,IAAI,CAACX,IAAI,EAAE;UACdqB,UAAU,CAAC,cAAc,yDAAyD;UAClF,OAAOV,IAAI;;QAGbA,IAAI,CAACe,IAAI,CAACC,KAAK,GAAG,EAAE;QAEpB,IAAMC,UAAU,SAAS,IAAArC,UAAA,CAAAsC,uBAAuB,EAAC,IAAI,CAAC9B,OAAO,EAAE,IAAI,CAACC,IAAI,EAAE,EAAE,CAAC;QAE7E,KAAK,IAAM8B,KAAK,IAAIF,UAAU,EAAE;UAC9BlB,WAAW,CAACqB,SAAS,CAACD,KAAK,CAACA,KAAK,CAACE,IAAI,EAAE,IAAIxC,SAAA,CAAAyC,OAAO,CAACC,SAAS,CAACJ,KAAK,CAACA,KAAK,CAACK,MAAM,CAAC,CAAC;UAClFxB,IAAI,CAACe,IAAI,CAACC,KAAK,CAACS,IAAI,CAACN,KAAK,CAACO,QAAQ,CAAC;;QAGtC,OAAO1B,IAAI;MACb,CAAC;MAAA,SAAA2B,YAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAlC,YAAA,CAAAmC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAL,WAAA;IAAA;EAAA;EAAA,OAAA5C,wBAAA;AAAA,EA1CmDD,yBAAA,CAAAyB,OAAuB;AAA7E0B,OAAA,CAAA1B,OAAA,GAAAxB,wBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}