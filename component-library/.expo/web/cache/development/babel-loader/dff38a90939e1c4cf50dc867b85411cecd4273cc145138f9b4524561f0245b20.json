{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWindowSoftInputModeMode = getWindowSoftInputModeMode;\nexports.setWindowSoftInputModeMode = setWindowSoftInputModeMode;\nexports.withWindowSoftInputMode = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar ANDROID_WINDOW_SOFT_INPUT_MODE = 'android:windowSoftInputMode';\nvar MAPPING = {\n  pan: 'adjustPan',\n  resize: 'adjustResize'\n};\nvar withWindowSoftInputMode = function withWindowSoftInputMode(config) {\n  return (0, _androidPlugins().withAndroidManifest)(config, function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      config.modResults = setWindowSoftInputModeMode(config, config.modResults);\n      return config;\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\nexports.withWindowSoftInputMode = withWindowSoftInputMode;\nfunction setWindowSoftInputModeMode(config, androidManifest) {\n  var app = (0, _Manifest().getMainActivityOrThrow)(androidManifest);\n  app.$[ANDROID_WINDOW_SOFT_INPUT_MODE] = getWindowSoftInputModeMode(config);\n  return androidManifest;\n}\nfunction getWindowSoftInputModeMode(config) {\n  var _config$android, _MAPPING$value;\n  var value = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.softwareKeyboardLayoutMode;\n  if (!value) {\n    return 'adjustResize';\n  }\n  return (_MAPPING$value = MAPPING[value]) !== null && _MAPPING$value !== void 0 ? _MAPPING$value : value;\n}","map":{"version":3,"names":["_androidPlugins","data","require","_Manifest","ANDROID_WINDOW_SOFT_INPUT_MODE","MAPPING","pan","resize","withWindowSoftInputMode","config","withAndroidManifest","_ref","_asyncToGenerator","modResults","setWindowSoftInputModeMode","_x","apply","arguments","androidManifest","app","getMainActivityOrThrow","$","getWindowSoftInputModeMode","_config$android","_MAPPING$value","value","android","softwareKeyboardLayoutMode"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/WindowSoftInputMode.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withAndroidManifest } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nconst ANDROID_WINDOW_SOFT_INPUT_MODE = 'android:windowSoftInputMode';\n\nconst MAPPING: Record<string, string> = {\n  pan: 'adjustPan',\n  resize: 'adjustResize',\n};\n\nexport const withWindowSoftInputMode: ConfigPlugin = config => {\n  return withAndroidManifest(config, async config => {\n    config.modResults = setWindowSoftInputModeMode(config, config.modResults);\n    return config;\n  });\n};\n\nexport function setWindowSoftInputModeMode(\n  config: Pick<ExpoConfig, 'android' | 'userInterfaceStyle'>,\n  androidManifest: AndroidManifest\n) {\n  const app = getMainActivityOrThrow(androidManifest);\n  app.$[ANDROID_WINDOW_SOFT_INPUT_MODE] = getWindowSoftInputModeMode(config);\n  return androidManifest;\n}\n\nexport function getWindowSoftInputModeMode(config: Pick<ExpoConfig, 'android'>) {\n  const value = config.android?.softwareKeyboardLayoutMode;\n\n  if (!value) {\n    // Default to `adjustResize` or `resize`.\n    return 'adjustResize';\n  }\n  return MAPPING[value] ?? value;\n}\n"],"mappings":";;;;;;;;;AAGA,SAAAA,gBAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,eAAA,YAAAA,gBAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,UAAA;EAAA,IAAAF,IAAA,GAAAC,OAAA;EAAAC,SAAA,YAAAA,UAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAMG,8BAA8B,GAAG,6BAAvC;AAEA,IAAMC,OAA+B,GAAG;EACtCC,GAAG,EAAE,WADiC;EAEtCC,MAAM,EAAE;AAF8B,CAAxC;AAKO,IAAMC,uBAAqC,GAAG,SAAxCA,uBAAqCA,CAAGC,MAAM,EAAI;EAC7D,OAAO,IAAAT,eAAA,GAAAU,mBAAA,EAAoBD,MAApB;IAAA,IAAAE,IAAA,GAAAC,iBAAA,CAA4B,WAAMH,MAAN,EAAgB;MACjDA,MAAM,CAACI,UAAP,GAAoBC,0BAA0B,CAACL,MAAD,EAASA,MAAM,CAACI,UAAhB,CAA9C;MACA,OAAOJ,MAAP;IACD,CAHM;IAAA,iBAAAM,EAAA;MAAA,OAAAJ,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,IAAP;AAID,CALM;;AAOA,SAASH,0BAATA,CACLL,MADK,EAELS,eAFK,EAGL;EACA,IAAMC,GAAG,GAAG,IAAAhB,SAAA,GAAAiB,sBAAA,EAAuBF,eAAvB,CAAZ;EACAC,GAAG,CAACE,CAAJ,CAAMjB,8BAAN,IAAwCkB,0BAA0B,CAACb,MAAD,CAAlE;EACA,OAAOS,eAAP;AACD;AAEM,SAASI,0BAATA,CAAoCb,MAApC,EAAyE;EAAA,IAAAc,eAAA,EAAAC,cAAA;EAC9E,IAAMC,KAAK,IAAAF,eAAA,GAAGd,MAAM,CAACiB,OAAV,cAAAH,eAAA,uBAAGA,eAAA,CAAgBI,0BAA9B;EAEA,IAAI,CAACF,KAAL,EAAY;IAEV,OAAO,cAAP;EACD;EACD,QAAAD,cAAA,GAAOnB,OAAO,CAACoB,KAAD,CAAd,cAAAD,cAAA,cAAAA,cAAA,GAAyBC,KAAzB;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}