{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getMode(_ref) {\n  var production = _ref.production,\n    development = _ref.development,\n    mode = _ref.mode;\n  if (mode === undefined) {\n    if (process.env.NODE_ENV != null && isValidMode(process.env.NODE_ENV)) {\n      return process.env.NODE_ENV.toLowerCase();\n    }\n  } else if (isValidMode(mode)) {\n    return mode.toLowerCase();\n  }\n  if (production) {\n    return 'production';\n  } else if (development) {\n    return 'development';\n  }\n  return 'development';\n}\nexports.default = getMode;\nfunction isValidMode(inputMode) {\n  var mode = inputMode || '';\n  if (typeof inputMode === 'string') {\n    mode = inputMode.toLowerCase();\n  }\n  return !!mode && ['none', 'production', 'development'].includes(mode);\n}","map":{"version":3,"names":["getMode","_ref","production","development","mode","undefined","process","env","NODE_ENV","isValidMode","toLowerCase","exports","default","inputMode","includes"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/env/getMode.ts"],"sourcesContent":["import { Mode } from '../types';\n\n/**\n * Resolve the `mode` in a way that accounts for legacy treatment and environment variables.\n *\n * mode -> production -> development -> process.env.NODE_ENV -> 'development'\n * @category env\n */\nexport default function getMode({\n  production,\n  development,\n  mode,\n}: {\n  production?: boolean;\n  development?: boolean;\n  mode?: string;\n}): Mode {\n  if (mode === undefined) {\n    if (process.env.NODE_ENV != null && isValidMode(process.env.NODE_ENV)) {\n      return process.env.NODE_ENV.toLowerCase() as Mode;\n    }\n  } else if (isValidMode(mode)) {\n    return mode.toLowerCase() as Mode;\n  }\n  if (production) {\n    return 'production';\n  } else if (development) {\n    return 'development';\n  }\n  return 'development';\n}\n\nfunction isValidMode(inputMode?: string): boolean {\n  let mode = inputMode || '';\n  if (typeof inputMode === 'string') {\n    mode = inputMode.toLowerCase();\n  }\n  return !!mode && ['none', 'production', 'development'].includes(mode);\n}\n"],"mappings":";;;;;AAQA,SAAwBA,OAAOA,CAAAC,IAAA,EAQ9B;EAAA,IAPCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IACVC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,IAAI,GAAAH,IAAA,CAAJG,IAAI;EAMJ,IAAIA,IAAI,KAAKC,SAAS,EAAE;IACtB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAI,IAAI,IAAIC,WAAW,CAACH,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC,EAAE;MACrE,OAAOF,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,WAAW,EAAU;;GAEpD,MAAM,IAAID,WAAW,CAACL,IAAI,CAAC,EAAE;IAC5B,OAAOA,IAAI,CAACM,WAAW,EAAU;;EAEnC,IAAIR,UAAU,EAAE;IACd,OAAO,YAAY;GACpB,MAAM,IAAIC,WAAW,EAAE;IACtB,OAAO,aAAa;;EAEtB,OAAO,aAAa;AACtB;AAtBAQ,OAAA,CAAAC,OAAA,GAAAZ,OAAA;AAwBA,SAASS,WAAWA,CAACI,SAAkB;EACrC,IAAIT,IAAI,GAAGS,SAAS,IAAI,EAAE;EAC1B,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;IACjCT,IAAI,GAAGS,SAAS,CAACH,WAAW,EAAE;;EAEhC,OAAO,CAAC,CAACN,IAAI,IAAI,CAAC,MAAM,EAAE,YAAY,EAAE,aAAa,CAAC,CAACU,QAAQ,CAACV,IAAI,CAAC;AACvE"},"metadata":{},"sourceType":"script","externalDependencies":[]}