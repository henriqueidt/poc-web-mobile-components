{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withConfigPlugins = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Serialize() {\n  var data = require(\"../Serialize\");\n  _Serialize = function _Serialize() {\n    return data;\n  };\n  return data;\n}\nvar withConfigPlugins = function withConfigPlugins(config, skipPlugins) {\n  var _config$plugins;\n  if (!Array.isArray(config.plugins) || !((_config$plugins = config.plugins) !== null && _config$plugins !== void 0 && _config$plugins.length)) {\n    return config;\n  }\n  if (!skipPlugins) {\n    config = (0, _configPlugins().withPlugins)(config, config.plugins);\n  } else {\n    delete config.plugins;\n  }\n  return (0, _Serialize().serializeAfterStaticPlugins)(config);\n};\nexports.withConfigPlugins = withConfigPlugins;","map":{"version":3,"names":["_configPlugins","data","require","_Serialize","withConfigPlugins","config","skipPlugins","_config$plugins","Array","isArray","plugins","length","withPlugins","serializeAfterStaticPlugins"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config/src/plugins/withConfigPlugins.ts"],"sourcesContent":["import { ConfigPlugin, withPlugins } from '@expo/config-plugins';\n\nimport { serializeAfterStaticPlugins } from '../Serialize';\n\n/**\n * Resolves static plugins array as config plugin functions.\n *\n * @param config\n * @param projectRoot\n */\nexport const withConfigPlugins: ConfigPlugin<boolean> = (config, skipPlugins) => {\n  // @ts-ignore: plugins not on config type yet -- TODO\n  if (!Array.isArray(config.plugins) || !config.plugins?.length) {\n    return config;\n  }\n  if (!skipPlugins) {\n    // Resolve and evaluate plugins\n    // @ts-ignore: TODO: add plugins to the config schema\n    config = withPlugins(config, config.plugins);\n  } else {\n    // Delete the plugins array in case someone added functions or other values which cannot be automatically serialized.\n    delete config.plugins;\n  }\n  // plugins aren't serialized by default, serialize the plugins after resolving them.\n  return serializeAfterStaticPlugins(config);\n};\n"],"mappings":";;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAE,WAAA;EAAA,IAAAF,IAAA,GAAAC,OAAA;EAAAC,UAAA,YAAAA,WAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAQO,IAAMG,iBAAwC,GAAG,SAA3CA,iBAAwCA,CAAIC,MAAD,EAASC,WAAT,EAAyB;EAAA,IAAAC,eAAA;EAE/E,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,MAAM,CAACK,OAArB,CAAD,IAAkC,GAAAH,eAAA,GAACF,MAAM,CAACK,OAAR,cAAAH,eAAA,eAACA,eAAA,CAAgBI,MAAjB,CAAtC,EAA+D;IAC7D,OAAON,MAAP;EACD;EACD,IAAI,CAACC,WAAL,EAAkB;IAGhBD,MAAM,GAAG,IAAAL,cAAA,GAAAY,WAAA,EAAYP,MAAZ,EAAoBA,MAAM,CAACK,OAA3B,CAAT;EACD,CAJD,MAIO;IAEL,OAAOL,MAAM,CAACK,OAAd;EACD;EAED,OAAO,IAAAP,UAAA,GAAAU,2BAAA,EAA4BR,MAA5B,CAAP;AACD,CAfM"},"metadata":{},"sourceType":"script","externalDependencies":[]}