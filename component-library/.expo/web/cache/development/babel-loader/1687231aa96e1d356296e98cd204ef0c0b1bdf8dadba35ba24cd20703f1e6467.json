{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JS_ENGINE_PROP_KEY = exports.DEFAULT_JS_ENGINE = void 0;\nexports.getJsEngine = getJsEngine;\nexports.setJsEngine = setJsEngine;\nexports.withJsEngineGradleProps = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nvar JS_ENGINE_PROP_KEY = 'expo.jsEngine';\nexports.JS_ENGINE_PROP_KEY = JS_ENGINE_PROP_KEY;\nvar DEFAULT_JS_ENGINE = 'jsc';\nexports.DEFAULT_JS_ENGINE = DEFAULT_JS_ENGINE;\nvar withJsEngineGradleProps = function withJsEngineGradleProps(config) {\n  return (0, _androidPlugins().withGradleProperties)(config, function (config) {\n    config.modResults = setJsEngine(config, config.modResults);\n    return config;\n  });\n};\nexports.withJsEngineGradleProps = withJsEngineGradleProps;\nfunction getJsEngine(config) {\n  var _ref, _config$android$jsEng, _config$android;\n  return (_ref = (_config$android$jsEng = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.jsEngine) !== null && _config$android$jsEng !== void 0 ? _config$android$jsEng : config.jsEngine) !== null && _ref !== void 0 ? _ref : DEFAULT_JS_ENGINE;\n}\nfunction setJsEngine(config, gradleProperties) {\n  var _ref2, _config$android$jsEng2, _config$android2;\n  var oldPropIndex = gradleProperties.findIndex(function (prop) {\n    return prop.type === 'property' && prop.key === JS_ENGINE_PROP_KEY;\n  });\n  var newProp = {\n    type: 'property',\n    key: JS_ENGINE_PROP_KEY,\n    value: (_ref2 = (_config$android$jsEng2 = (_config$android2 = config.android) === null || _config$android2 === void 0 ? void 0 : _config$android2.jsEngine) !== null && _config$android$jsEng2 !== void 0 ? _config$android$jsEng2 : config.jsEngine) !== null && _ref2 !== void 0 ? _ref2 : DEFAULT_JS_ENGINE\n  };\n  if (oldPropIndex >= 0) {\n    gradleProperties[oldPropIndex] = newProp;\n  } else {\n    gradleProperties.push(newProp);\n  }\n  return gradleProperties;\n}","map":{"version":3,"names":["_androidPlugins","data","require","JS_ENGINE_PROP_KEY","DEFAULT_JS_ENGINE","withJsEngineGradleProps","config","withGradleProperties","modResults","setJsEngine","getJsEngine","_ref","_config$android$jsEng","_config$android","android","jsEngine","gradleProperties","_ref2","_config$android$jsEng2","_config$android2","oldPropIndex","findIndex","prop","type","key","newProp","value","push"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/JsEngine.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\n\nimport type { ConfigPlugin } from '../Plugin.types';\nimport { withGradleProperties } from '../plugins/android-plugins';\nimport type { PropertiesItem } from './Properties';\n\nexport const JS_ENGINE_PROP_KEY = 'expo.jsEngine';\nexport const DEFAULT_JS_ENGINE = 'jsc';\n\nexport const withJsEngineGradleProps: ConfigPlugin = config => {\n  return withGradleProperties(config, config => {\n    config.modResults = setJsEngine(config, config.modResults);\n    return config;\n  });\n};\n\nexport function getJsEngine(config: Pick<ExpoConfig, 'android' | 'jsEngine'>) {\n  return config.android?.jsEngine ?? config.jsEngine ?? DEFAULT_JS_ENGINE;\n}\n\nexport function setJsEngine(\n  config: Pick<ExpoConfig, 'android' | 'jsEngine'>,\n  gradleProperties: PropertiesItem[]\n): PropertiesItem[] {\n  const oldPropIndex = gradleProperties.findIndex(\n    prop => prop.type === 'property' && prop.key === JS_ENGINE_PROP_KEY\n  );\n  const newProp: PropertiesItem = {\n    type: 'property',\n    key: JS_ENGINE_PROP_KEY,\n    value: config.android?.jsEngine ?? config.jsEngine ?? DEFAULT_JS_ENGINE,\n  };\n\n  if (oldPropIndex >= 0) {\n    gradleProperties[oldPropIndex] = newProp;\n  } else {\n    gradleProperties.push(newProp);\n  }\n\n  return gradleProperties;\n}\n"],"mappings":";;;;;;;;;AAGA,SAAAA,gBAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,eAAA,YAAAA,gBAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGO,IAAME,kBAAkB,GAAG,eAA3B;;AACA,IAAMC,iBAAiB,GAAG,KAA1B;;AAEA,IAAMC,uBAAqC,GAAG,SAAxCA,uBAAqCA,CAAGC,MAAM,EAAI;EAC7D,OAAO,IAAAN,eAAA,GAAAO,oBAAA,EAAqBD,MAArB,EAA6B,UAAAA,MAAM,EAAI;IAC5CA,MAAM,CAACE,UAAP,GAAoBC,WAAW,CAACH,MAAD,EAASA,MAAM,CAACE,UAAhB,CAA/B;IACA,OAAOF,MAAP;EACD,CAHM,CAAP;AAID,CALM;;AAOA,SAASI,WAATA,CAAqBJ,MAArB,EAAuE;EAAA,IAAAK,IAAA,EAAAC,qBAAA,EAAAC,eAAA;EAC5E,QAAAF,IAAA,IAAAC,qBAAA,IAAAC,eAAA,GAAOP,MAAM,CAACQ,OAAd,cAAAD,eAAA,uBAAOA,eAAA,CAAgBE,QAAvB,cAAAH,qBAAA,cAAAA,qBAAA,GAAmCN,MAAM,CAACS,QAA1C,cAAAJ,IAAA,cAAAA,IAAA,GAAsDP,iBAAtD;AACD;AAEM,SAASK,WAATA,CACLH,MADK,EAELU,gBAFK,EAGa;EAAA,IAAAC,KAAA,EAAAC,sBAAA,EAAAC,gBAAA;EAClB,IAAMC,YAAY,GAAGJ,gBAAgB,CAACK,SAAjB,CACnB,UAAAC,IAAI;IAAA,OAAIA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4BD,IAAI,CAACE,GAAL,KAAarB,kBAD9B;EAAA,EAArB;EAGA,IAAMsB,OAAuB,GAAG;IAC9BF,IAAI,EAAE,UADwB;IAE9BC,GAAG,EAAErB,kBAFyB;IAG9BuB,KAAK,GAAAT,KAAA,IAAAC,sBAAA,IAAAC,gBAAA,GAAEb,MAAM,CAACQ,OAAT,cAAAK,gBAAA,uBAAEA,gBAAA,CAAgBJ,QAAlB,cAAAG,sBAAA,cAAAA,sBAAA,GAA8BZ,MAAM,CAACS,QAArC,cAAAE,KAAA,cAAAA,KAAA,GAAiDb;EAHxB,CAAhC;EAMA,IAAIgB,YAAY,IAAI,CAApB,EAAuB;IACrBJ,gBAAgB,CAACI,YAAD,CAAhB,GAAiCK,OAAjC;EACD,CAFD,MAEO;IACLT,gBAAgB,CAACW,IAAjB,CAAsBF,OAAtB;EACD;EAED,OAAOT,gBAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}