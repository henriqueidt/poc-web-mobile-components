{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addMetaDataItemToMainApplication = addMetaDataItemToMainApplication;\nexports.addUsesLibraryItemToMainApplication = addUsesLibraryItemToMainApplication;\nexports.findMetaDataItem = findMetaDataItem;\nexports.findUsesLibraryItem = findUsesLibraryItem;\nexports.getMainActivity = getMainActivity;\nexports.getMainActivityOrThrow = getMainActivityOrThrow;\nexports.getMainApplication = getMainApplication;\nexports.getMainApplicationMetaDataValue = getMainApplicationMetaDataValue;\nexports.getMainApplicationOrThrow = getMainApplicationOrThrow;\nexports.getRunnableActivity = getRunnableActivity;\nexports.prefixAndroidKeys = prefixAndroidKeys;\nexports.readAndroidManifestAsync = readAndroidManifestAsync;\nexports.removeMetaDataItemFromMainApplication = removeMetaDataItemFromMainApplication;\nexports.removeUsesLibraryItemFromMainApplication = removeUsesLibraryItemFromMainApplication;\nexports.writeAndroidManifestAsync = writeAndroidManifestAsync;\nfunction _assert() {\n  var data = _interopRequireDefault(require(\"assert\"));\n  _assert = function _assert() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction XML() {\n  var data = _interopRequireWildcard(require(\"../utils/XML\"));\n  XML = function XML() {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction writeAndroidManifestAsync(_x, _x2) {\n  return _writeAndroidManifestAsync.apply(this, arguments);\n}\nfunction _writeAndroidManifestAsync() {\n  _writeAndroidManifestAsync = _asyncToGenerator(function* (manifestPath, androidManifest) {\n    var manifestXml = XML().format(androidManifest);\n    yield _fs().default.promises.mkdir(_path().default.dirname(manifestPath), {\n      recursive: true\n    });\n    yield _fs().default.promises.writeFile(manifestPath, manifestXml);\n  });\n  return _writeAndroidManifestAsync.apply(this, arguments);\n}\nfunction readAndroidManifestAsync(_x3) {\n  return _readAndroidManifestAsync.apply(this, arguments);\n}\nfunction _readAndroidManifestAsync() {\n  _readAndroidManifestAsync = _asyncToGenerator(function* (manifestPath) {\n    var xml = yield XML().readXMLAsync({\n      path: manifestPath\n    });\n    if (!isManifest(xml)) {\n      throw new Error('Invalid manifest found at: ' + manifestPath);\n    }\n    return xml;\n  });\n  return _readAndroidManifestAsync.apply(this, arguments);\n}\nfunction isManifest(xml) {\n  return !!xml.manifest;\n}\nfunction getMainApplication(androidManifest) {\n  var _androidManifest$mani, _androidManifest$mani2, _androidManifest$mani3;\n  return (_androidManifest$mani = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani2 = androidManifest.manifest) === null || _androidManifest$mani2 === void 0 ? void 0 : (_androidManifest$mani3 = _androidManifest$mani2.application) === null || _androidManifest$mani3 === void 0 ? void 0 : _androidManifest$mani3.filter(function (e) {\n    var _e$$;\n    return e === null || e === void 0 ? void 0 : (_e$$ = e.$) === null || _e$$ === void 0 ? void 0 : _e$$['android:name'].endsWith('.MainApplication');\n  })[0]) !== null && _androidManifest$mani !== void 0 ? _androidManifest$mani : null;\n}\nfunction getMainApplicationOrThrow(androidManifest) {\n  var mainApplication = getMainApplication(androidManifest);\n  (0, _assert().default)(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\nfunction getMainActivityOrThrow(androidManifest) {\n  var mainActivity = getMainActivity(androidManifest);\n  (0, _assert().default)(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\nfunction getRunnableActivity(androidManifest) {\n  var _androidManifest$mani4, _androidManifest$mani5, _androidManifest$mani6, _androidManifest$mani7, _androidManifest$mani8;\n  var enabledActivities = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani4 = androidManifest.manifest) === null || _androidManifest$mani4 === void 0 ? void 0 : (_androidManifest$mani5 = _androidManifest$mani4.application) === null || _androidManifest$mani5 === void 0 ? void 0 : (_androidManifest$mani6 = _androidManifest$mani5[0]) === null || _androidManifest$mani6 === void 0 ? void 0 : (_androidManifest$mani7 = _androidManifest$mani6.activity) === null || _androidManifest$mani7 === void 0 ? void 0 : (_androidManifest$mani8 = _androidManifest$mani7.filter) === null || _androidManifest$mani8 === void 0 ? void 0 : _androidManifest$mani8.call(_androidManifest$mani7, function (e) {\n    return e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false;\n  });\n  if (!enabledActivities) {\n    return null;\n  }\n  for (var activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (var intentFilter of activity['intent-filter']) {\n        var _intentFilter$action, _intentFilter$categor;\n        if ((_intentFilter$action = intentFilter.action) !== null && _intentFilter$action !== void 0 && _intentFilter$action.find(function (action) {\n          return action.$['android:name'] === 'android.intent.action.MAIN';\n        }) && (_intentFilter$categor = intentFilter.category) !== null && _intentFilter$categor !== void 0 && _intentFilter$categor.find(function (category) {\n          return category.$['android:name'] === 'android.intent.category.LAUNCHER';\n        })) {\n          return activity;\n        }\n      }\n    }\n  }\n  return null;\n}\nfunction getMainActivity(androidManifest) {\n  var _androidManifest$mani9, _androidManifest$mani10, _androidManifest$mani11, _androidManifest$mani12, _androidManifest$mani13, _mainActivity$;\n  var mainActivity = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani9 = androidManifest.manifest) === null || _androidManifest$mani9 === void 0 ? void 0 : (_androidManifest$mani10 = _androidManifest$mani9.application) === null || _androidManifest$mani10 === void 0 ? void 0 : (_androidManifest$mani11 = _androidManifest$mani10[0]) === null || _androidManifest$mani11 === void 0 ? void 0 : (_androidManifest$mani12 = _androidManifest$mani11.activity) === null || _androidManifest$mani12 === void 0 ? void 0 : (_androidManifest$mani13 = _androidManifest$mani12.filter) === null || _androidManifest$mani13 === void 0 ? void 0 : _androidManifest$mani13.call(_androidManifest$mani12, function (e) {\n    return e.$['android:name'] === '.MainActivity';\n  });\n  return (_mainActivity$ = mainActivity === null || mainActivity === void 0 ? void 0 : mainActivity[0]) !== null && _mainActivity$ !== void 0 ? _mainActivity$ : null;\n}\nfunction addMetaDataItemToMainApplication(mainApplication, itemName, itemValue) {\n  var itemType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'value';\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(_defineProperty({\n      name: itemName\n    }, itemType, itemValue))\n  };\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[\"android:\" + itemType] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\nfunction removeMetaDataItemFromMainApplication(mainApplication, itemName) {\n  var index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\nfunction findApplicationSubItem(mainApplication, category, itemName) {\n  var parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    var index = parent.findIndex(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    return index;\n  }\n  return -1;\n}\nfunction findMetaDataItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\nfunction findUsesLibraryItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\nfunction getMainApplicationMetaDataValue(androidManifest, name) {\n  var mainApplication = getMainApplication(androidManifest);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication.hasOwnProperty('meta-data')) {\n    var _mainApplication$meta, _item$$$androidValue;\n    var item = mainApplication === null || mainApplication === void 0 ? void 0 : (_mainApplication$meta = mainApplication['meta-data']) === null || _mainApplication$meta === void 0 ? void 0 : _mainApplication$meta.find(function (e) {\n      return e.$['android:name'] === name;\n    });\n    return (_item$$$androidValue = item === null || item === void 0 ? void 0 : item.$['android:value']) !== null && _item$$$androidValue !== void 0 ? _item$$$androidValue : null;\n  }\n  return null;\n}\nfunction addUsesLibraryItemToMainApplication(mainApplication, item) {\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(item)\n  };\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(function (e) {\n      return e.$['android:name'] === item.name;\n    });\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\nfunction removeUsesLibraryItemFromMainApplication(mainApplication, itemName) {\n  var index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\nfunction prefixAndroidKeys(head) {\n  return Object.entries(head).reduce(function (prev, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      curr = _ref2[1];\n    return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, \"android:\" + key, curr));\n  }, {});\n}","map":{"version":3,"names":["_assert","data","_interopRequireDefault","require","_fs","_path","XML","_interopRequireWildcard","writeAndroidManifestAsync","_x","_x2","_writeAndroidManifestAsync","apply","arguments","_asyncToGenerator","manifestPath","androidManifest","manifestXml","format","default","promises","mkdir","dirname","recursive","writeFile","readAndroidManifestAsync","_x3","_readAndroidManifestAsync","xml","readXMLAsync","path","isManifest","Error","manifest","getMainApplication","_androidManifest$mani","_androidManifest$mani2","_androidManifest$mani3","application","filter","e","_e$$","$","endsWith","getMainApplicationOrThrow","mainApplication","getMainActivityOrThrow","mainActivity","getMainActivity","getRunnableActivity","_androidManifest$mani4","_androidManifest$mani5","_androidManifest$mani6","_androidManifest$mani7","_androidManifest$mani8","enabledActivities","activity","call","Array","isArray","intentFilter","_intentFilter$action","_intentFilter$categor","action","find","category","_androidManifest$mani9","_androidManifest$mani10","_androidManifest$mani11","_androidManifest$mani12","_androidManifest$mani13","_mainActivity$","addMetaDataItemToMainApplication","itemName","itemValue","itemType","length","undefined","existingMetaDataItem","newItem","prefixAndroidKeys","_defineProperty","name","push","removeMetaDataItemFromMainApplication","index","findMetaDataItem","splice","findApplicationSubItem","parent","findIndex","findUsesLibraryItem","getMainApplicationMetaDataValue","hasOwnProperty","_mainApplication$meta","_item$$$androidValue","item","addUsesLibraryItemToMainApplication","removeUsesLibraryItemFromMainApplication","head","Object","entries","reduce","prev","_ref","_ref2","_slicedToArray","key","curr","_objectSpread"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/Manifest.ts"],"sourcesContent":["import assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as XML from '../utils/XML';\n\nexport type StringBoolean = 'true' | 'false';\n\ntype ManifestMetaDataAttributes = AndroidManifestAttributes & {\n  'android:value'?: string;\n  'android:resource'?: string;\n};\n\ntype AndroidManifestAttributes = {\n  'android:name': string | 'android.intent.action.VIEW';\n  'tools:node'?: string | 'remove';\n};\n\ntype ManifestAction = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestCategory = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestData = {\n  $: {\n    [key: string]: string | undefined;\n    'android:host'?: string;\n    'android:pathPrefix'?: string;\n    'android:scheme'?: string;\n  };\n};\n\ntype ManifestReceiver = {\n  $: AndroidManifestAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:enabled'?: StringBoolean;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\nexport type ManifestIntentFilter = {\n  $?: {\n    'android:autoVerify'?: StringBoolean;\n    'data-generated'?: StringBoolean;\n  };\n  action?: ManifestAction[];\n  data?: ManifestData[];\n  category?: ManifestCategory[];\n};\n\nexport type ManifestMetaData = {\n  $: ManifestMetaDataAttributes;\n};\n\ntype ManifestServiceAttributes = AndroidManifestAttributes & {\n  'android:enabled'?: StringBoolean;\n  'android:exported'?: StringBoolean;\n  'android:permission'?: string;\n  // ...\n};\n\ntype ManifestService = {\n  $: ManifestServiceAttributes;\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\ntype ManifestApplicationAttributes = {\n  'android:name': string | '.MainApplication';\n  'android:icon'?: string;\n  'android:label'?: string;\n  'android:allowBackup'?: StringBoolean;\n  'android:largeHeap'?: StringBoolean;\n  'android:requestLegacyExternalStorage'?: StringBoolean;\n  'android:usesCleartextTraffic'?: StringBoolean;\n  [key: string]: string | undefined;\n};\n\nexport type ManifestActivity = {\n  $: ManifestApplicationAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:launchMode'?: string;\n    'android:theme'?: string;\n    'android:windowSoftInputMode'?:\n      | string\n      | 'stateUnspecified'\n      | 'stateUnchanged'\n      | 'stateHidden'\n      | 'stateAlwaysHidden'\n      | 'stateVisible'\n      | 'stateAlwaysVisible'\n      | 'adjustUnspecified'\n      | 'adjustResize'\n      | 'adjustPan';\n    [key: string]: string | undefined;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n  // ...\n};\n\nexport type ManifestUsesLibrary = {\n  $: AndroidManifestAttributes & {\n    'android:required'?: StringBoolean;\n  };\n};\n\nexport type ManifestApplication = {\n  $: ManifestApplicationAttributes;\n  activity?: ManifestActivity[];\n  service?: ManifestService[];\n  receiver?: ManifestReceiver[];\n  'meta-data'?: ManifestMetaData[];\n  'uses-library'?: ManifestUsesLibrary[];\n  // ...\n};\n\ntype ManifestPermission = {\n  $: AndroidManifestAttributes & {\n    'android:protectionLevel'?: string | 'signature';\n  };\n};\n\nexport type ManifestUsesPermission = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestUsesFeature = {\n  $: AndroidManifestAttributes & {\n    'android:glEsVersion'?: string;\n    'android:required': StringBoolean;\n  };\n};\n\nexport type AndroidManifest = {\n  manifest: {\n    // Probably more, but this is currently all we'd need for most cases in Expo.\n    $: {\n      'xmlns:android': string;\n      'xmlns:tools'?: string;\n      package?: string;\n      [key: string]: string | undefined;\n    };\n    permission?: ManifestPermission[];\n    'uses-permission'?: ManifestUsesPermission[];\n    'uses-permission-sdk-23'?: ManifestUsesPermission[];\n    'uses-feature'?: ManifestUsesFeature[];\n    application?: ManifestApplication[];\n  };\n};\n\nexport async function writeAndroidManifestAsync(\n  manifestPath: string,\n  androidManifest: AndroidManifest\n): Promise<void> {\n  const manifestXml = XML.format(androidManifest);\n  await fs.promises.mkdir(path.dirname(manifestPath), { recursive: true });\n  await fs.promises.writeFile(manifestPath, manifestXml);\n}\n\nexport async function readAndroidManifestAsync(manifestPath: string): Promise<AndroidManifest> {\n  const xml = await XML.readXMLAsync({ path: manifestPath });\n  if (!isManifest(xml)) {\n    throw new Error('Invalid manifest found at: ' + manifestPath);\n  }\n  return xml;\n}\n\nfunction isManifest(xml: XML.XMLObject): xml is AndroidManifest {\n  // TODO: Maybe more validation\n  return !!xml.manifest;\n}\n\n/** Returns the `manifest.application` tag ending in `.MainApplication` */\nexport function getMainApplication(androidManifest: AndroidManifest): ManifestApplication | null {\n  return (\n    androidManifest?.manifest?.application?.filter(e =>\n      e?.$?.['android:name'].endsWith('.MainApplication')\n    )[0] ?? null\n  );\n}\n\nexport function getMainApplicationOrThrow(androidManifest: AndroidManifest): ManifestApplication {\n  const mainApplication = getMainApplication(androidManifest);\n  assert(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\n\nexport function getMainActivityOrThrow(androidManifest: AndroidManifest): ManifestActivity {\n  const mainActivity = getMainActivity(androidManifest);\n  assert(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\n\nexport function getRunnableActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  // Get enabled activities\n  const enabledActivities = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false\n  );\n\n  if (!enabledActivities) {\n    return null;\n  }\n\n  // Get the activity that has a runnable intent-filter\n  for (const activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (const intentFilter of activity['intent-filter']) {\n        if (\n          intentFilter.action?.find(\n            action => action.$['android:name'] === 'android.intent.action.MAIN'\n          ) &&\n          intentFilter.category?.find(\n            category => category.$['android:name'] === 'android.intent.category.LAUNCHER'\n          )\n        ) {\n          return activity;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function getMainActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  const mainActivity = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:name'] === '.MainActivity'\n  );\n  return mainActivity?.[0] ?? null;\n}\n\nexport function addMetaDataItemToMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string,\n  itemValue: string,\n  itemType: 'resource' | 'value' = 'value'\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys({ name: itemName, [itemType]: itemValue }),\n  } as ManifestMetaData;\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(\n      (e: any) => e.$['android:name'] === itemName\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[\n        `android:${itemType}` as keyof ManifestMetaDataAttributes\n      ] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeMetaDataItemFromMainApplication(mainApplication: any, itemName: string) {\n  const index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication?.['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nfunction findApplicationSubItem(\n  mainApplication: ManifestApplication,\n  category: keyof ManifestApplication,\n  itemName: string\n): number {\n  const parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    const index = parent.findIndex((e: any) => e.$['android:name'] === itemName);\n\n    return index;\n  }\n  return -1;\n}\n\nexport function findMetaDataItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\n\nexport function findUsesLibraryItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\n\nexport function getMainApplicationMetaDataValue(\n  androidManifest: AndroidManifest,\n  name: string\n): string | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.hasOwnProperty('meta-data')) {\n    const item = mainApplication?.['meta-data']?.find((e: any) => e.$['android:name'] === name);\n    return item?.$['android:value'] ?? null;\n  }\n\n  return null;\n}\n\nexport function addUsesLibraryItemToMainApplication(\n  mainApplication: ManifestApplication,\n  item: { name: string; required?: boolean }\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys(item),\n  } as ManifestUsesLibrary;\n\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(\n      e => e.$['android:name'] === item.name\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeUsesLibraryItemFromMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string\n) {\n  const index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication?.['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nexport function prefixAndroidKeys<T extends Record<string, any> = Record<string, string>>(\n  head: T\n): Record<string, any> {\n  // prefix all keys with `android:`\n  return Object.entries(head).reduce(\n    (prev, [key, curr]) => ({ ...prev, [`android:${key}`]: curr }),\n    {} as T\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAAA,QAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,OAAA,YAAAA,QAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,IAAA;EAAA,IAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,GAAA,YAAAA,IAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,MAAA;EAAA,IAAAJ,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAE,KAAA,YAAAA,MAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAK,IAAA;EAAA,IAAAL,IAAA,GAAAM,uBAAA,CAAAJ,OAAA;EAAAG,GAAA,YAAAA,IAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAoJsBO,yBAAfA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,0BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,2BAAA;EAAAA,0BAAA,GAAAG,iBAAA,YACLC,YADK,EAELC,eAFK,EAGU;IACf,IAAMC,WAAW,GAAGX,GAAG,GAACY,MAAJ,CAAWF,eAAX,CAApB;IACA,MAAMZ,GAAA,GAAAe,OAAA,CAAGC,QAAH,CAAYC,KAAZ,CAAkBhB,KAAA,GAAAc,OAAA,CAAKG,OAAL,CAAaP,YAAb,CAAlB,EAA8C;MAAEQ,SAAS,EAAE;IAAb,CAA9C,CAAN;IACA,MAAMnB,GAAA,GAAAe,OAAA,CAAGC,QAAH,CAAYI,SAAZ,CAAsBT,YAAtB,EAAoCE,WAApC,CAAN;EACD;EAAA,OAAAN,0BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqBY,wBAAfA,CAAAC,GAAA;EAAA,OAAAC,yBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAc,0BAAA;EAAAA,yBAAA,GAAAb,iBAAA,YAAwCC,YAAxC,EAAwF;IAC7F,IAAMa,GAAG,SAAStB,GAAG,GAACuB,YAAJ,CAAiB;MAAEC,IAAI,EAAEf;IAAR,CAAjB,CAAlB;IACA,IAAI,CAACgB,UAAU,CAACH,GAAD,CAAf,EAAsB;MACpB,MAAM,IAAII,KAAJ,CAAU,gCAAgCjB,YAA1C,CAAN;IACD;IACD,OAAOa,GAAP;EACD;EAAA,OAAAD,yBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAED,SAASkB,UAATA,CAAoBH,GAApB,EAAgE;EAE9D,OAAO,CAAC,CAACA,GAAG,CAACK,QAAb;AACD;AAGM,SAASC,kBAATA,CAA4BlB,eAA5B,EAA0F;EAAA,IAAAmB,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC/F,QAAAF,qBAAA,GACEnB,eADF,aACEA,eADF,wBAAAoB,sBAAA,GACEpB,eAAe,CAAEiB,QADnB,cAAAG,sBAAA,wBAAAC,sBAAA,GACED,sBAAA,CAA2BE,WAD7B,cAAAD,sBAAA,uBACEA,sBAAA,CAAwCE,MAAxC,CAA+C,UAAAC,CAAC;IAAA,IAAAC,IAAA;IAAA,OAC9CD,CAD8C,aAC9CA,CAD8C,wBAAAC,IAAA,GAC9CD,CAAC,CAAEE,CAD2C,cAAAD,IAAA,uBAC9CA,IAAA,CAAO,cAAP,EAAuBE,QAAvB,CAAgC,kBAAhC,CAD8C;EAAA,CAAhD,EAEE,CAFF,CADF,cAAAR,qBAAA,cAAAA,qBAAA,GAGU,IAHV;AAKD;AAEM,SAASS,yBAATA,CAAmC5B,eAAnC,EAA0F;EAC/F,IAAM6B,eAAe,GAAGX,kBAAkB,CAAClB,eAAD,CAA1C;EACA,IAAAhB,OAAA,GAAAmB,OAAA,EAAO0B,eAAP,EAAwB,qEAAxB;EACA,OAAOA,eAAP;AACD;AAEM,SAASC,sBAATA,CAAgC9B,eAAhC,EAAoF;EACzF,IAAM+B,YAAY,GAAGC,eAAe,CAAChC,eAAD,CAApC;EACA,IAAAhB,OAAA,GAAAmB,OAAA,EAAO4B,YAAP,EAAqB,kEAArB;EACA,OAAOA,YAAP;AACD;AAEM,SAASE,mBAATA,CAA6BjC,eAA7B,EAAwF;EAAA,IAAAkC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAE7F,IAAMC,iBAAiB,GAAGvC,eAAH,aAAGA,eAAH,wBAAAkC,sBAAA,GAAGlC,eAAe,CAAEiB,QAApB,cAAAiB,sBAAA,wBAAAC,sBAAA,GAAGD,sBAAA,CAA2BZ,WAA9B,cAAAa,sBAAA,wBAAAC,sBAAA,GAAGD,sBAAA,CAAyC,CAAzC,CAAH,cAAAC,sBAAA,wBAAAC,sBAAA,GAAGD,sBAAA,CAA6CI,QAAhD,cAAAH,sBAAA,wBAAAC,sBAAA,GAAGD,sBAAA,CAAuDd,MAA1D,cAAAe,sBAAA,uBAAGA,sBAAA,CAAAG,IAAA,CAAAJ,sBAAA,EACvB,UAAAb,CAAD;IAAA,OAAYA,CAAC,CAACE,CAAF,CAAI,iBAAJ,MAA2B,OAA3B,IAAsCF,CAAC,CAACE,CAAF,CAAI,iBAAJ,MAA2B,KADrD;EAAA,EAA1B;EAIA,IAAI,CAACa,iBAAL,EAAwB;IACtB,OAAO,IAAP;EACD;EAGD,KAAK,IAAMC,QAAX,IAAuBD,iBAAvB,EAA0C;IACxC,IAAIG,KAAK,CAACC,OAAN,CAAcH,QAAQ,CAAC,eAAD,CAAtB,CAAJ,EAA8C;MAC5C,KAAK,IAAMI,YAAX,IAA2BJ,QAAQ,CAAC,eAAD,CAAnC,EAAsD;QAAA,IAAAK,oBAAA,EAAAC,qBAAA;QACpD,IACE,CAAAD,oBAAA,GAAAD,YAAY,CAACG,MAAb,cAAAF,oBAAA,eAAAA,oBAAA,CAAqBG,IAArB,CACE,UAAAD,MAAM;UAAA,OAAIA,MAAM,CAACrB,CAAP,CAAS,cAAT,MAA6B,4BADzC;QAAA,OAAAoB,qBAAA,GAGAF,YAAY,CAACK,QAHb,cAAAH,qBAAA,eAGAA,qBAAA,CAAuBE,IAAvB,CACE,UAAAC,QAAQ;UAAA,OAAIA,QAAQ,CAACvB,CAAT,CAAW,cAAX,MAA+B,kCAD7C;QAAA,EAJF,EAOE;UACA,OAAOc,QAAP;QACD;MACF;IACF;EACF;EAED,OAAO,IAAP;AACD;AAEM,SAASR,eAATA,CAAyBhC,eAAzB,EAAoF;EAAA,IAAAkD,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,cAAA;EACzF,IAAMxB,YAAY,GAAG/B,eAAH,aAAGA,eAAH,wBAAAkD,sBAAA,GAAGlD,eAAe,CAAEiB,QAApB,cAAAiC,sBAAA,wBAAAC,uBAAA,GAAGD,sBAAA,CAA2B5B,WAA9B,cAAA6B,uBAAA,wBAAAC,uBAAA,GAAGD,uBAAA,CAAyC,CAAzC,CAAH,cAAAC,uBAAA,wBAAAC,uBAAA,GAAGD,uBAAA,CAA6CZ,QAAhD,cAAAa,uBAAA,wBAAAC,uBAAA,GAAGD,uBAAA,CAAuD9B,MAA1D,cAAA+B,uBAAA,uBAAGA,uBAAA,CAAAb,IAAA,CAAAY,uBAAA,EAClB,UAAA7B,CAAD;IAAA,OAAYA,CAAC,CAACE,CAAF,CAAI,cAAJ,MAAwB,eADjB;EAAA,EAArB;EAGA,QAAA6B,cAAA,GAAOxB,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAG,CAAH,CAAnB,cAAAwB,cAAA,cAAAA,cAAA,GAA4B,IAA5B;AACD;AAEM,SAASC,gCAATA,CACL3B,eADK,EAEL4B,QAFK,EAGLC,SAHK,EAKgB;EAAA,IADrBC,QAA8B,GAAA9D,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgE,SAAA,GAAAhE,SAAA,MAAG,OAJ5B;EAML,IAAIiE,oBAAJ;EACA,IAAMC,OAAO,GAAG;IACdrC,CAAC,EAAEsC,iBAAiB,CAAAC,eAAA;MAAGC,IAAI,EAAET;IAAR,GAAmBE,QAAD,EAAYD,SAAA;EADrC,CAAhB;EAGA,IAAI7B,eAAe,CAAC,WAAD,CAAnB,EAAkC;IAChCiC,oBAAoB,GAAGjC,eAAe,CAAC,WAAD,CAAf,CAA6BN,MAA7B,CACpB,UAAAC,CAAD;MAAA,OAAYA,CAAC,CAACE,CAAF,CAAI,cAAJ,MAAwB+B,QADf;IAAA,EAAvB;IAGA,IAAIK,oBAAoB,CAACF,MAAzB,EAAiC;MAC/BE,oBAAoB,CAAC,CAAD,CAApB,CAAwBpC,CAAxB,cACaiC,QAAS,CADtB,GAEID,SAFJ;IAGD,CAJD,MAIO;MACL7B,eAAe,CAAC,WAAD,CAAf,CAA6BsC,IAA7B,CAAkCJ,OAAlC;IACD;EACF,CAXD,MAWO;IACLlC,eAAe,CAAC,WAAD,CAAf,GAA+B,CAACkC,OAAD,CAA/B;EACD;EACD,OAAOlC,eAAP;AACD;AAEM,SAASuC,qCAATA,CAA+CvC,eAA/C,EAAqE4B,QAArE,EAAuF;EAC5F,IAAMY,KAAK,GAAGC,gBAAgB,CAACzC,eAAD,EAAkB4B,QAAlB,CAA9B;EACA,IAAI5B,eAAe,SAAf,IAAAA,eAAe,WAAf,IAAAA,eAAe,CAAG,WAAH,CAAf,IAAkCwC,KAAK,GAAG,CAAC,CAA/C,EAAkD;IAChDxC,eAAe,CAAC,WAAD,CAAf,CAA6B0C,MAA7B,CAAoCF,KAApC,EAA2C,CAA3C;EACD;EACD,OAAOxC,eAAP;AACD;AAED,SAAS2C,sBAATA,CACE3C,eADF,EAEEoB,QAFF,EAGEQ,QAHF,EAIU;EACR,IAAMgB,MAAM,GAAG5C,eAAe,CAACoB,QAAD,CAA9B;EACA,IAAIP,KAAK,CAACC,OAAN,CAAc8B,MAAd,CAAJ,EAA2B;IACzB,IAAMJ,KAAK,GAAGI,MAAM,CAACC,SAAP,CAAkB,UAAAlD,CAAD;MAAA,OAAYA,CAAC,CAACE,CAAF,CAAI,cAAJ,MAAwB+B,QAArD;IAAA,EAAd;IAEA,OAAOY,KAAP;EACD;EACD,OAAO,CAAC,CAAR;AACD;AAEM,SAASC,gBAATA,CAA0BzC,eAA1B,EAAgD4B,QAAhD,EAA0E;EAC/E,OAAOe,sBAAsB,CAAC3C,eAAD,EAAkB,WAAlB,EAA+B4B,QAA/B,CAA7B;AACD;AAEM,SAASkB,mBAATA,CAA6B9C,eAA7B,EAAmD4B,QAAnD,EAA6E;EAClF,OAAOe,sBAAsB,CAAC3C,eAAD,EAAkB,cAAlB,EAAkC4B,QAAlC,CAA7B;AACD;AAEM,SAASmB,+BAATA,CACL5E,eADK,EAELkE,IAFK,EAGU;EACf,IAAMrC,eAAe,GAAGX,kBAAkB,CAAClB,eAAD,CAA1C;EAEA,IAAI6B,eAAJ,aAAIA,eAAJ,eAAIA,eAAe,CAAEgD,cAAjB,CAAgC,WAAhC,CAAJ,EAAkD;IAAA,IAAAC,qBAAA,EAAAC,oBAAA;IAChD,IAAMC,IAAI,GAAGnD,eAAH,aAAGA,eAAH,wBAAAiD,qBAAA,GAAGjD,eAAe,CAAG,WAAH,CAAlB,cAAAiD,qBAAA,uBAAGA,qBAAA,CAAgC9B,IAAhC,CAAsC,UAAAxB,CAAD;MAAA,OAAYA,CAAC,CAACE,CAAF,CAAI,cAAJ,MAAwBwC,IAAzE;IAAA,EAAb;IACA,QAAAa,oBAAA,GAAOC,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEtD,CAAN,CAAQ,eAAR,CAAP,cAAAqD,oBAAA,cAAAA,oBAAA,GAAmC,IAAnC;EACD;EAED,OAAO,IAAP;AACD;AAEM,SAASE,mCAATA,CACLpD,eADK,EAELmD,IAFK,EAGgB;EACrB,IAAIlB,oBAAJ;EACA,IAAMC,OAAO,GAAG;IACdrC,CAAC,EAAEsC,iBAAiB,CAACgB,IAAD;EADN,CAAhB;EAIA,IAAInD,eAAe,CAAC,cAAD,CAAnB,EAAqC;IACnCiC,oBAAoB,GAAGjC,eAAe,CAAC,cAAD,CAAf,CAAgCN,MAAhC,CACrB,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACE,CAAF,CAAI,cAAJ,MAAwBsD,IAAI,CAACd,IADb;IAAA,EAAvB;IAGA,IAAIJ,oBAAoB,CAACF,MAAzB,EAAiC;MAC/BE,oBAAoB,CAAC,CAAD,CAApB,CAAwBpC,CAAxB,GAA4BqC,OAAO,CAACrC,CAApC;IACD,CAFD,MAEO;MACLG,eAAe,CAAC,cAAD,CAAf,CAAgCsC,IAAhC,CAAqCJ,OAArC;IACD;EACF,CATD,MASO;IACLlC,eAAe,CAAC,cAAD,CAAf,GAAkC,CAACkC,OAAD,CAAlC;EACD;EACD,OAAOlC,eAAP;AACD;AAEM,SAASqD,wCAATA,CACLrD,eADK,EAEL4B,QAFK,EAGL;EACA,IAAMY,KAAK,GAAGM,mBAAmB,CAAC9C,eAAD,EAAkB4B,QAAlB,CAAjC;EACA,IAAI5B,eAAe,SAAf,IAAAA,eAAe,WAAf,IAAAA,eAAe,CAAG,cAAH,CAAf,IAAqCwC,KAAK,GAAG,CAAC,CAAlD,EAAqD;IACnDxC,eAAe,CAAC,cAAD,CAAf,CAAgC0C,MAAhC,CAAuCF,KAAvC,EAA8C,CAA9C;EACD;EACD,OAAOxC,eAAP;AACD;AAEM,SAASmC,iBAATA,CACLmB,IADK,EAEgB;EAErB,OAAOC,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqBG,MAArB,CACL,UAACC,IAAD,EAAAC,IAAA;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAQG,GAAD,GAAAF,KAAA;MAAMG,IAAN,GAAAH,KAAA;IAAA,OAAAI,aAAA,CAAAA,aAAA,KAAsBN,IAAL,OAAAtB,eAAA,kBAAuB0B,GAAI,EAAIC,IAAA;EAAA,CADlD,EAEL,EAFK,CAAP;AAID"},"metadata":{},"sourceType":"script","externalDependencies":[]}