{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCREEN_ORIENTATION_ATTRIBUTE = void 0;\nexports.getOrientation = getOrientation;\nexports.setAndroidOrientation = setAndroidOrientation;\nexports.withOrientation = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\nexports.SCREEN_ORIENTATION_ATTRIBUTE = SCREEN_ORIENTATION_ATTRIBUTE;\nvar withOrientation = (0, _androidPlugins().createAndroidManifestPlugin)(setAndroidOrientation, 'withOrientation');\nexports.withOrientation = withOrientation;\nfunction getOrientation(config) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\nfunction setAndroidOrientation(config, androidManifest) {\n  var orientation = getOrientation(config);\n  if (!orientation) {\n    return androidManifest;\n  }\n  var mainActivity = (0, _Manifest().getMainActivityOrThrow)(androidManifest);\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] = orientation !== 'default' ? orientation : 'unspecified';\n  return androidManifest;\n}","map":{"version":3,"names":["_androidPlugins","data","require","_Manifest","SCREEN_ORIENTATION_ATTRIBUTE","withOrientation","createAndroidManifestPlugin","setAndroidOrientation","getOrientation","config","orientation","androidManifest","mainActivity","getMainActivityOrThrow","$"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/Orientation.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nexport const SCREEN_ORIENTATION_ATTRIBUTE = 'android:screenOrientation';\n\nexport const withOrientation = createAndroidManifestPlugin(\n  setAndroidOrientation,\n  'withOrientation'\n);\n\nexport function getOrientation(config: Pick<ExpoConfig, 'orientation'>) {\n  return typeof config.orientation === 'string' ? config.orientation : null;\n}\n\nexport function setAndroidOrientation(\n  config: Pick<ExpoConfig, 'orientation'>,\n  androidManifest: AndroidManifest\n) {\n  const orientation = getOrientation(config);\n  // TODO: Remove this if we decide to remove any orientation configuration when not specified\n  if (!orientation) {\n    return androidManifest;\n  }\n\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n\n  mainActivity.$[SCREEN_ORIENTATION_ATTRIBUTE] =\n    orientation !== 'default' ? orientation : 'unspecified';\n\n  return androidManifest;\n}\n"],"mappings":";;;;;;;;;AAEA,SAAAA,gBAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,eAAA,YAAAA,gBAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,UAAA;EAAA,IAAAF,IAAA,GAAAC,OAAA;EAAAC,SAAA,YAAAA,UAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEO,IAAMG,4BAA4B,GAAG,2BAArC;;AAEA,IAAMC,eAAe,GAAG,IAAAL,eAAA,GAAAM,2BAAA,EAC7BC,qBAD6B,EAE7B,iBAF6B,CAAxB;;AAKA,SAASC,cAATA,CAAwBC,MAAxB,EAAiE;EACtE,OAAO,OAAOA,MAAM,CAACC,WAAd,KAA8B,QAA9B,GAAyCD,MAAM,CAACC,WAAhD,GAA8D,IAArE;AACD;AAEM,SAASH,qBAATA,CACLE,MADK,EAELE,eAFK,EAGL;EACA,IAAMD,WAAW,GAAGF,cAAc,CAACC,MAAD,CAAlC;EAEA,IAAI,CAACC,WAAL,EAAkB;IAChB,OAAOC,eAAP;EACD;EAED,IAAMC,YAAY,GAAG,IAAAT,SAAA,GAAAU,sBAAA,EAAuBF,eAAvB,CAArB;EAEAC,YAAY,CAACE,CAAb,CAAeV,4BAAf,IACEM,WAAW,KAAK,SAAhB,GAA4BA,WAA5B,GAA0C,aAD5C;EAGA,OAAOC,eAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}