{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getExpoSDKVersion = getExpoSDKVersion;\nfunction _jsonFile() {\n  var data = _interopRequireDefault(require(\"@expo/json-file\"));\n  _jsonFile = function _jsonFile() {\n    return data;\n  };\n  return data;\n}\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _Errors() {\n  var data = require(\"./Errors\");\n  _Errors = function _Errors() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getExpoSDKVersion(projectRoot, exp) {\n  if (exp !== null && exp !== void 0 && exp.sdkVersion) {\n    return exp.sdkVersion;\n  }\n  var packageJsonPath = _resolveFrom().default.silent(projectRoot, 'expo/package.json');\n  if (packageJsonPath) {\n    var expoPackageJson = _jsonFile().default.read(packageJsonPath, {\n      json5: true\n    });\n    var packageVersion = expoPackageJson.version;\n    if (typeof packageVersion === 'string') {\n      var majorVersion = packageVersion.split('.').shift();\n      return majorVersion + \".0.0\";\n    }\n  }\n  throw new (_Errors().ConfigError)(\"Cannot determine which native SDK version your project uses because the module `expo` is not installed. Please install it with `yarn add expo` and try again.\", 'MODULE_NOT_FOUND');\n}","map":{"version":3,"names":["_jsonFile","data","_interopRequireDefault","require","_resolveFrom","_Errors","getExpoSDKVersion","projectRoot","exp","sdkVersion","packageJsonPath","default","silent","expoPackageJson","read","json5","packageVersion","version","majorVersion","split","shift","ConfigError"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config/src/Project.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport resolveFrom from 'resolve-from';\n\nimport { ExpoConfig } from './Config.types';\nimport { ConfigError } from './Errors';\n\nexport function getExpoSDKVersion(\n  projectRoot: string,\n  exp: Pick<ExpoConfig, 'sdkVersion'>\n): string {\n  if (exp?.sdkVersion) {\n    return exp.sdkVersion;\n  }\n  const packageJsonPath = resolveFrom.silent(projectRoot, 'expo/package.json');\n  if (packageJsonPath) {\n    const expoPackageJson = JsonFile.read(packageJsonPath, { json5: true });\n    const { version: packageVersion } = expoPackageJson;\n    if (typeof packageVersion === 'string') {\n      const majorVersion = packageVersion.split('.').shift();\n      return `${majorVersion}.0.0`;\n    }\n  }\n  throw new ConfigError(\n    `Cannot determine which native SDK version your project uses because the module \\`expo\\` is not installed. Please install it with \\`yarn add expo\\` and try again.`,\n    'MODULE_NOT_FOUND'\n  );\n}\n"],"mappings":";;;;;;AAAA,SAAAA,UAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,SAAA,YAAAA,UAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,aAAA;EAAA,IAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,YAAA,YAAAA,aAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAI,QAAA;EAAA,IAAAJ,IAAA,GAAAE,OAAA;EAAAE,OAAA,YAAAA,QAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;;;;;;AAEO,SAASK,iBAATA,CACLC,WADK,EAELC,GAFK,EAGG;EACR,IAAIA,GAAJ,aAAIA,GAAJ,eAAIA,GAAG,CAAEC,UAAT,EAAqB;IACnB,OAAOD,GAAG,CAACC,UAAX;EACD;EACD,IAAMC,eAAe,GAAGN,YAAA,GAAAO,OAAA,CAAYC,MAAZ,CAAmBL,WAAnB,EAAgC,mBAAhC,CAAxB;EACA,IAAIG,eAAJ,EAAqB;IACnB,IAAMG,eAAe,GAAGb,SAAA,GAAAW,OAAA,CAASG,IAAT,CAAcJ,eAAd,EAA+B;MAAEK,KAAK,EAAE;IAAT,CAA/B,CAAxB;IACA,IAAiBC,cAAA,GAAmBH,eAApC,CAAQI,OAAO;IACf,IAAI,OAAOD,cAAP,KAA0B,QAA9B,EAAwC;MACtC,IAAME,YAAY,GAAGF,cAAc,CAACG,KAAf,CAAqB,GAArB,EAA0BC,KAA1B,EAArB;MACA,OAAUF,YAAa;IACxB;EACF;EACD,MAAM,KAAIb,OAAA,GAAAgB,WAAJ,mKAEJ,kBAFI,CAAN;AAID"},"metadata":{},"sourceType":"script","externalDependencies":[]}