{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar path = require(\"path\");\nvar createExpoWebpackConfigAsync = require(\"@expo/webpack-config\");\nvar prodConfig = {\n  mode: \"production\",\n  entry: path.join(__dirname, \"src/index.js\"),\n  output: {\n    filename: \"bundle.web.js\",\n    path: path.join(__dirname, \"/web/build\"),\n    library: \"component-library\",\n    libraryTarget: \"umd\",\n    umdNamedDefine: true\n  },\n  module: {\n    rules: [{\n      test: /\\.(js|jsx)?$/,\n      include: path.resolve(__dirname, \"src\"),\n      exclude: /node_modules/,\n      use: [{\n        loader: \"babel-loader\",\n        options: {\n          cacheDirectory: true,\n          presets: [\"module:metro-react-native-babel-preset\"],\n          plugins: [\"react-native-web\"]\n        }\n      }]\n    }, {\n      test: /\\.(gif|jpe?g|png|svg)$/,\n      use: {\n        loader: \"url-loader\",\n        options: {\n          name: \"[name].[ext]\",\n          esModule: false\n        }\n      }\n    }]\n  },\n  resolve: {\n    extensions: [\".js\", \".jsx\"],\n    alias: {\n      \"react-native$\": \"react-native-web\"\n    }\n  },\n  externals: {\n    react: {\n      commonjs: \"react\",\n      commonjs2: \"react\",\n      amd: \"React\",\n      root: \"React\"\n    },\n    \"react-dom\": {\n      commonjs: \"react-dom\",\n      commonjs2: \"react-dom\",\n      amd: \"ReactDOM\",\n      root: \"ReactDOM\"\n    }\n  }\n};\nmodule.exports = function () {\n  var _ref = _asyncToGenerator(function* (env, argv) {\n    if (env.production) {\n      return prodConfig;\n    }\n    var config = yield createExpoWebpackConfigAsync(env, argv);\n    if (config.mode === \"development\") {\n      config.devServer.compress = false;\n    }\n    return config;\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["path","require","createExpoWebpackConfigAsync","prodConfig","mode","entry","join","__dirname","output","filename","library","libraryTarget","umdNamedDefine","module","rules","test","include","resolve","exclude","use","loader","options","cacheDirectory","presets","plugins","name","esModule","extensions","alias","externals","react","commonjs","commonjs2","amd","root","exports","_ref","_asyncToGenerator","env","argv","production","config","devServer","compress","_x","_x2","apply","arguments"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/webpack.config.js"],"sourcesContent":["const path = require(\"path\");\nconst createExpoWebpackConfigAsync = require(\"@expo/webpack-config\");\n\nconst prodConfig = {\n  mode: \"production\",\n  entry: path.join(__dirname, \"src/index.js\"),\n  output: {\n    filename: \"bundle.web.js\",\n    path: path.join(__dirname, \"/web/build\"),\n    library: \"component-library\",\n    libraryTarget: \"umd\",\n    umdNamedDefine: true,\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)?$/,\n        include: path.resolve(__dirname, \"src\"),\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: \"babel-loader\",\n            options: {\n              cacheDirectory: true,\n              presets: [\"module:metro-react-native-babel-preset\"],\n              plugins: [\"react-native-web\"],\n            },\n          },\n        ],\n      },\n      {\n        test: /\\.(gif|jpe?g|png|svg)$/,\n        use: {\n          loader: \"url-loader\",\n          options: {\n            name: \"[name].[ext]\",\n            esModule: false,\n          },\n        },\n      },\n    ],\n  },\n  resolve: {\n    extensions: [\".js\", \".jsx\"],\n    alias: {\n      \"react-native$\": \"react-native-web\",\n    },\n  },\n  externals: {\n    react: {\n      commonjs: \"react\",\n      commonjs2: \"react\",\n      amd: \"React\",\n      root: \"React\",\n    },\n    \"react-dom\": {\n      commonjs: \"react-dom\",\n      commonjs2: \"react-dom\",\n      amd: \"ReactDOM\",\n      root: \"ReactDOM\",\n    },\n  },\n};\n\nmodule.exports = async function (env, argv) {\n  if (env.production) {\n    return prodConfig;\n  }\n\n  const config = await createExpoWebpackConfigAsync(env, argv);\n\n  // Maybe you want to turn off compression in dev mode.\n  if (config.mode === \"development\") {\n    config.devServer.compress = false;\n  }\n\n  // Finally return the new config for the CLI to use.\n  return config;\n};\n\n// module.exports = {\n//   mode: \"production\",\n//   entry: path.join(__dirname, \"src/index.js\"),\n//   output: {\n//     filename: \"bundle.web.js\",\n//     path: path.join(__dirname, \"/web/build\"),\n//     library: \"component-library\",\n//     libraryTarget: \"umd\",\n//     umdNamedDefine: true,\n//   },\n//   module: {\n//     rules: [\n//       {\n//         test: /\\.(js|jsx)?$/,\n//         include: path.resolve(__dirname, \"src\"),\n//         exclude: /node_modules/,\n//         use: [\n//           {\n//             loader: \"babel-loader\",\n//             options: {\n//               cacheDirectory: true,\n//               presets: [\"module:metro-react-native-babel-preset\"],\n//               plugins: [\"react-native-web\"],\n//             },\n//           },\n//         ],\n//       },\n//       {\n//         test: /\\.(gif|jpe?g|png|svg)$/,\n//         use: {\n//           loader: \"url-loader\",\n//           options: {\n//             name: \"[name].[ext]\",\n//             esModule: false,\n//           },\n//         },\n//       },\n//     ],\n//   },\n//   resolve: {\n//     extensions: [\".js\", \".jsx\"],\n//     alias: {\n//       \"react-native$\": \"react-native-web\",\n//     },\n//   },\n//   externals: {\n//     react: {\n//       commonjs: \"react\",\n//       commonjs2: \"react\",\n//       amd: \"React\",\n//       root: \"React\",\n//     },\n//     \"react-dom\": {\n//       commonjs: \"react-dom\",\n//       commonjs2: \"react-dom\",\n//       amd: \"ReactDOM\",\n//       root: \"ReactDOM\",\n//     },\n//   },\n// };\n"],"mappings":";AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAMC,4BAA4B,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAEpE,IAAME,UAAU,GAAG;EACjBC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAEL,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,cAAc,CAAC;EAC3CC,MAAM,EAAE;IACNC,QAAQ,EAAE,eAAe;IACzBT,IAAI,EAAEA,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,YAAY,CAAC;IACxCG,OAAO,EAAE,mBAAmB;IAC5BC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,MAAM,EAAE;IACNC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAEhB,IAAI,CAACiB,OAAO,CAACV,SAAS,EAAE,KAAK,CAAC;MACvCW,OAAO,EAAE,cAAc;MACvBC,GAAG,EAAE,CACH;QACEC,MAAM,EAAE,cAAc;QACtBC,OAAO,EAAE;UACPC,cAAc,EAAE,IAAI;UACpBC,OAAO,EAAE,CAAC,wCAAwC,CAAC;UACnDC,OAAO,EAAE,CAAC,kBAAkB;QAC9B;MACF,CAAC;IAEL,CAAC,EACD;MACET,IAAI,EAAE,wBAAwB;MAC9BI,GAAG,EAAE;QACHC,MAAM,EAAE,YAAY;QACpBC,OAAO,EAAE;UACPI,IAAI,EAAE,cAAc;UACpBC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;EAEL,CAAC;EACDT,OAAO,EAAE;IACPU,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;IAC3BC,KAAK,EAAE;MACL,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE,OAAO;MAClBC,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE;IACR,CAAC;IACD,WAAW,EAAE;MACXH,QAAQ,EAAE,WAAW;MACrBC,SAAS,EAAE,WAAW;MACtBC,GAAG,EAAE,UAAU;MACfC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEDrB,MAAM,CAACsB,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAgBC,GAAG,EAAEC,IAAI,EAAE;IAC1C,IAAID,GAAG,CAACE,UAAU,EAAE;MAClB,OAAOrC,UAAU;IACnB;IAEA,IAAMsC,MAAM,SAASvC,4BAA4B,CAACoC,GAAG,EAAEC,IAAI,CAAC;IAG5D,IAAIE,MAAM,CAACrC,IAAI,KAAK,aAAa,EAAE;MACjCqC,MAAM,CAACC,SAAS,CAACC,QAAQ,GAAG,KAAK;IACnC;IAGA,OAAOF,MAAM;EACf,CAAC;EAAA,iBAAAG,EAAA,EAAAC,GAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}