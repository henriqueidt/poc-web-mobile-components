{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getChromeIconConfig = exports.getFaviconIconConfig = exports.getSafariIconConfig = exports.getSafariStartupImageConfig = exports.getConfigForPWA = exports.generateManifestJson = exports.generateManifestAsync = exports.generateFaviconAsync = exports.generateChromeIconAsync = exports.generateAppleIconAsync = exports.generateSplashAsync = exports.generateAsync = exports.joinUrlPath = void 0;\nvar config_1 = require(\"@expo/config\");\nvar Image = __importStar(require(\"@expo/image-utils\"));\nvar path = __importStar(require(\"path\"));\nvar url_1 = require(\"url\");\nvar Manifest_1 = require(\"./Manifest\");\nObject.defineProperty(exports, \"getConfigForPWA\", {\n  enumerable: true,\n  get: function get() {\n    return Manifest_1.getConfigForPWA;\n  }\n});\nvar Splash_1 = require(\"./Splash\");\nfunction joinUrlPath(publicPath) {\n  for (var _len = arguments.length, toJoin = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    toJoin[_key - 1] = arguments[_key];\n  }\n  var segments = path.join.apply(path, toJoin);\n  try {\n    return new url_1.URL(segments, publicPath).href;\n  } catch (_unused) {\n    return path.join(publicPath, segments);\n  }\n}\nexports.joinUrlPath = joinUrlPath;\nfunction generateAsync(_x, _x2, _x3) {\n  return _generateAsync.apply(this, arguments);\n}\nfunction _generateAsync() {\n  _generateAsync = _asyncToGenerator(function* (type, options, icon) {\n    switch (type) {\n      case 'splash':\n        return generateSplashAsync(options, icon);\n      case 'safari-icon':\n        return generateAppleIconAsync(options, icon, {});\n      case 'chrome-icon':\n        return generateChromeIconAsync(options, icon, {});\n      case 'favicon':\n        return generateFaviconAsync(options, icon);\n    }\n    throw new Error(\"Invalid command type: \" + type);\n  });\n  return _generateAsync.apply(this, arguments);\n}\nexports.generateAsync = generateAsync;\nfunction generateSplashAsync(_x4, _x5) {\n  return _generateSplashAsync.apply(this, arguments);\n}\nfunction _generateSplashAsync() {\n  _generateSplashAsync = _asyncToGenerator(function* (_ref, icon) {\n    var projectRoot = _ref.projectRoot,\n      publicPath = _ref.publicPath;\n    var cacheType = 'apple-touch-startup-image';\n    var devices = (0, Splash_1.getDevices)();\n    var icons = Array.isArray(icon) ? icon : [];\n    if (!Array.isArray(icon)) {\n      for (var device of devices) {\n        for (var orientation of device.orientations) {\n          var width = 0;\n          var height = 0;\n          if (orientation !== 'portrait') {\n            width = device.height;\n            height = device.width;\n          } else {\n            height = device.height;\n            width = device.width;\n          }\n          var name = \"apple-touch-startup-image-\" + width + \"x\" + height + \".png\";\n          icons.push(_objectSpread(_objectSpread({}, icon), {}, {\n            name: name,\n            width: width,\n            height: height,\n            media: (0, Splash_1.assembleOrientationMedia)(device.width, device.height, device.scale, orientation)\n          }));\n        }\n      }\n    }\n    var data = yield Promise.all(icons.map(function () {\n      var _ref8 = _asyncToGenerator(function* (icon) {\n        if (!icon.resizeMode) {\n          icon.resizeMode = 'contain';\n        }\n        var _yield$Image$generate = yield Image.generateImageAsync({\n            projectRoot: projectRoot,\n            cacheType: cacheType\n          }, icon),\n          source = _yield$Image$generate.source,\n          name = _yield$Image$generate.name;\n        var href = \"pwa/apple-touch-startup-image/\" + name;\n        return {\n          asset: {\n            source: source,\n            path: href\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel: 'apple-touch-startup-image',\n              media: icon.media,\n              href: joinUrlPath(publicPath, href)\n            }\n          }\n        };\n      });\n      return function (_x17) {\n        return _ref8.apply(this, arguments);\n      };\n    }()));\n    yield Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n    return data;\n  });\n  return _generateSplashAsync.apply(this, arguments);\n}\nexports.generateSplashAsync = generateSplashAsync;\nfunction generateAppleIconAsync(_x6, _x7, _x8) {\n  return _generateAppleIconAsync.apply(this, arguments);\n}\nfunction _generateAppleIconAsync() {\n  _generateAppleIconAsync = _asyncToGenerator(function* (_ref2, icon, _ref3) {\n    var projectRoot = _ref2.projectRoot,\n      publicPath = _ref2.publicPath;\n    var _ref3$sizes = _ref3.sizes,\n      sizes = _ref3$sizes === void 0 ? [180] : _ref3$sizes;\n    var cacheType = 'apple-touch-icon';\n    var data = yield Promise.all(sizes.map(function () {\n      var _ref9 = _asyncToGenerator(function* (size) {\n        var rel = 'apple-touch-icon';\n        var _yield$Image$generate2 = yield Image.generateImageAsync({\n            projectRoot: projectRoot,\n            cacheType: cacheType\n          }, _objectSpread(_objectSpread({}, icon), {}, {\n            width: size,\n            height: size,\n            name: rel + \"-\" + size + \".png\"\n          })),\n          source = _yield$Image$generate2.source,\n          name = _yield$Image$generate2.name;\n        var href = \"pwa/\" + rel + \"/\" + name;\n        return {\n          asset: {\n            source: source,\n            path: href\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel: rel,\n              sizes: size + \"x\" + size,\n              href: joinUrlPath(publicPath, href)\n            }\n          }\n        };\n      });\n      return function (_x18) {\n        return _ref9.apply(this, arguments);\n      };\n    }()));\n    if (!sizes.length) {\n      yield Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n    }\n    return data;\n  });\n  return _generateAppleIconAsync.apply(this, arguments);\n}\nexports.generateAppleIconAsync = generateAppleIconAsync;\nfunction generateChromeIconAsync(_x9, _x10, _x11) {\n  return _generateChromeIconAsync.apply(this, arguments);\n}\nfunction _generateChromeIconAsync() {\n  _generateChromeIconAsync = _asyncToGenerator(function* (_ref4, icon, _ref5) {\n    var projectRoot = _ref4.projectRoot,\n      publicPath = _ref4.publicPath;\n    var _ref5$sizes = _ref5.sizes,\n      sizes = _ref5$sizes === void 0 ? [144, 192, 512] : _ref5$sizes;\n    var cacheType = 'chrome-icon';\n    var data = yield Promise.all(sizes.map(function () {\n      var _ref10 = _asyncToGenerator(function* (size) {\n        var rel = 'chrome-icon';\n        var _yield$Image$generate3 = yield Image.generateImageAsync({\n            projectRoot: projectRoot,\n            cacheType: cacheType\n          }, _objectSpread(_objectSpread({}, icon), {}, {\n            width: size,\n            height: size,\n            name: rel + \"-\" + size + \".png\"\n          })),\n          source = _yield$Image$generate3.source,\n          name = _yield$Image$generate3.name;\n        var href = \"pwa/\" + rel + \"/\" + name;\n        return {\n          asset: {\n            source: source,\n            path: href\n          },\n          manifest: {\n            src: joinUrlPath(publicPath, href),\n            sizes: size + \"x\" + size,\n            type: 'image/png'\n          }\n        };\n      });\n      return function (_x19) {\n        return _ref10.apply(this, arguments);\n      };\n    }()));\n    if (!sizes.length) {\n      yield Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n    }\n    return data;\n  });\n  return _generateChromeIconAsync.apply(this, arguments);\n}\nexports.generateChromeIconAsync = generateChromeIconAsync;\nfunction generateFaviconAsync(_x12, _x13) {\n  return _generateFaviconAsync.apply(this, arguments);\n}\nfunction _generateFaviconAsync() {\n  _generateFaviconAsync = _asyncToGenerator(function* (_ref6, icon) {\n    var projectRoot = _ref6.projectRoot,\n      publicPath = _ref6.publicPath;\n    var cacheType = 'favicon';\n    var dimensions = [16, 32, 48];\n    var data = yield Promise.all(dimensions.map(function () {\n      var _ref11 = _asyncToGenerator(function* (size) {\n        var rel = 'icon';\n        var _yield$Image$generate4 = yield Image.generateImageAsync({\n            projectRoot: projectRoot,\n            cacheType: cacheType\n          }, _objectSpread(_objectSpread({}, icon), {}, {\n            backgroundColor: icon.backgroundColor || 'transparent',\n            width: size,\n            height: size,\n            name: \"favicon-\" + size + \".png\"\n          })),\n          source = _yield$Image$generate4.source,\n          name = _yield$Image$generate4.name;\n        var href = \"\" + name;\n        return {\n          asset: {\n            source: source,\n            path: href\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel: rel,\n              type: 'image/png',\n              sizes: size + \"x\" + size,\n              href: joinUrlPath(publicPath, href)\n            }\n          }\n        };\n      });\n      return function (_x20) {\n        return _ref11.apply(this, arguments);\n      };\n    }()));\n    var faviconUrl = joinUrlPath(publicPath, 'favicon.ico');\n    var largestImageBuffer = data[data.length - 1].asset.source;\n    var faviconBuffer = yield Image.generateFaviconAsync(largestImageBuffer, dimensions);\n    yield Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n    return [data[0], data[1], {\n      asset: {\n        source: faviconBuffer,\n        path: 'favicon.ico'\n      },\n      tag: {\n        tagName: 'link',\n        attributes: {\n          rel: 'shortcut icon',\n          href: faviconUrl\n        }\n      }\n    }];\n  });\n  return _generateFaviconAsync.apply(this, arguments);\n}\nexports.generateFaviconAsync = generateFaviconAsync;\nfunction generateManifestAsync(_x14, _x15, _x16) {\n  return _generateManifestAsync.apply(this, arguments);\n}\nfunction _generateManifestAsync() {\n  _generateManifestAsync = _asyncToGenerator(function* (options, configPath, config) {\n    if (configPath) {\n      (0, config_1.setCustomConfigPath)(options.projectRoot, configPath);\n    }\n    var manifest = generateManifestJson(options, config);\n    return [{\n      asset: {\n        source: JSON.stringify(manifest, null, 2),\n        path: 'manifest.json'\n      },\n      tag: {\n        tagName: 'link',\n        attributes: {\n          rel: 'manifest',\n          href: joinUrlPath(options.publicPath, 'manifest.json')\n        }\n      }\n    }];\n  });\n  return _generateManifestAsync.apply(this, arguments);\n}\nexports.generateManifestAsync = generateManifestAsync;\nfunction generateManifestJson(_ref7, config) {\n  var projectRoot = _ref7.projectRoot;\n  if (!config) {\n    if (!projectRoot) throw new Error('You must either define projectRoot or config');\n    config = (0, Manifest_1.getConfigForPWA)(projectRoot);\n  }\n  return (0, Manifest_1.createPWAManifestFromWebConfig)(config.web);\n}\nexports.generateManifestJson = generateManifestJson;\nvar Manifest_2 = require(\"./Manifest\");\nObject.defineProperty(exports, \"getSafariStartupImageConfig\", {\n  enumerable: true,\n  get: function get() {\n    return Manifest_2.getSafariStartupImageConfig;\n  }\n});\nObject.defineProperty(exports, \"getSafariIconConfig\", {\n  enumerable: true,\n  get: function get() {\n    return Manifest_2.getSafariIconConfig;\n  }\n});\nObject.defineProperty(exports, \"getFaviconIconConfig\", {\n  enumerable: true,\n  get: function get() {\n    return Manifest_2.getFaviconIconConfig;\n  }\n});\nObject.defineProperty(exports, \"getChromeIconConfig\", {\n  enumerable: true,\n  get: function get() {\n    return Manifest_2.getChromeIconConfig;\n  }\n});","map":{"version":3,"names":["config_1","require","Image","__importStar","path","url_1","Manifest_1","Object","defineProperty","exports","enumerable","get","getConfigForPWA","Splash_1","joinUrlPath","publicPath","_len","arguments","length","toJoin","Array","_key","segments","join","apply","URL","href","_unused","generateAsync","_x","_x2","_x3","_generateAsync","_asyncToGenerator","type","options","icon","generateSplashAsync","generateAppleIconAsync","generateChromeIconAsync","generateFaviconAsync","Error","_x4","_x5","_generateSplashAsync","_ref","projectRoot","cacheType","devices","getDevices","icons","isArray","device","orientation","orientations","width","height","name","push","_objectSpread","media","assembleOrientationMedia","scale","data","Promise","all","map","_ref8","resizeMode","_yield$Image$generate","generateImageAsync","source","asset","tag","tagName","attributes","rel","_x17","Cache","clearUnusedCachesAsync","_x6","_x7","_x8","_generateAppleIconAsync","_ref2","_ref3","_ref3$sizes","sizes","_ref9","size","_yield$Image$generate2","_x18","_x9","_x10","_x11","_generateChromeIconAsync","_ref4","_ref5","_ref5$sizes","_ref10","_yield$Image$generate3","manifest","src","_x19","_x12","_x13","_generateFaviconAsync","_ref6","dimensions","_ref11","_yield$Image$generate4","backgroundColor","_x20","faviconUrl","largestImageBuffer","faviconBuffer","generateManifestAsync","_x14","_x15","_x16","_generateManifestAsync","configPath","config","setCustomConfigPath","generateManifestJson","JSON","stringify","_ref7","createPWAManifestFromWebConfig","web","Manifest_2","getSafariStartupImageConfig","getSafariIconConfig","getFaviconIconConfig","getChromeIconConfig"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/expo-pwa/src/index.ts"],"sourcesContent":["import { ExpoConfig, setCustomConfigPath } from '@expo/config';\nimport * as Image from '@expo/image-utils';\nimport * as path from 'path';\nimport { URL } from 'url';\n\nimport { createPWAManifestFromWebConfig, getConfigForPWA } from './Manifest';\nimport { HTMLOutput, IconOptions, Manifest, ProjectOptions, SplashIcon } from './Manifest.types';\nimport { assembleOrientationMedia, getDevices } from './Splash';\n\n/**\n * Joins a url protocol + host to path segments, falls back to path.join\n * if result is not a valid url.\n */\nexport function joinUrlPath(publicPath: string, ...toJoin: string[]): string {\n  const segments = path.join(...toJoin);\n  try {\n    // Throws if publicPath is not a valid protocol+host\n    return new URL(segments, publicPath).href;\n  } catch {\n    return path.join(publicPath, segments);\n  }\n}\n\nexport async function generateAsync(\n  type: string,\n  options: ProjectOptions,\n  icon: IconOptions\n): Promise<HTMLOutput[]> {\n  switch (type) {\n    case 'splash':\n      return generateSplashAsync(options, icon);\n    case 'safari-icon':\n      return generateAppleIconAsync(options, icon, {});\n    case 'chrome-icon':\n      return generateChromeIconAsync(options, icon, {});\n    case 'favicon':\n      return generateFaviconAsync(options, icon);\n  }\n  throw new Error(`Invalid command type: ${type}`);\n}\n\nexport async function generateSplashAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions\n): Promise<HTMLOutput[]> {\n  const cacheType = 'apple-touch-startup-image';\n\n  // You cannot lock iOS PWA orientation, we should produce every splash screen\n  // orientation. We don't however because in iOS 13 it's far more rare to see landscape splash screens.\n  const devices = getDevices();\n\n  const icons: SplashIcon[] = Array.isArray(icon) ? icon : [];\n  if (!Array.isArray(icon)) {\n    for (const device of devices) {\n      for (const orientation of device.orientations) {\n        let width = 0;\n        let height = 0;\n        if (orientation !== 'portrait') {\n          width = device.height;\n          height = device.width;\n        } else {\n          height = device.height;\n          width = device.width;\n        }\n\n        const name = `apple-touch-startup-image-${width}x${height}.png`;\n        icons.push({\n          ...icon,\n          name,\n          width,\n          height,\n          media: assembleOrientationMedia(device.width, device.height, device.scale, orientation),\n        });\n      }\n    }\n  }\n\n  const data = await Promise.all<HTMLOutput>(\n    icons.map(\n      async (icon: SplashIcon): Promise<HTMLOutput> => {\n        // Ensure the default `splash.resizeMode` is used here:\n        // https://docs.expo.dev/versions/latest/config/app/#splash\n        if (!icon.resizeMode) {\n          icon.resizeMode = 'contain';\n        }\n        const { source, name } = await Image.generateImageAsync({ projectRoot, cacheType }, icon);\n\n        const href = `pwa/apple-touch-startup-image/${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel: 'apple-touch-startup-image',\n              media: icon.media,\n              // TODO(Bacon): Use sizes to query splash screens better\n              // sizes: `${icon.width}x${icon.height}`,\n              href: joinUrlPath(publicPath, href),\n            },\n          },\n        };\n      }\n    )\n  );\n\n  await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n\n  return data;\n}\n\nexport async function generateAppleIconAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions,\n  { sizes = [180] }: { sizes?: number[] }\n): Promise<HTMLOutput[]> {\n  const cacheType = 'apple-touch-icon';\n\n  const data = await Promise.all<HTMLOutput>(\n    sizes.map(\n      async (size: number): Promise<HTMLOutput> => {\n        const rel = 'apple-touch-icon';\n        const { source, name } = await Image.generateImageAsync(\n          { projectRoot, cacheType },\n          { ...icon, width: size, height: size, name: `${rel}-${size}.png` }\n        );\n\n        const href = `pwa/${rel}/${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel,\n              sizes: `${size}x${size}`,\n              href: joinUrlPath(publicPath, href),\n            },\n          },\n        };\n      }\n    )\n  );\n\n  // Don't clear the caches if no generation was performed.\n  if (!sizes.length) {\n    await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n  }\n\n  return data;\n}\n\nexport async function generateChromeIconAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions,\n  { sizes = [144, 192, 512] }: { sizes?: number[] }\n): Promise<HTMLOutput[]> {\n  const cacheType = 'chrome-icon';\n\n  const data = await Promise.all<HTMLOutput>(\n    sizes.map(\n      async (size: number): Promise<HTMLOutput> => {\n        const rel = 'chrome-icon';\n        const { source, name } = await Image.generateImageAsync(\n          { projectRoot, cacheType },\n          { ...icon, width: size, height: size, name: `${rel}-${size}.png` }\n        );\n\n        const href = `pwa/${rel}/${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          manifest: {\n            src: joinUrlPath(publicPath, href),\n            sizes: `${size}x${size}`,\n            type: 'image/png',\n          },\n        };\n      }\n    )\n  );\n\n  // Don't clear the caches if no generation was performed.\n  if (!sizes.length) {\n    await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n  }\n\n  return data;\n}\n\nexport async function generateFaviconAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions\n): Promise<HTMLOutput[]> {\n  const cacheType = 'favicon';\n  const dimensions = [16, 32, 48];\n  const data: HTMLOutput[] = await Promise.all<HTMLOutput>(\n    dimensions.map(\n      async (size: number): Promise<HTMLOutput> => {\n        const rel = 'icon';\n        const { source, name } = await Image.generateImageAsync(\n          { projectRoot, cacheType },\n          {\n            ...icon,\n            backgroundColor: icon.backgroundColor || 'transparent',\n            width: size,\n            height: size,\n            name: `favicon-${size}.png`,\n          }\n        );\n\n        const href = `${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel,\n              type: 'image/png',\n              sizes: `${size}x${size}`,\n              href: joinUrlPath(publicPath, href),\n            },\n          },\n        };\n      }\n    )\n  );\n\n  const faviconUrl = joinUrlPath(publicPath, 'favicon.ico');\n\n  const largestImageBuffer = data[data.length - 1].asset.source;\n\n  const faviconBuffer = await Image.generateFaviconAsync(largestImageBuffer, dimensions);\n\n  await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n\n  return [\n    data[0],\n    data[1],\n    {\n      asset: { source: faviconBuffer, path: 'favicon.ico' },\n      tag: {\n        tagName: 'link',\n        attributes: { rel: 'shortcut icon', href: faviconUrl },\n      },\n    },\n  ];\n}\n\nexport async function generateManifestAsync(\n  options: ProjectOptions,\n  configPath?: string,\n  config?: ExpoConfig\n): Promise<HTMLOutput[]> {\n  if (configPath) {\n    setCustomConfigPath(options.projectRoot, configPath);\n  }\n  const manifest = generateManifestJson(options, config);\n  return [\n    {\n      // TODO: Bacon: Make the types more flexible\n      asset: { source: JSON.stringify(manifest, null, 2) as any, path: 'manifest.json' },\n      tag: {\n        tagName: 'link',\n        attributes: { rel: 'manifest', href: joinUrlPath(options.publicPath, 'manifest.json') },\n      },\n    },\n  ];\n}\n\nexport function generateManifestJson(\n  { projectRoot }: Partial<ProjectOptions>,\n  config?: ExpoConfig\n): Manifest {\n  if (!config) {\n    if (!projectRoot) throw new Error('You must either define projectRoot or config');\n    config = getConfigForPWA(projectRoot);\n  }\n  return createPWAManifestFromWebConfig(config.web);\n}\n\nexport { getConfigForPWA };\nexport {\n  getSafariStartupImageConfig,\n  getSafariIconConfig,\n  getFaviconIconConfig,\n  getChromeIconConfig,\n} from './Manifest';\n\nexport { IconOptions, ProjectOptions, HTMLOutput, PWAConfig } from './Manifest.types';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}