{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateAsync = void 0;\nvar parse_png_1 = __importDefault(require(\"parse-png\"));\nvar constants = {\n  directorySize: 16,\n  bitmapSize: 40,\n  headerSize: 6,\n  colorMode: 0\n};\nfunction createHeader(header) {\n  var buffer = Buffer.alloc(constants.headerSize);\n  buffer.writeUInt16LE(0, 0);\n  buffer.writeUInt16LE(1, 2);\n  buffer.writeUInt16LE(header, 4);\n  return buffer;\n}\nfunction createDirectory(data, offset) {\n  var buffer = Buffer.alloc(constants.directorySize);\n  var size = data.data.length + constants.bitmapSize;\n  var width = data.width === 256 ? 0 : data.width;\n  var height = data.height === 256 ? 0 : data.height;\n  var bpp = data.bpp * 8;\n  buffer.writeUInt8(width, 0);\n  buffer.writeUInt8(height, 1);\n  buffer.writeUInt8(0, 2);\n  buffer.writeUInt8(0, 3);\n  buffer.writeUInt16LE(1, 4);\n  buffer.writeUInt16LE(bpp, 6);\n  buffer.writeUInt32LE(size, 8);\n  buffer.writeUInt32LE(offset, 12);\n  return buffer;\n}\nfunction createBitmap(data, compression) {\n  var buffer = Buffer.alloc(constants.bitmapSize);\n  buffer.writeUInt32LE(constants.bitmapSize, 0);\n  buffer.writeInt32LE(data.width, 4);\n  buffer.writeInt32LE(data.height * 2, 8);\n  buffer.writeUInt16LE(1, 12);\n  buffer.writeUInt16LE(data.bpp * 8, 14);\n  buffer.writeUInt32LE(compression, 16);\n  buffer.writeUInt32LE(data.data.length, 20);\n  buffer.writeInt32LE(0, 24);\n  buffer.writeInt32LE(0, 28);\n  buffer.writeUInt32LE(0, 32);\n  buffer.writeUInt32LE(0, 36);\n  return buffer;\n}\nfunction createDIB(data, width, height, bpp) {\n  var cols = width * bpp;\n  var rows = height * cols;\n  var end = rows - cols;\n  var buffer = Buffer.alloc(data.length);\n  for (var row = 0; row < rows; row += cols) {\n    for (var col = 0; col < cols; col += bpp) {\n      var pos = row + col;\n      var r = data.readUInt8(pos);\n      var g = data.readUInt8(pos + 1);\n      var b = data.readUInt8(pos + 2);\n      var a = data.readUInt8(pos + 3);\n      pos = end - row + col;\n      buffer.writeUInt8(b, pos);\n      buffer.writeUInt8(g, pos + 1);\n      buffer.writeUInt8(r, pos + 2);\n      buffer.writeUInt8(a, pos + 3);\n    }\n  }\n  return buffer;\n}\nfunction generateFromPNGs(pngs) {\n  var header = createHeader(pngs.length);\n  var arr = [header];\n  var len = header.length;\n  var offset = constants.headerSize + constants.directorySize * pngs.length;\n  for (var png of pngs) {\n    var dir = createDirectory(png, offset);\n    arr.push(dir);\n    len += dir.length;\n    offset += png.data.length + constants.bitmapSize;\n  }\n  for (var _png of pngs) {\n    var _header = createBitmap(_png, constants.colorMode);\n    var dib = createDIB(_png.data, _png.width, _png.height, _png.bpp);\n    arr.push(_header, dib);\n    len += _header.length + dib.length;\n  }\n  return Buffer.concat(arr, len);\n}\nfunction generateAsync(_x) {\n  return _generateAsync.apply(this, arguments);\n}\nfunction _generateAsync() {\n  _generateAsync = _asyncToGenerator(function* (buffers) {\n    var pngs = yield Promise.all(buffers.map(function (x) {\n      return (0, parse_png_1.default)(x);\n    }));\n    return generateFromPNGs(pngs);\n  });\n  return _generateAsync.apply(this, arguments);\n}\nexports.generateAsync = generateAsync;","map":{"version":3,"names":["parse_png_1","__importDefault","require","constants","directorySize","bitmapSize","headerSize","colorMode","createHeader","header","buffer","Buffer","alloc","writeUInt16LE","createDirectory","data","offset","size","length","width","height","bpp","writeUInt8","writeUInt32LE","createBitmap","compression","writeInt32LE","createDIB","cols","rows","end","row","col","pos","r","readUInt8","g","b","a","generateFromPNGs","pngs","arr","len","png","dir","push","dib","concat","generateAsync","_x","_generateAsync","apply","arguments","_asyncToGenerator","buffers","Promise","all","map","x","default","exports"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/expo-pwa/node_modules/@expo/image-utils/src/Ico.ts"],"sourcesContent":["// Inspired by https://github.com/kevva/to-ico but reuses existing packages to keep bundle size small.\nimport parsePng from 'parse-png';\n\ntype PNG = {\n  data: Buffer;\n  width: number;\n  height: number;\n  bpp: number;\n};\n\nconst constants = {\n  directorySize: 16,\n  bitmapSize: 40,\n  headerSize: 6,\n  colorMode: 0,\n};\n\nfunction createHeader(header: number): Buffer {\n  const buffer = Buffer.alloc(constants.headerSize);\n\n  buffer.writeUInt16LE(0, 0);\n  buffer.writeUInt16LE(1, 2);\n  buffer.writeUInt16LE(header, 4);\n\n  return buffer;\n}\n\nfunction createDirectory(data: PNG, offset: number): Buffer {\n  const buffer = Buffer.alloc(constants.directorySize);\n  const size = data.data.length + constants.bitmapSize;\n  const width = data.width === 256 ? 0 : data.width;\n  const height = data.height === 256 ? 0 : data.height;\n  const bpp = data.bpp * 8;\n\n  buffer.writeUInt8(width, 0);\n  buffer.writeUInt8(height, 1);\n  buffer.writeUInt8(0, 2);\n  buffer.writeUInt8(0, 3);\n  buffer.writeUInt16LE(1, 4);\n  buffer.writeUInt16LE(bpp, 6);\n  buffer.writeUInt32LE(size, 8);\n  buffer.writeUInt32LE(offset, 12);\n\n  return buffer;\n}\n\nfunction createBitmap(data: PNG, compression: number): Buffer {\n  const buffer = Buffer.alloc(constants.bitmapSize);\n\n  buffer.writeUInt32LE(constants.bitmapSize, 0);\n  buffer.writeInt32LE(data.width, 4);\n  buffer.writeInt32LE(data.height * 2, 8);\n  buffer.writeUInt16LE(1, 12);\n  buffer.writeUInt16LE(data.bpp * 8, 14);\n  buffer.writeUInt32LE(compression, 16);\n  buffer.writeUInt32LE(data.data.length, 20);\n  buffer.writeInt32LE(0, 24);\n  buffer.writeInt32LE(0, 28);\n  buffer.writeUInt32LE(0, 32);\n  buffer.writeUInt32LE(0, 36);\n\n  return buffer;\n}\n\nfunction createDIB(data: Buffer, width: number, height: number, bpp: number): Buffer {\n  const cols = width * bpp;\n  const rows = height * cols;\n  const end = rows - cols;\n  const buffer = Buffer.alloc(data.length);\n\n  for (let row = 0; row < rows; row += cols) {\n    for (let col = 0; col < cols; col += bpp) {\n      let pos = row + col;\n\n      const r = data.readUInt8(pos);\n      const g = data.readUInt8(pos + 1);\n      const b = data.readUInt8(pos + 2);\n      const a = data.readUInt8(pos + 3);\n\n      pos = end - row + col;\n\n      buffer.writeUInt8(b, pos);\n      buffer.writeUInt8(g, pos + 1);\n      buffer.writeUInt8(r, pos + 2);\n      buffer.writeUInt8(a, pos + 3);\n    }\n  }\n\n  return buffer;\n}\n\nfunction generateFromPNGs(pngs: PNG[]): Buffer {\n  const header = createHeader(pngs.length);\n  const arr = [header];\n\n  let len = header.length;\n  let offset = constants.headerSize + constants.directorySize * pngs.length;\n\n  for (const png of pngs) {\n    const dir = createDirectory(png, offset);\n    arr.push(dir);\n    len += dir.length;\n    offset += png.data.length + constants.bitmapSize;\n  }\n\n  for (const png of pngs) {\n    const header = createBitmap(png, constants.colorMode);\n    const dib = createDIB(png.data, png.width, png.height, png.bpp);\n    arr.push(header, dib);\n    len += header.length + dib.length;\n  }\n\n  return Buffer.concat(arr, len);\n}\n\nexport async function generateAsync(buffers: Buffer[]): Promise<Buffer> {\n  const pngs: PNG[] = await Promise.all(buffers.map(x => parsePng(x)));\n  return generateFromPNGs(pngs);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}