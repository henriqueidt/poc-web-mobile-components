{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPWAManifestFromWebConfig = exports.getChromeIconConfig = exports.getFaviconIconConfig = exports.getSafariIconConfig = exports.getSafariStartupImageConfig = exports.getConfigForPWA = void 0;\nvar config_1 = require(\"@expo/config\");\nvar DEFAULT_LANGUAGE_ISO_CODE = \"en\";\nvar DEFAULT_DISPLAY = 'standalone';\nvar DEFAULT_STATUS_BAR = 'black-translucent';\nvar DEFAULT_PREFER_RELATED_APPLICATIONS = true;\nfunction ensurePWAorientation(orientation) {\n  if (orientation && typeof orientation === 'string') {\n    var webOrientation = orientation.toLowerCase();\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n  return undefined;\n}\nfunction sanitizePublicPath(publicPath) {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n  return publicPath + '/';\n}\nfunction getConfigForPWA(projectRoot) {\n  var _ref = (0, config_1.getConfig)(projectRoot, {\n      skipSDKVersionRequirement: true\n    }),\n    exp = _ref.exp;\n  return ensurePWAConfig(exp);\n}\nexports.getConfigForPWA = getConfigForPWA;\nfunction applyWebDefaults(appJSON) {\n  var appManifest = appJSON.expo || appJSON || {};\n  var _appManifest$web = appManifest.web,\n    webManifest = _appManifest$web === void 0 ? {} : _appManifest$web,\n    _appManifest$splash = appManifest.splash,\n    splash = _appManifest$splash === void 0 ? {} : _appManifest$splash,\n    _appManifest$ios = appManifest.ios,\n    ios = _appManifest$ios === void 0 ? {} : _appManifest$ios,\n    _appManifest$android = appManifest.android,\n    android = _appManifest$android === void 0 ? {} : _appManifest$android;\n  var _webManifest$build = webManifest.build,\n    webBuild = _webManifest$build === void 0 ? {} : _webManifest$build,\n    _webManifest$webDange = webManifest.webDangerous,\n    webDangerous = _webManifest$webDange === void 0 ? {} : _webManifest$webDange,\n    _webManifest$meta = webManifest.meta,\n    meta = _webManifest$meta === void 0 ? {} : _webManifest$meta;\n  var _meta$apple = meta.apple,\n    apple = _meta$apple === void 0 ? {} : _meta$apple;\n  var _ref2 = (0, config_1.getNameFromConfig)(appJSON),\n    appName = _ref2.appName,\n    webName = _ref2.webName;\n  var languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  var buildOutputPath = (0, config_1.getWebOutputPath)(appJSON);\n  var publicPath = sanitizePublicPath(webManifest.publicPath);\n  var primaryColor = appManifest.primaryColor;\n  var description = appManifest.description;\n  var webThemeColor = webManifest.themeColor || primaryColor;\n  var dir = webManifest.dir;\n  var shortName = webManifest.shortName || webName;\n  var display = webManifest.display || DEFAULT_DISPLAY;\n  var startUrl = webManifest.startUrl;\n  var scope = webManifest.scope,\n    crossorigin = webManifest.crossorigin;\n  var barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n  var orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n  var backgroundColor = webManifest.backgroundColor || splash.backgroundColor;\n  var preferRelatedApplications = webManifest.preferRelatedApplications === undefined ? DEFAULT_PREFER_RELATED_APPLICATIONS : webManifest.preferRelatedApplications;\n  var relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n  return _objectSpread(_objectSpread({}, appManifest), {}, {\n    name: appName,\n    description: description,\n    primaryColor: primaryColor,\n    ios: _objectSpread({}, ios),\n    android: _objectSpread({}, android),\n    web: _objectSpread(_objectSpread({}, webManifest), {}, {\n      meta: _objectSpread(_objectSpread({}, meta), {}, {\n        apple: _objectSpread(_objectSpread({}, apple), {}, {\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle: barStyle\n        })\n      }),\n      build: _objectSpread(_objectSpread({}, webBuild), {}, {\n        output: buildOutputPath,\n        publicPath: publicPath\n      }),\n      dangerous: webDangerous,\n      scope: scope,\n      crossorigin: crossorigin,\n      description: description,\n      preferRelatedApplications: preferRelatedApplications,\n      relatedApplications: relatedApplications,\n      startUrl: startUrl,\n      shortName: shortName,\n      display: display,\n      orientation: orientation,\n      dir: dir,\n      barStyle: barStyle,\n      backgroundColor: backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName\n    })\n  });\n}\nfunction inferWebRelatedApplicationsFromConfig(_ref3) {\n  var _ref3$web = _ref3.web,\n    web = _ref3$web === void 0 ? {} : _ref3$web,\n    _ref3$ios = _ref3.ios,\n    ios = _ref3$ios === void 0 ? {} : _ref3$ios,\n    _ref3$android = _ref3.android,\n    android = _ref3$android === void 0 ? {} : _ref3$android;\n  var relatedApplications = web.relatedApplications || [];\n  var bundleIdentifier = ios.bundleIdentifier,\n    appStoreUrl = ios.appStoreUrl;\n  if (bundleIdentifier) {\n    var PLATFORM_ITUNES = 'itunes';\n    var iosApp = relatedApplications.some(function (_ref4) {\n      var platform = _ref4.platform;\n      return platform === PLATFORM_ITUNES;\n    });\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier\n      });\n    }\n  }\n  var androidPackage = android.package,\n    playStoreUrl = android.playStoreUrl;\n  if (androidPackage) {\n    var PLATFORM_PLAY = 'play';\n    var alreadyHasAndroidApp = relatedApplications.some(function (_ref5) {\n      var platform = _ref5.platform;\n      return platform === PLATFORM_PLAY;\n    });\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || \"http://play.google.com/store/apps/details?id=\" + androidPackage,\n        id: androidPackage\n      });\n    }\n  }\n  return relatedApplications;\n}\nfunction getSafariStartupImageConfig(config) {\n  var _a, _b, _c, _d;\n  var splashScreenObject = function splashScreenObject(input) {\n    if (!input.image) return null;\n    return {\n      resizeMode: input.resizeMode,\n      src: input.image,\n      backgroundColor: input.backgroundColor\n    };\n  };\n  if (isObject((_a = config.web) === null || _a === void 0 ? void 0 : _a.splash)) {\n    return splashScreenObject((_b = config.web) === null || _b === void 0 ? void 0 : _b.splash);\n  }\n  if (isObject((_c = config.ios) === null || _c === void 0 ? void 0 : _c.splash)) {\n    return splashScreenObject((_d = config.ios) === null || _d === void 0 ? void 0 : _d.splash);\n  }\n  if (isObject(config.splash)) {\n    return splashScreenObject(config.splash);\n  }\n  return null;\n}\nexports.getSafariStartupImageConfig = getSafariStartupImageConfig;\nfunction getSafariIconConfig(config) {\n  var _a;\n  var validate = function validate(input) {\n    return {\n      resizeMode: 'contain',\n      src: input,\n      backgroundColor: 'transparent'\n    };\n  };\n  if (typeof ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.icon) === 'string') {\n    return validate(config.ios.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\nexports.getSafariIconConfig = getSafariIconConfig;\nfunction getFaviconIconConfig(config) {\n  var _a, _b;\n  var validate = function validate(input) {\n    return {\n      resizeMode: 'contain',\n      src: input,\n      backgroundColor: 'transparent'\n    };\n  };\n  if (typeof ((_a = config.web) === null || _a === void 0 ? void 0 : _a.favicon) === 'string') {\n    if (!((_b = config.web) === null || _b === void 0 ? void 0 : _b.favicon)) {\n      return null;\n    }\n    return validate(config.web.favicon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\nexports.getFaviconIconConfig = getFaviconIconConfig;\nfunction getChromeIconConfig(config) {\n  var _a;\n  var validate = function validate(input) {\n    return {\n      resizeMode: 'contain',\n      src: input,\n      backgroundColor: 'transparent'\n    };\n  };\n  if (typeof ((_a = config.android) === null || _a === void 0 ? void 0 : _a.icon) === 'string') {\n    return validate(config.android.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\nexports.getChromeIconConfig = getChromeIconConfig;\nfunction ensurePWAConfig(appJSON) {\n  var config = applyWebDefaults(appJSON);\n  return config;\n}\nfunction isObject(item) {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\nfunction createPWAManifestFromWebConfig(config) {\n  if (!isObject(config)) {\n    throw new Error('Web config must be a valid object');\n  }\n  var manifest = {\n    background_color: config.backgroundColor,\n    description: config.description,\n    display: config.display,\n    lang: config.lang,\n    name: config.name,\n    scope: config.scope,\n    short_name: config.shortName,\n    start_url: typeof config.startUrl === 'undefined' ? '/?utm_source=web_app_manifest' : config.startUrl,\n    theme_color: config.themeColor,\n    crossorigin: config.crossorigin\n  };\n  if (config.dir) {\n    manifest.dir = config.dir.toLowerCase();\n  }\n  if (config.orientation) {\n    manifest.orientation = config.orientation.toLowerCase();\n  }\n  if (Array.isArray(config.relatedApplications) && config.relatedApplications.length > 0) {\n    manifest.related_applications = config.relatedApplications;\n    manifest.prefer_related_applications = config.preferRelatedApplications;\n  }\n  return manifest;\n}\nexports.createPWAManifestFromWebConfig = createPWAManifestFromWebConfig;","map":{"version":3,"names":["config_1","require","DEFAULT_LANGUAGE_ISO_CODE","DEFAULT_DISPLAY","DEFAULT_STATUS_BAR","DEFAULT_PREFER_RELATED_APPLICATIONS","ensurePWAorientation","orientation","webOrientation","toLowerCase","undefined","sanitizePublicPath","publicPath","length","endsWith","getConfigForPWA","projectRoot","_ref","getConfig","skipSDKVersionRequirement","exp","ensurePWAConfig","exports","applyWebDefaults","appJSON","appManifest","expo","_appManifest$web","web","webManifest","_appManifest$splash","splash","_appManifest$ios","ios","_appManifest$android","android","_webManifest$build","build","webBuild","_webManifest$webDange","webDangerous","_webManifest$meta","meta","_meta$apple","apple","_ref2","getNameFromConfig","appName","webName","languageISOCode","lang","buildOutputPath","getWebOutputPath","primaryColor","description","webThemeColor","themeColor","dir","shortName","display","startUrl","scope","crossorigin","barStyle","backgroundColor","preferRelatedApplications","relatedApplications","inferWebRelatedApplicationsFromConfig","_objectSpread","name","formatDetection","mobileWebAppCapable","touchFullscreen","output","dangerous","_ref3","_ref3$web","_ref3$ios","_ref3$android","bundleIdentifier","appStoreUrl","PLATFORM_ITUNES","iosApp","some","_ref4","platform","push","url","id","androidPackage","package","playStoreUrl","PLATFORM_PLAY","alreadyHasAndroidApp","_ref5","getSafariStartupImageConfig","config","splashScreenObject","input","image","resizeMode","src","isObject","_a","_b","_c","_d","getSafariIconConfig","validate","icon","getFaviconIconConfig","favicon","getChromeIconConfig","item","Array","isArray","createPWAManifestFromWebConfig","Error","manifest","background_color","short_name","start_url","theme_color","related_applications","prefer_related_applications"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/expo-pwa/src/Manifest.ts"],"sourcesContent":["import {\n  AppJSONConfig,\n  ExpoConfig,\n  getConfig,\n  getNameFromConfig,\n  getWebOutputPath,\n} from '@expo/config';\n\nimport { IconOptions, Manifest, PWAConfig } from './Manifest.types';\n\n// Use root to work better with create-react-app\nconst DEFAULT_LANGUAGE_ISO_CODE = `en`;\nconst DEFAULT_DISPLAY = 'standalone';\nconst DEFAULT_STATUS_BAR = 'black-translucent';\nconst DEFAULT_PREFER_RELATED_APPLICATIONS = true;\n\n// Convert expo value to PWA value\nfunction ensurePWAorientation(orientation: string): string | undefined {\n  if (orientation && typeof orientation === 'string') {\n    const webOrientation = orientation.toLowerCase();\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n  return undefined;\n}\n\nfunction sanitizePublicPath(publicPath: unknown): string {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n  return publicPath + '/';\n}\n\nexport function getConfigForPWA(projectRoot: string): PWAConfig {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  return ensurePWAConfig(exp);\n}\n\nfunction applyWebDefaults(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  // For RN CLI support\n  // @ts-ignore: expo object doesn't exist on ExpoConfig\n  const appManifest = appJSON.expo || appJSON || {};\n  const { web: webManifest = {}, splash = {}, ios = {}, android = {} } = appManifest;\n  const { build: webBuild = {}, webDangerous = {}, meta = {} } = webManifest;\n  const { apple = {} } = meta;\n\n  // rn-cli apps use a displayName value as well.\n  const { appName, webName } = getNameFromConfig(appJSON);\n\n  const languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  const buildOutputPath = getWebOutputPath(appJSON);\n  const publicPath = sanitizePublicPath(webManifest.publicPath);\n  const primaryColor = appManifest.primaryColor;\n  const description = appManifest.description;\n  // The theme_color sets the color of the tool bar, and may be reflected in the app's preview in task switchers.\n  const webThemeColor = webManifest.themeColor || primaryColor;\n  const dir = webManifest.dir;\n  const shortName = webManifest.shortName || webName;\n  const display = webManifest.display || DEFAULT_DISPLAY;\n  const startUrl = webManifest.startUrl;\n  const { scope, crossorigin } = webManifest;\n  const barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n\n  const orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n\n  /**\n   * **Splash screen background color**\n   * `https://developers.google.com/web/fundamentals/web-app-manifest/#splash-screen`\n   * The background_color should be the same color as the load page,\n   * to provide a smooth transition from the splash screen to your app.\n   */\n  const backgroundColor = webManifest.backgroundColor || splash.backgroundColor; // No default background color\n\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/Manifest#prefer_related_applications\n   * Specifies a boolean value that hints for the user agent to indicate\n   * to the user that the specified native applications (see below) are recommended over the website.\n   * This should only be used if the related native apps really do offer something that the website can't... like Expo ;)\n   *\n   * >> The banner won't show up if the app is already installed:\n   * https://github.com/GoogleChrome/samples/issues/384#issuecomment-326387680\n   */\n  const preferRelatedApplications =\n    webManifest.preferRelatedApplications === undefined\n      ? DEFAULT_PREFER_RELATED_APPLICATIONS\n      : webManifest.preferRelatedApplications;\n\n  const relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n\n  return {\n    ...appManifest,\n    name: appName,\n    description,\n    primaryColor,\n    // Ensure these objects exist\n    ios: {\n      ...ios,\n    },\n    android: {\n      ...android,\n    },\n    web: {\n      ...webManifest,\n      meta: {\n        ...meta,\n        apple: {\n          ...apple,\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle,\n        },\n      },\n      build: {\n        ...webBuild,\n        output: buildOutputPath,\n        publicPath,\n      },\n      dangerous: webDangerous,\n      scope,\n      crossorigin,\n      description,\n      preferRelatedApplications,\n      relatedApplications,\n      startUrl,\n      shortName,\n      display,\n      orientation,\n      dir,\n      barStyle,\n      backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName,\n    },\n  };\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/Manifest#related_applications\n * An array of native applications that are installable by, or accessible to, the underlying platform\n * for example, a native Android application obtainable through the Google Play Store.\n * Such applications are intended to be alternatives to the\n * website that provides similar/equivalent functionality — like the native app version of the website.\n */\nfunction inferWebRelatedApplicationsFromConfig({ web = {}, ios = {}, android = {} }: any) {\n  const relatedApplications = web.relatedApplications || [];\n\n  const { bundleIdentifier, appStoreUrl } = ios;\n  if (bundleIdentifier) {\n    const PLATFORM_ITUNES = 'itunes';\n    const iosApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_ITUNES\n    );\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier,\n      });\n    }\n  }\n\n  const { package: androidPackage, playStoreUrl } = android;\n  if (androidPackage) {\n    const PLATFORM_PLAY = 'play';\n    const alreadyHasAndroidApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_PLAY\n    );\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || `http://play.google.com/store/apps/details?id=${androidPackage}`,\n        id: androidPackage,\n      });\n    }\n  }\n\n  return relatedApplications;\n}\n\nexport function getSafariStartupImageConfig(config: ExpoConfig): IconOptions | null {\n  // enforce no defaults\n  const splashScreenObject = (input: any): IconOptions | null => {\n    if (!input.image) return null;\n    return {\n      resizeMode: input.resizeMode,\n      src: input.image,\n      backgroundColor: input.backgroundColor,\n    };\n  };\n\n  // Allow empty objects\n  if (isObject(config.web?.splash)) {\n    return splashScreenObject(config.web?.splash);\n  }\n  if (isObject(config.ios?.splash)) {\n    return splashScreenObject(config.ios?.splash);\n  }\n  if (isObject(config.splash)) {\n    return splashScreenObject(config.splash);\n  }\n  return null;\n}\n\nexport function getSafariIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.ios?.icon === 'string') {\n    return validate(config.ios.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getFaviconIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // If the favicon is set but empty, we assume that the user does not want us to generate a favicon\n  if (typeof config.web?.favicon === 'string') {\n    // Empty string can be used to disable favicon generation.\n    if (!config.web?.favicon) {\n      return null;\n    }\n    return validate(config.web.favicon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getChromeIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.android?.icon === 'string') {\n    return validate(config.android.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nfunction ensurePWAConfig(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  const config = applyWebDefaults(appJSON);\n  return config;\n}\n\nfunction isObject(item: any): item is Record<any, any> {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n\nexport function createPWAManifestFromWebConfig(config?: ExpoConfig['web']): Manifest {\n  if (!isObject(config)) {\n    throw new Error('Web config must be a valid object');\n  }\n\n  const manifest: Manifest = {\n    background_color: config.backgroundColor,\n    description: config.description,\n    display: config.display,\n    lang: config.lang,\n    name: config.name,\n    scope: config.scope,\n    short_name: config.shortName,\n    start_url:\n      typeof config.startUrl === 'undefined' ? '/?utm_source=web_app_manifest' : config.startUrl,\n    theme_color: config.themeColor,\n    crossorigin: config.crossorigin,\n  };\n\n  // Browser will default to auto\n  if (config.dir) {\n    manifest.dir = config.dir.toLowerCase() as any;\n  }\n\n  if (config.orientation) {\n    manifest.orientation = config.orientation.toLowerCase() as any;\n  }\n\n  // Avoid defining an empty array, or setting prefer_related_applications to true when no applications are defined.\n  if (Array.isArray(config.relatedApplications) && config.relatedApplications.length > 0) {\n    manifest.related_applications = config.relatedApplications;\n    manifest.prefer_related_applications = config.preferRelatedApplications;\n  }\n\n  return manifest;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}