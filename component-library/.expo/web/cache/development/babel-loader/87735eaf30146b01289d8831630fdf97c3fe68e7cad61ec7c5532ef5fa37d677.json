{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._resetWarnings = exports.warnEnvironmentDeprecation = exports.validateEnvironment = void 0;\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar getConfig_1 = __importDefault(require(\"./getConfig\"));\nvar paths_1 = require(\"./paths\");\nfunction validateEnvironment(env) {\n  if (typeof env.projectRoot !== 'string') {\n    throw new Error(\"@expo/webpack-config requires a valid projectRoot string value which points to the root of your project\");\n  }\n  warnEnvironmentDeprecation(env, true);\n  var validModes = ['development', 'production', 'none'];\n  if (!env.mode || !validModes.includes(env.mode)) {\n    throw new Error(\"@expo/webpack-config requires a valid `mode` string which should be one of: \" + validModes.join(', '));\n  }\n  if (typeof env.platform === 'undefined') {\n    env.platform = 'web';\n  }\n  if (typeof env.https === 'undefined') {\n    env.https = false;\n  }\n  if (!env.locations) {\n    env.locations = (0, paths_1.getPaths)(env.projectRoot, env);\n  }\n  if (!env.config) {\n    env.config = (0, getConfig_1.default)(env);\n  }\n  return env;\n}\nexports.validateEnvironment = validateEnvironment;\nvar warned = {};\nfunction shouldWarnDeprecated(config, key, warnOnce) {\n  return (!warnOnce || !(key in warned)) && typeof config[key] !== 'undefined';\n}\nfunction warnEnvironmentDeprecation(env) {\n  var warnOnce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var warnings = {\n    production: 'Please use `mode: \"production\"` instead.',\n    development: 'Please use `mode: \"development\"` instead.',\n    polyfill: 'Please include polyfills manually in your project.'\n  };\n  for (var warning of Object.keys(warnings)) {\n    if (shouldWarnDeprecated(env, warning, warnOnce)) {\n      warned[warning] = true;\n      console.warn(chalk_1.default.bgYellow.black((\"The environment property `\" + warning + \"` is deprecated. \" + warnings[warning]).trim()));\n    }\n  }\n}\nexports.warnEnvironmentDeprecation = warnEnvironmentDeprecation;\nfunction _resetWarnings() {\n  warned = {};\n}\nexports._resetWarnings = _resetWarnings;","map":{"version":3,"names":["chalk_1","__importDefault","require","getConfig_1","paths_1","validateEnvironment","env","projectRoot","Error","warnEnvironmentDeprecation","validModes","mode","includes","join","platform","https","locations","getPaths","config","default","exports","warned","shouldWarnDeprecated","key","warnOnce","arguments","length","undefined","warnings","production","development","polyfill","warning","Object","keys","console","warn","bgYellow","black","trim","_resetWarnings"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/env/validate.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport { Environment, InputEnvironment } from '../types';\nimport getConfig from './getConfig';\nimport { getPaths } from './paths';\n\n/**\n * Validate the environment options and apply default values.\n *\n * @param env\n * @category env\n */\nexport function validateEnvironment(env: InputEnvironment): Environment {\n  if (typeof env.projectRoot !== 'string') {\n    throw new Error(\n      `@expo/webpack-config requires a valid projectRoot string value which points to the root of your project`\n    );\n  }\n  warnEnvironmentDeprecation(env, true);\n\n  const validModes = ['development', 'production', 'none'];\n  if (!env.mode || !validModes.includes(env.mode)) {\n    throw new Error(\n      `@expo/webpack-config requires a valid \\`mode\\` string which should be one of: ${validModes.join(\n        ', '\n      )}`\n    );\n  }\n\n  // Default to web. Allow any arbitrary platform.\n  if (typeof env.platform === 'undefined') {\n    env.platform = 'web';\n  }\n  // No https by default since it doesn't work well across different browsers and devices.\n  if (typeof env.https === 'undefined') {\n    env.https = false;\n  }\n\n  // Ensure the locations are defined.\n  if (!env.locations) {\n    env.locations = getPaths(env.projectRoot, env);\n  }\n\n  // Ensure the config is evaluated.\n  if (!env.config) {\n    env.config = getConfig(env as Environment);\n  }\n\n  return env as Environment;\n}\n\nlet warned: { [key: string]: boolean } = {};\n\nfunction shouldWarnDeprecated(\n  config: { [key: string]: any },\n  key: string,\n  warnOnce: boolean\n): boolean {\n  return (!warnOnce || !(key in warned)) && typeof config[key] !== 'undefined';\n}\n\n/**\n *\n * @param env\n * @param warnOnce\n * @category env\n * @internal\n */\nexport function warnEnvironmentDeprecation(env: InputEnvironment, warnOnce: boolean = false) {\n  const warnings: { [key: string]: string } = {\n    production: 'Please use `mode: \"production\"` instead.',\n    development: 'Please use `mode: \"development\"` instead.',\n    polyfill: 'Please include polyfills manually in your project.',\n  };\n\n  for (const warning of Object.keys(warnings)) {\n    if (shouldWarnDeprecated(env, warning, warnOnce)) {\n      warned[warning] = true;\n      console.warn(\n        chalk.bgYellow.black(\n          `The environment property \\`${warning}\\` is deprecated. ${warnings[warning]}`.trim()\n        )\n      );\n    }\n  }\n}\n\n/**\n * Used for testing\n * @category env\n * @internal\n */\nexport function _resetWarnings() {\n  warned = {};\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAGA,IAAAC,WAAA,GAAAF,eAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAQA,SAAgBG,mBAAmBA,CAACC,GAAqB;EACvD,IAAI,OAAOA,GAAG,CAACC,WAAW,KAAK,QAAQ,EAAE;IACvC,MAAM,IAAIC,KAAK,2GAEd;;EAEHC,0BAA0B,CAACH,GAAG,EAAE,IAAI,CAAC;EAErC,IAAMI,UAAU,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,MAAM,CAAC;EACxD,IAAI,CAACJ,GAAG,CAACK,IAAI,IAAI,CAACD,UAAU,CAACE,QAAQ,CAACN,GAAG,CAACK,IAAI,CAAC,EAAE;IAC/C,MAAM,IAAIH,KAAK,kFACoEE,UAAU,CAACG,IAAI,CAC9F,IAAI,CACL,CACF;;EAIH,IAAI,OAAOP,GAAG,CAACQ,QAAQ,KAAK,WAAW,EAAE;IACvCR,GAAG,CAACQ,QAAQ,GAAG,KAAK;;EAGtB,IAAI,OAAOR,GAAG,CAACS,KAAK,KAAK,WAAW,EAAE;IACpCT,GAAG,CAACS,KAAK,GAAG,KAAK;;EAInB,IAAI,CAACT,GAAG,CAACU,SAAS,EAAE;IAClBV,GAAG,CAACU,SAAS,GAAG,IAAAZ,OAAA,CAAAa,QAAQ,EAACX,GAAG,CAACC,WAAW,EAAED,GAAG,CAAC;;EAIhD,IAAI,CAACA,GAAG,CAACY,MAAM,EAAE;IACfZ,GAAG,CAACY,MAAM,GAAG,IAAAf,WAAA,CAAAgB,OAAS,EAACb,GAAkB,CAAC;;EAG5C,OAAOA,GAAkB;AAC3B;AArCAc,OAAA,CAAAf,mBAAA,GAAAA,mBAAA;AAuCA,IAAIgB,MAAM,GAA+B,EAAE;AAE3C,SAASC,oBAAoBA,CAC3BJ,MAA8B,EAC9BK,GAAW,EACXC,QAAiB;EAEjB,OAAO,CAAC,CAACA,QAAQ,IAAI,EAAED,GAAG,IAAIF,MAAM,CAAC,KAAK,OAAOH,MAAM,CAACK,GAAG,CAAC,KAAK,WAAW;AAC9E;AASA,SAAgBd,0BAA0BA,CAACH,GAAqB,EAA2B;EAAA,IAAzBkB,QAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAoB,KAAK;EACzF,IAAMG,QAAQ,GAA8B;IAC1CC,UAAU,EAAE,0CAA0C;IACtDC,WAAW,EAAE,2CAA2C;IACxDC,QAAQ,EAAE;GACX;EAED,KAAK,IAAMC,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,EAAE;IAC3C,IAAIN,oBAAoB,CAAChB,GAAG,EAAE0B,OAAO,EAAER,QAAQ,CAAC,EAAE;MAChDH,MAAM,CAACW,OAAO,CAAC,GAAG,IAAI;MACtBG,OAAO,CAACC,IAAI,CACVpC,OAAA,CAAAmB,OAAK,CAACkB,QAAQ,CAACC,KAAK,CAClB,gCAA8BN,OAAO,yBAAqBJ,QAAQ,CAACI,OAAO,CAAC,EAAGO,IAAI,EAAE,CACrF,CACF;;;AAGP;AAjBAnB,OAAA,CAAAX,0BAAA,GAAAA,0BAAA;AAwBA,SAAgB+B,cAAcA,CAAA;EAC5BnB,MAAM,GAAG,EAAE;AACb;AAFAD,OAAA,CAAAoB,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}