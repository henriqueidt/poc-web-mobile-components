{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVersionCode = getVersionCode;\nexports.getVersionName = getVersionName;\nexports.setMinBuildScriptExtVersion = setMinBuildScriptExtVersion;\nexports.setVersionCode = setVersionCode;\nexports.setVersionName = setVersionName;\nexports.withVersion = exports.withBuildScriptExtMinimumVersion = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _warnings() {\n  var data = require(\"../utils/warnings\");\n  _warnings = function _warnings() {\n    return data;\n  };\n  return data;\n}\nvar withVersion = function withVersion(config) {\n  return (0, _androidPlugins().withAppBuildGradle)(config, function (config) {\n    if (config.modResults.language === 'groovy') {\n      config.modResults.contents = setVersionCode(config, config.modResults.contents);\n      config.modResults.contents = setVersionName(config, config.modResults.contents);\n    } else {\n      (0, _warnings().addWarningAndroid)('android.versionCode', \"Cannot automatically configure app build.gradle if it's not groovy\");\n    }\n    return config;\n  });\n};\nexports.withVersion = withVersion;\nvar withBuildScriptExtMinimumVersion = function withBuildScriptExtMinimumVersion(config, props) {\n  return (0, _androidPlugins().withProjectBuildGradle)(config, function (config) {\n    if (config.modResults.language === 'groovy') {\n      config.modResults.contents = setMinBuildScriptExtVersion(config.modResults.contents, props);\n    } else {\n      (0, _warnings().addWarningAndroid)('withBuildScriptExtVersion', \"Cannot automatically configure project build.gradle if it's not groovy\");\n    }\n    return config;\n  });\n};\nexports.withBuildScriptExtMinimumVersion = withBuildScriptExtMinimumVersion;\nfunction setMinBuildScriptExtVersion(buildGradle, _ref) {\n  var name = _ref.name,\n    minVersion = _ref.minVersion;\n  var _buildGradle$match;\n  var regex = new RegExp(\"(\" + name + \"\\\\s?=\\\\s?)(\\\\d+(?:\\\\.\\\\d+)?)\");\n  var currentVersion = (_buildGradle$match = buildGradle.match(regex)) === null || _buildGradle$match === void 0 ? void 0 : _buildGradle$match[2];\n  if (!currentVersion) {\n    (0, _warnings().addWarningAndroid)('withBuildScriptExtVersion', \"Cannot set minimum buildscript.ext.\" + name + \" version because the property \\\"\" + name + \"\\\" cannot be found or does not have a numeric value.\");\n    return buildGradle;\n  }\n  var currentVersionNum = Number(currentVersion);\n  return buildGradle.replace(regex, \"$1\" + Math.max(minVersion, currentVersionNum));\n}\nfunction getVersionName(config) {\n  var _config$version;\n  return (_config$version = config.version) !== null && _config$version !== void 0 ? _config$version : null;\n}\nfunction setVersionName(config, buildGradle) {\n  var versionName = getVersionName(config);\n  if (versionName === null) {\n    return buildGradle;\n  }\n  var pattern = new RegExp(\"versionName \\\".*\\\"\");\n  return buildGradle.replace(pattern, \"versionName \\\"\" + versionName + \"\\\"\");\n}\nfunction getVersionCode(config) {\n  var _config$android$versi, _config$android;\n  return (_config$android$versi = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.versionCode) !== null && _config$android$versi !== void 0 ? _config$android$versi : 1;\n}\nfunction setVersionCode(config, buildGradle) {\n  var versionCode = getVersionCode(config);\n  if (versionCode === null) {\n    return buildGradle;\n  }\n  var pattern = new RegExp(\"versionCode.*\");\n  return buildGradle.replace(pattern, \"versionCode \" + versionCode);\n}","map":{"version":3,"names":["_androidPlugins","data","require","_warnings","withVersion","config","withAppBuildGradle","modResults","language","contents","setVersionCode","setVersionName","addWarningAndroid","withBuildScriptExtMinimumVersion","props","withProjectBuildGradle","setMinBuildScriptExtVersion","buildGradle","_ref","name","minVersion","_buildGradle$match","regex","RegExp","currentVersion","match","currentVersionNum","Number","replace","Math","max","getVersionName","_config$version","version","versionName","pattern","getVersionCode","_config$android$versi","_config$android","android","versionCode"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/Version.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withAppBuildGradle, withProjectBuildGradle } from '../plugins/android-plugins';\nimport { addWarningAndroid } from '../utils/warnings';\n\nexport const withVersion: ConfigPlugin = config => {\n  return withAppBuildGradle(config, config => {\n    if (config.modResults.language === 'groovy') {\n      config.modResults.contents = setVersionCode(config, config.modResults.contents);\n      config.modResults.contents = setVersionName(config, config.modResults.contents);\n    } else {\n      addWarningAndroid(\n        'android.versionCode',\n        `Cannot automatically configure app build.gradle if it's not groovy`\n      );\n    }\n    return config;\n  });\n};\n\n/** Sets a numeric version for a value in the project.gradle buildscript.ext object to be at least the provided props.minVersion, if the existing value is greater then no change will be made. */\nexport const withBuildScriptExtMinimumVersion: ConfigPlugin<{\n  name: string;\n  minVersion: number;\n}> = (config, props) => {\n  return withProjectBuildGradle(config, config => {\n    if (config.modResults.language === 'groovy') {\n      config.modResults.contents = setMinBuildScriptExtVersion(config.modResults.contents, props);\n    } else {\n      addWarningAndroid(\n        'withBuildScriptExtVersion',\n        `Cannot automatically configure project build.gradle if it's not groovy`\n      );\n    }\n    return config;\n  });\n};\n\nexport function setMinBuildScriptExtVersion(\n  buildGradle: string,\n  { name, minVersion }: { name: string; minVersion: number }\n) {\n  const regex = new RegExp(`(${name}\\\\s?=\\\\s?)(\\\\d+(?:\\\\.\\\\d+)?)`);\n  const currentVersion = buildGradle.match(regex)?.[2];\n  if (!currentVersion) {\n    addWarningAndroid(\n      'withBuildScriptExtVersion',\n      `Cannot set minimum buildscript.ext.${name} version because the property \"${name}\" cannot be found or does not have a numeric value.`\n    );\n    // TODO: Maybe just add the property...\n    return buildGradle;\n  }\n\n  const currentVersionNum = Number(currentVersion);\n  return buildGradle.replace(regex, `$1${Math.max(minVersion, currentVersionNum)}`);\n}\n\nexport function getVersionName(config: Pick<ExpoConfig, 'version'>) {\n  return config.version ?? null;\n}\n\nexport function setVersionName(config: Pick<ExpoConfig, 'version'>, buildGradle: string) {\n  const versionName = getVersionName(config);\n  if (versionName === null) {\n    return buildGradle;\n  }\n\n  const pattern = new RegExp(`versionName \".*\"`);\n  return buildGradle.replace(pattern, `versionName \"${versionName}\"`);\n}\n\nexport function getVersionCode(config: Pick<ExpoConfig, 'android'>) {\n  return config.android?.versionCode ?? 1;\n}\n\nexport function setVersionCode(config: Pick<ExpoConfig, 'android'>, buildGradle: string) {\n  const versionCode = getVersionCode(config);\n  if (versionCode === null) {\n    return buildGradle;\n  }\n\n  const pattern = new RegExp(`versionCode.*`);\n  return buildGradle.replace(pattern, `versionCode ${versionCode}`);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}