{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGeneratedHeaderComment = createGeneratedHeaderComment;\nexports.createHash = createHash;\nexports.mergeContents = mergeContents;\nexports.removeContents = removeContents;\nexports.removeGeneratedContents = removeGeneratedContents;\nfunction _crypto() {\n  var data = _interopRequireDefault(require(\"crypto\"));\n  _crypto = function _crypto() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getGeneratedSectionIndexes(src, tag) {\n  var contents = src.split('\\n');\n  var start = contents.findIndex(function (line) {\n    return line.includes(\"@generated begin \" + tag);\n  });\n  var end = contents.findIndex(function (line) {\n    return line.includes(\"@generated end \" + tag);\n  });\n  return {\n    contents: contents,\n    start: start,\n    end: end\n  };\n}\nfunction mergeContents(_ref) {\n  var src = _ref.src,\n    newSrc = _ref.newSrc,\n    tag = _ref.tag,\n    anchor = _ref.anchor,\n    offset = _ref.offset,\n    comment = _ref.comment;\n  var header = createGeneratedHeaderComment(newSrc, tag, comment);\n  if (!src.includes(header)) {\n    var sanitizedTarget = removeGeneratedContents(src, tag);\n    return {\n      contents: addLines(sanitizedTarget !== null && sanitizedTarget !== void 0 ? sanitizedTarget : src, anchor, offset, [header].concat(_toConsumableArray(newSrc.split('\\n')), [comment + \" @generated end \" + tag])),\n      didMerge: true,\n      didClear: !!sanitizedTarget\n    };\n  }\n  return {\n    contents: src,\n    didClear: false,\n    didMerge: false\n  };\n}\nfunction removeContents(_ref2) {\n  var src = _ref2.src,\n    tag = _ref2.tag;\n  var sanitizedTarget = removeGeneratedContents(src, tag);\n  return {\n    contents: sanitizedTarget !== null && sanitizedTarget !== void 0 ? sanitizedTarget : src,\n    didMerge: false,\n    didClear: !!sanitizedTarget\n  };\n}\nfunction addLines(content, find, offset, toAdd) {\n  var lines = content.split('\\n');\n  var lineIndex = lines.findIndex(function (line) {\n    return line.match(find);\n  });\n  if (lineIndex < 0) {\n    var error = new Error(\"Failed to match \\\"\" + find + \"\\\" in contents:\\n\" + content);\n    error.code = 'ERR_NO_MATCH';\n    throw error;\n  }\n  for (var newLine of toAdd) {\n    lines.splice(lineIndex + offset, 0, newLine);\n    lineIndex++;\n  }\n  return lines.join('\\n');\n}\nfunction removeGeneratedContents(src, tag) {\n  var _getGeneratedSectionI = getGeneratedSectionIndexes(src, tag),\n    contents = _getGeneratedSectionI.contents,\n    start = _getGeneratedSectionI.start,\n    end = _getGeneratedSectionI.end;\n  if (start > -1 && end > -1 && start < end) {\n    contents.splice(start, end - start + 1);\n    return contents.join('\\n');\n  }\n  return null;\n}\nfunction createGeneratedHeaderComment(contents, tag, comment) {\n  var hashKey = createHash(contents);\n  return comment + \" @generated begin \" + tag + \" - expo prebuild (DO NOT MODIFY) \" + hashKey;\n}\nfunction createHash(src) {\n  var hash = _crypto().default.createHash('sha1').update(src).digest('hex');\n  return \"sync-\" + hash;\n}","map":{"version":3,"names":["_crypto","data","_interopRequireDefault","require","getGeneratedSectionIndexes","src","tag","contents","split","start","findIndex","line","includes","end","mergeContents","_ref","newSrc","anchor","offset","comment","header","createGeneratedHeaderComment","sanitizedTarget","removeGeneratedContents","addLines","concat","_toConsumableArray","didMerge","didClear","removeContents","_ref2","content","find","toAdd","lines","lineIndex","match","error","Error","code","newLine","splice","join","_getGeneratedSectionI","hashKey","createHash","hash","default","update","digest"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/utils/generateCode.ts"],"sourcesContent":["/**\n * Get line indexes for the generated section of a file.\n *\n * @param src\n */\nimport crypto from 'crypto';\n\nfunction getGeneratedSectionIndexes(\n  src: string,\n  tag: string\n): { contents: string[]; start: number; end: number } {\n  const contents = src.split('\\n');\n  const start = contents.findIndex(line => line.includes(`@generated begin ${tag}`));\n  const end = contents.findIndex(line => line.includes(`@generated end ${tag}`));\n\n  return { contents, start, end };\n}\n\nexport type MergeResults = {\n  contents: string;\n  didClear: boolean;\n  didMerge: boolean;\n};\n\n/**\n * Merge the contents of two files together and add a generated header.\n *\n * @param src contents of the original file\n * @param newSrc new contents to merge into the original file\n * @param identifier used to update and remove merges\n * @param anchor regex to where the merge should begin\n * @param offset line offset to start merging at (<1 for behind the anchor)\n * @param comment comment style `//` or `#`\n */\nexport function mergeContents({\n  src,\n  newSrc,\n  tag,\n  anchor,\n  offset,\n  comment,\n}: {\n  src: string;\n  newSrc: string;\n  tag: string;\n  anchor: string | RegExp;\n  offset: number;\n  comment: string;\n}): MergeResults {\n  const header = createGeneratedHeaderComment(newSrc, tag, comment);\n  if (!src.includes(header)) {\n    // Ensure the old generated contents are removed.\n    const sanitizedTarget = removeGeneratedContents(src, tag);\n    return {\n      contents: addLines(sanitizedTarget ?? src, anchor, offset, [\n        header,\n        ...newSrc.split('\\n'),\n        `${comment} @generated end ${tag}`,\n      ]),\n      didMerge: true,\n      didClear: !!sanitizedTarget,\n    };\n  }\n  return { contents: src, didClear: false, didMerge: false };\n}\n\nexport function removeContents({ src, tag }: { src: string; tag: string }): MergeResults {\n  // Ensure the old generated contents are removed.\n  const sanitizedTarget = removeGeneratedContents(src, tag);\n  return {\n    contents: sanitizedTarget ?? src,\n    didMerge: false,\n    didClear: !!sanitizedTarget,\n  };\n}\n\nfunction addLines(content: string, find: string | RegExp, offset: number, toAdd: string[]) {\n  const lines = content.split('\\n');\n\n  let lineIndex = lines.findIndex(line => line.match(find));\n  if (lineIndex < 0) {\n    const error = new Error(`Failed to match \"${find}\" in contents:\\n${content}`);\n    // @ts-ignore\n    error.code = 'ERR_NO_MATCH';\n    throw error;\n  }\n  for (const newLine of toAdd) {\n    lines.splice(lineIndex + offset, 0, newLine);\n    lineIndex++;\n  }\n\n  return lines.join('\\n');\n}\n\n/**\n * Removes the generated section from a file, returns null when nothing can be removed.\n * This sways heavily towards not removing lines unless it's certain that modifications were not made manually.\n *\n * @param src\n */\nexport function removeGeneratedContents(src: string, tag: string): string | null {\n  const { contents, start, end } = getGeneratedSectionIndexes(src, tag);\n  if (start > -1 && end > -1 && start < end) {\n    contents.splice(start, end - start + 1);\n    // TODO: We could in theory check that the contents we're removing match the hash used in the header,\n    // this would ensure that we don't accidentally remove lines that someone added or removed from the generated section.\n    return contents.join('\\n');\n  }\n  return null;\n}\n\nexport function createGeneratedHeaderComment(\n  contents: string,\n  tag: string,\n  comment: string\n): string {\n  const hashKey = createHash(contents);\n\n  // Everything after the `${tag} ` is unversioned and can be freely modified without breaking changes.\n  return `${comment} @generated begin ${tag} - expo prebuild (DO NOT MODIFY) ${hashKey}`;\n}\n\nexport function createHash(src: string): string {\n  // this doesn't need to be secure, the shorter the better.\n  const hash = crypto.createHash('sha1').update(src).digest('hex');\n  return `sync-${hash}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}