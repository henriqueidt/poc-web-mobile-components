{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configureEasBuildAsync = configureEasBuildAsync;\nexports.getEasBuildGradlePath = getEasBuildGradlePath;\nexports.isEasBuildGradleConfiguredAsync = isEasBuildGradleConfiguredAsync;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _EasBuildGradleScript() {\n  var data = _interopRequireDefault(require(\"./EasBuildGradleScript\"));\n  _EasBuildGradleScript = function _EasBuildGradleScript() {\n    return data;\n  };\n  return data;\n}\nfunction Paths() {\n  var data = _interopRequireWildcard(require(\"./Paths\"));\n  Paths = function Paths() {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar APPLY_EAS_GRADLE = 'apply from: \"./eas-build.gradle\"';\nfunction hasApplyLine(content, applyLine) {\n  return content.replace(/\\r\\n/g, '\\n').split('\\n').some(function (line) {\n    return line === applyLine || line === applyLine.replace(/\"/g, \"'\");\n  });\n}\nfunction getEasBuildGradlePath(projectRoot) {\n  return _path().default.join(projectRoot, 'android', 'app', 'eas-build.gradle');\n}\nfunction configureEasBuildAsync(_x) {\n  return _configureEasBuildAsync.apply(this, arguments);\n}\nfunction _configureEasBuildAsync() {\n  _configureEasBuildAsync = _asyncToGenerator(function* (projectRoot) {\n    var buildGradlePath = Paths().getAppBuildGradleFilePath(projectRoot);\n    var easGradlePath = getEasBuildGradlePath(projectRoot);\n    yield _fs().default.promises.writeFile(easGradlePath, _EasBuildGradleScript().default);\n    var buildGradleContent = yield _fs().default.promises.readFile(_path().default.join(buildGradlePath), 'utf8');\n    var hasEasGradleApply = hasApplyLine(buildGradleContent, APPLY_EAS_GRADLE);\n    if (!hasEasGradleApply) {\n      yield _fs().default.promises.writeFile(buildGradlePath, buildGradleContent.trim() + \"\\n\" + APPLY_EAS_GRADLE + \"\\n\");\n    }\n  });\n  return _configureEasBuildAsync.apply(this, arguments);\n}\nfunction isEasBuildGradleConfiguredAsync(_x2) {\n  return _isEasBuildGradleConfiguredAsync.apply(this, arguments);\n}\nfunction _isEasBuildGradleConfiguredAsync() {\n  _isEasBuildGradleConfiguredAsync = _asyncToGenerator(function* (projectRoot) {\n    var buildGradlePath = Paths().getAppBuildGradleFilePath(projectRoot);\n    var easGradlePath = getEasBuildGradlePath(projectRoot);\n    var hasEasGradleFile = yield _fs().default.existsSync(easGradlePath);\n    var buildGradleContent = yield _fs().default.promises.readFile(_path().default.join(buildGradlePath), 'utf8');\n    var hasEasGradleApply = hasApplyLine(buildGradleContent, APPLY_EAS_GRADLE);\n    return hasEasGradleApply && hasEasGradleFile;\n  });\n  return _isEasBuildGradleConfiguredAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_fs","data","_interopRequireDefault","require","_path","_EasBuildGradleScript","Paths","_interopRequireWildcard","APPLY_EAS_GRADLE","hasApplyLine","content","applyLine","replace","split","some","line","getEasBuildGradlePath","projectRoot","default","join","configureEasBuildAsync","_x","_configureEasBuildAsync","apply","arguments","_asyncToGenerator","buildGradlePath","getAppBuildGradleFilePath","easGradlePath","promises","writeFile","buildGradleContent","readFile","hasEasGradleApply","trim","isEasBuildGradleConfiguredAsync","_x2","_isEasBuildGradleConfiguredAsync","hasEasGradleFile","existsSync"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/EasBuild.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport gradleScript from './EasBuildGradleScript';\nimport * as Paths from './Paths';\n\nconst APPLY_EAS_GRADLE = 'apply from: \"./eas-build.gradle\"';\n\nfunction hasApplyLine(content: string, applyLine: string): boolean {\n  return (\n    content\n      .replace(/\\r\\n/g, '\\n')\n      .split('\\n')\n      // Check for both single and double quotes\n      .some(line => line === applyLine || line === applyLine.replace(/\"/g, \"'\"))\n  );\n}\n\nexport function getEasBuildGradlePath(projectRoot: string): string {\n  return path.join(projectRoot, 'android', 'app', 'eas-build.gradle');\n}\n\nexport async function configureEasBuildAsync(projectRoot: string): Promise<void> {\n  const buildGradlePath = Paths.getAppBuildGradleFilePath(projectRoot);\n  const easGradlePath = getEasBuildGradlePath(projectRoot);\n\n  await fs.promises.writeFile(easGradlePath, gradleScript);\n\n  const buildGradleContent = await fs.promises.readFile(path.join(buildGradlePath), 'utf8');\n\n  const hasEasGradleApply = hasApplyLine(buildGradleContent, APPLY_EAS_GRADLE);\n\n  if (!hasEasGradleApply) {\n    await fs.promises.writeFile(\n      buildGradlePath,\n      `${buildGradleContent.trim()}\\n${APPLY_EAS_GRADLE}\\n`\n    );\n  }\n}\n\nexport async function isEasBuildGradleConfiguredAsync(projectRoot: string): Promise<boolean> {\n  const buildGradlePath = Paths.getAppBuildGradleFilePath(projectRoot);\n  const easGradlePath = getEasBuildGradlePath(projectRoot);\n\n  const hasEasGradleFile = await fs.existsSync(easGradlePath);\n\n  const buildGradleContent = await fs.promises.readFile(path.join(buildGradlePath), 'utf8');\n  const hasEasGradleApply = hasApplyLine(buildGradleContent, APPLY_EAS_GRADLE);\n\n  return hasEasGradleApply && hasEasGradleFile;\n}\n"],"mappings":";;;;;;;;;AAAA,SAAAA,IAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,GAAA,YAAAA,IAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,MAAA;EAAA,IAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,KAAA,YAAAA,MAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAI,sBAAA;EAAA,IAAAJ,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAE,qBAAA,YAAAA,sBAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,MAAA;EAAA,IAAAL,IAAA,GAAAM,uBAAA,CAAAJ,OAAA;EAAAG,KAAA,YAAAA,MAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMO,gBAAgB,GAAG,kCAAzB;AAEA,SAASC,YAATA,CAAsBC,OAAtB,EAAuCC,SAAvC,EAAmE;EACjE,OACED,OAAO,CACJE,OADH,CACW,OADX,EACoB,IADpB,EAEGC,KAFH,CAES,IAFT,EAIGC,IAJH,CAIQ,UAAAC,IAAI;IAAA,OAAIA,IAAI,KAAKJ,SAAT,IAAsBI,IAAI,KAAKJ,SAAS,CAACC,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,CAJ/C;EAAA,EADF;AAOD;AAEM,SAASI,qBAATA,CAA+BC,WAA/B,EAA4D;EACjE,OAAOb,KAAA,GAAAc,OAAA,CAAKC,IAAL,CAAUF,WAAV,EAAuB,SAAvB,EAAkC,KAAlC,EAAyC,kBAAzC,CAAP;AACD;AAAA,SAEqBG,sBAAfA,CAAAC,EAAA;EAAA,OAAAC,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,wBAAA;EAAAA,uBAAA,GAAAG,iBAAA,YAAsCR,WAAtC,EAA0E;IAC/E,IAAMS,eAAe,GAAGpB,KAAK,GAACqB,yBAAN,CAAgCV,WAAhC,CAAxB;IACA,IAAMW,aAAa,GAAGZ,qBAAqB,CAACC,WAAD,CAA3C;IAEA,MAAMjB,GAAA,GAAAkB,OAAA,CAAGW,QAAH,CAAYC,SAAZ,CAAsBF,aAAtB,EAAqCvB,qBAAA,GAAAa,OAArC,CAAN;IAEA,IAAMa,kBAAkB,SAAS/B,GAAA,GAAAkB,OAAA,CAAGW,QAAH,CAAYG,QAAZ,CAAqB5B,KAAA,GAAAc,OAAA,CAAKC,IAAL,CAAUO,eAAV,CAArB,EAAiD,MAAjD,CAAjC;IAEA,IAAMO,iBAAiB,GAAGxB,YAAY,CAACsB,kBAAD,EAAqBvB,gBAArB,CAAtC;IAEA,IAAI,CAACyB,iBAAL,EAAwB;MACtB,MAAMjC,GAAA,GAAAkB,OAAA,CAAGW,QAAH,CAAYC,SAAZ,CACJJ,eADI,EAEDK,kBAAkB,CAACG,IAAnB,EAA0B,UAAI1B,gBAAiB,QAFpD;IAID;EACF;EAAA,OAAAc,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqBW,+BAAfA,CAAAC,GAAA;EAAA,OAAAC,gCAAA,CAAAd,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAa,iCAAA;EAAAA,gCAAA,GAAAZ,iBAAA,YAA+CR,WAA/C,EAAsF;IAC3F,IAAMS,eAAe,GAAGpB,KAAK,GAACqB,yBAAN,CAAgCV,WAAhC,CAAxB;IACA,IAAMW,aAAa,GAAGZ,qBAAqB,CAACC,WAAD,CAA3C;IAEA,IAAMqB,gBAAgB,SAAStC,GAAA,GAAAkB,OAAA,CAAGqB,UAAH,CAAcX,aAAd,CAA/B;IAEA,IAAMG,kBAAkB,SAAS/B,GAAA,GAAAkB,OAAA,CAAGW,QAAH,CAAYG,QAAZ,CAAqB5B,KAAA,GAAAc,OAAA,CAAKC,IAAL,CAAUO,eAAV,CAArB,EAAiD,MAAjD,CAAjC;IACA,IAAMO,iBAAiB,GAAGxB,YAAY,CAACsB,kBAAD,EAAqBvB,gBAArB,CAAtC;IAEA,OAAOyB,iBAAiB,IAAIK,gBAA5B;EACD;EAAA,OAAAD,gCAAA,CAAAd,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}