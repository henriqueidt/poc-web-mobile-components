{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.appendScheme = appendScheme;\nexports.getScheme = getScheme;\nexports.getSchemesFromPlist = getSchemesFromPlist;\nexports.hasScheme = hasScheme;\nexports.removeScheme = removeScheme;\nexports.setScheme = setScheme;\nexports.withScheme = void 0;\nfunction _iosPlugins() {\n  var data = require(\"../plugins/ios-plugins\");\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n  return data;\n}\nvar withScheme = (0, _iosPlugins().createInfoPlistPlugin)(setScheme, 'withScheme');\nexports.withScheme = withScheme;\nfunction getScheme(config) {\n  if (Array.isArray(config.scheme)) {\n    var validate = function validate(value) {\n      return typeof value === 'string';\n    };\n    return config.scheme.filter(validate);\n  } else if (typeof config.scheme === 'string') {\n    return [config.scheme];\n  }\n  return [];\n}\nfunction setScheme(config, infoPlist) {\n  var _config$ios, _config$ios2;\n  var scheme = [].concat(_toConsumableArray(getScheme(config)), _toConsumableArray(getScheme((_config$ios = config.ios) !== null && _config$ios !== void 0 ? _config$ios : {})));\n  if ((_config$ios2 = config.ios) !== null && _config$ios2 !== void 0 && _config$ios2.bundleIdentifier) {\n    scheme.push(config.ios.bundleIdentifier);\n  }\n  if (scheme.length === 0) {\n    return infoPlist;\n  }\n  return _objectSpread(_objectSpread({}, infoPlist), {}, {\n    CFBundleURLTypes: [{\n      CFBundleURLSchemes: scheme\n    }]\n  });\n}\nfunction appendScheme(scheme, infoPlist) {\n  var _infoPlist$CFBundleUR;\n  if (!scheme) {\n    return infoPlist;\n  }\n  var existingSchemes = (_infoPlist$CFBundleUR = infoPlist.CFBundleURLTypes) !== null && _infoPlist$CFBundleUR !== void 0 ? _infoPlist$CFBundleUR : [];\n  if (existingSchemes.some(function (_ref) {\n    var CFBundleURLSchemes = _ref.CFBundleURLSchemes;\n    return CFBundleURLSchemes.includes(scheme);\n  })) {\n    return infoPlist;\n  }\n  return _objectSpread(_objectSpread({}, infoPlist), {}, {\n    CFBundleURLTypes: [].concat(_toConsumableArray(existingSchemes), [{\n      CFBundleURLSchemes: [scheme]\n    }])\n  });\n}\nfunction removeScheme(scheme, infoPlist) {\n  if (!scheme) {\n    return infoPlist;\n  }\n  if (!infoPlist.CFBundleURLTypes) {\n    return infoPlist;\n  }\n  infoPlist.CFBundleURLTypes = infoPlist.CFBundleURLTypes.map(function (bundleUrlType) {\n    var index = bundleUrlType.CFBundleURLSchemes.indexOf(scheme);\n    if (index > -1) {\n      bundleUrlType.CFBundleURLSchemes.splice(index, 1);\n      if (bundleUrlType.CFBundleURLSchemes.length === 0) {\n        return undefined;\n      }\n    }\n    return bundleUrlType;\n  }).filter(Boolean);\n  return infoPlist;\n}\nfunction hasScheme(scheme, infoPlist) {\n  var existingSchemes = infoPlist.CFBundleURLTypes;\n  if (!Array.isArray(existingSchemes)) return false;\n  return existingSchemes.some(function (_ref2) {\n    var schemes = _ref2.CFBundleURLSchemes;\n    return Array.isArray(schemes) ? schemes.includes(scheme) : false;\n  });\n}\nfunction getSchemesFromPlist(infoPlist) {\n  if (Array.isArray(infoPlist.CFBundleURLTypes)) {\n    return infoPlist.CFBundleURLTypes.reduce(function (schemes, _ref3) {\n      var CFBundleURLSchemes = _ref3.CFBundleURLSchemes;\n      if (Array.isArray(CFBundleURLSchemes)) {\n        return [].concat(_toConsumableArray(schemes), _toConsumableArray(CFBundleURLSchemes));\n      }\n      return schemes;\n    }, []);\n  }\n  return [];\n}","map":{"version":3,"names":["_iosPlugins","data","require","withScheme","createInfoPlistPlugin","setScheme","getScheme","config","Array","isArray","scheme","validate","value","filter","infoPlist","_config$ios","_config$ios2","concat","_toConsumableArray","ios","bundleIdentifier","push","length","_objectSpread","CFBundleURLTypes","CFBundleURLSchemes","appendScheme","_infoPlist$CFBundleUR","existingSchemes","some","_ref","includes","removeScheme","map","bundleUrlType","index","indexOf","splice","undefined","Boolean","hasScheme","_ref2","schemes","getSchemesFromPlist","reduce","_ref3"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/ios/Scheme.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { InfoPlist, URLScheme } from './IosConfig.types';\n\nexport const withScheme = createInfoPlistPlugin(setScheme, 'withScheme');\n\nexport function getScheme(config: { scheme?: string | string[] }): string[] {\n  if (Array.isArray(config.scheme)) {\n    const validate = (value: any): value is string => {\n      return typeof value === 'string';\n    };\n    return config.scheme.filter<string>(validate);\n  } else if (typeof config.scheme === 'string') {\n    return [config.scheme];\n  }\n  return [];\n}\n\nexport function setScheme(\n  config: Partial<Pick<ExpoConfig, 'scheme' | 'ios'>>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const scheme = [\n    ...getScheme(config),\n    // @ts-ignore: TODO: ios.scheme is an unreleased -- harder to add to turtle v1.\n    ...getScheme(config.ios ?? {}),\n  ];\n  // Add the bundle identifier to the list of schemes for easier Google auth and parity with Turtle v1.\n  if (config.ios?.bundleIdentifier) {\n    scheme.push(config.ios.bundleIdentifier);\n  }\n  if (scheme.length === 0) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    CFBundleURLTypes: [{ CFBundleURLSchemes: scheme }],\n  };\n}\n\nexport function appendScheme(scheme: string | null, infoPlist: InfoPlist): InfoPlist {\n  if (!scheme) {\n    return infoPlist;\n  }\n\n  const existingSchemes = infoPlist.CFBundleURLTypes ?? [];\n  if (existingSchemes.some(({ CFBundleURLSchemes }) => CFBundleURLSchemes.includes(scheme))) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    CFBundleURLTypes: [\n      ...existingSchemes,\n      {\n        CFBundleURLSchemes: [scheme],\n      },\n    ],\n  };\n}\n\nexport function removeScheme(scheme: string | null, infoPlist: InfoPlist): InfoPlist {\n  if (!scheme) {\n    return infoPlist;\n  }\n\n  // No need to remove if we don't have any\n  if (!infoPlist.CFBundleURLTypes) {\n    return infoPlist;\n  }\n\n  infoPlist.CFBundleURLTypes = infoPlist.CFBundleURLTypes.map(bundleUrlType => {\n    const index = bundleUrlType.CFBundleURLSchemes.indexOf(scheme);\n    if (index > -1) {\n      bundleUrlType.CFBundleURLSchemes.splice(index, 1);\n      if (bundleUrlType.CFBundleURLSchemes.length === 0) {\n        return undefined;\n      }\n    }\n    return bundleUrlType;\n  }).filter(Boolean) as URLScheme[];\n\n  return infoPlist;\n}\n\nexport function hasScheme(scheme: string, infoPlist: InfoPlist): boolean {\n  const existingSchemes = infoPlist.CFBundleURLTypes;\n\n  if (!Array.isArray(existingSchemes)) return false;\n\n  return existingSchemes.some(({ CFBundleURLSchemes: schemes }: any) =>\n    Array.isArray(schemes) ? schemes.includes(scheme) : false\n  );\n}\n\nexport function getSchemesFromPlist(infoPlist: InfoPlist): string[] {\n  if (Array.isArray(infoPlist.CFBundleURLTypes)) {\n    return infoPlist.CFBundleURLTypes.reduce<string[]>((schemes, { CFBundleURLSchemes }) => {\n      if (Array.isArray(CFBundleURLSchemes)) {\n        return [...schemes, ...CFBundleURLSchemes];\n      }\n      return schemes;\n    }, []);\n  }\n  return [];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}