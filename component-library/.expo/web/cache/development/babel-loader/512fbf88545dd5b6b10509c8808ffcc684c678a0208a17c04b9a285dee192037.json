{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TargetType = void 0;\nexports.findApplicationTargetWithDependenciesAsync = findApplicationTargetWithDependenciesAsync;\nexports.findFirstNativeTarget = findFirstNativeTarget;\nexports.findNativeTargetByName = findNativeTargetByName;\nexports.findSignableTargets = findSignableTargets;\nexports.getNativeTargets = getNativeTargets;\nexports.getXCBuildConfigurationFromPbxproj = getXCBuildConfigurationFromPbxproj;\nexports.isTargetOfType = isTargetOfType;\nfunction _BuildScheme() {\n  var data = require(\"./BuildScheme\");\n  _BuildScheme = function _BuildScheme() {\n    return data;\n  };\n  return data;\n}\nfunction _Xcodeproj() {\n  var data = require(\"./utils/Xcodeproj\");\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n  return data;\n}\nfunction _string() {\n  var data = require(\"./utils/string\");\n  _string = function _string() {\n    return data;\n  };\n  return data;\n}\nvar TargetType;\nexports.TargetType = TargetType;\n(function (TargetType) {\n  TargetType[\"APPLICATION\"] = \"com.apple.product-type.application\";\n  TargetType[\"EXTENSION\"] = \"com.apple.product-type.app-extension\";\n  TargetType[\"WATCH\"] = \"com.apple.product-type.application.watchapp\";\n  TargetType[\"STICKER_PACK_EXTENSION\"] = \"com.apple.product-type.app-extension.messages-sticker-pack\";\n  TargetType[\"OTHER\"] = \"other\";\n})(TargetType || (exports.TargetType = TargetType = {}));\nfunction getXCBuildConfigurationFromPbxproj(project) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    targetName = _ref.targetName,\n    _ref$buildConfigurati = _ref.buildConfiguration,\n    buildConfiguration = _ref$buildConfigurati === void 0 ? 'Release' : _ref$buildConfigurati;\n  var _ref2 = targetName ? findNativeTargetByName(project, targetName) : findFirstNativeTarget(project),\n    _ref3 = _slicedToArray(_ref2, 2),\n    nativeTarget = _ref3[1];\n  var _ref4 = (0, _Xcodeproj().getBuildConfigurationForListIdAndName)(project, {\n      configurationListId: nativeTarget.buildConfigurationList,\n      buildConfiguration: buildConfiguration\n    }),\n    _ref5 = _slicedToArray(_ref4, 2),\n    xcBuildConfiguration = _ref5[1];\n  return xcBuildConfiguration !== null && xcBuildConfiguration !== void 0 ? xcBuildConfiguration : null;\n}\nfunction findApplicationTargetWithDependenciesAsync(_x, _x2) {\n  return _findApplicationTargetWithDependenciesAsync.apply(this, arguments);\n}\nfunction _findApplicationTargetWithDependenciesAsync() {\n  _findApplicationTargetWithDependenciesAsync = _asyncToGenerator(function* (projectRoot, scheme) {\n    var applicationTargetName = yield (0, _BuildScheme().getApplicationTargetNameForSchemeAsync)(projectRoot, scheme);\n    var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n    var _findNativeTargetByNa = findNativeTargetByName(project, applicationTargetName),\n      _findNativeTargetByNa2 = _slicedToArray(_findNativeTargetByNa, 2),\n      applicationTarget = _findNativeTargetByNa2[1];\n    var dependencies = getTargetDependencies(project, applicationTarget);\n    return {\n      name: (0, _string().trimQuotes)(applicationTarget.name),\n      type: TargetType.APPLICATION,\n      dependencies: dependencies\n    };\n  });\n  return _findApplicationTargetWithDependenciesAsync.apply(this, arguments);\n}\nfunction getTargetDependencies(project, parentTarget) {\n  if (!parentTarget.dependencies || parentTarget.dependencies.length === 0) {\n    return undefined;\n  }\n  return parentTarget.dependencies.map(function (_ref6) {\n    var value = _ref6.value;\n    var _project$getPBXGroupB = project.getPBXGroupByKeyAndType(value, 'PBXTargetDependency'),\n      targetId = _project$getPBXGroupB.target;\n    var _findNativeTargetById = findNativeTargetById(project, targetId),\n      _findNativeTargetById2 = _slicedToArray(_findNativeTargetById, 2),\n      target = _findNativeTargetById2[1];\n    var type = isTargetOfType(target, TargetType.EXTENSION) ? TargetType.EXTENSION : TargetType.OTHER;\n    return {\n      name: (0, _string().trimQuotes)(target.name),\n      type: type,\n      dependencies: getTargetDependencies(project, target)\n    };\n  });\n}\nfunction isTargetOfType(target, targetType) {\n  return (0, _string().trimQuotes)(target.productType) === targetType;\n}\nfunction getNativeTargets(project) {\n  var section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(_Xcodeproj().isNotComment);\n}\nfunction findSignableTargets(project) {\n  var targets = getNativeTargets(project);\n  var applicationTargets = targets.filter(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n      target = _ref8[1];\n    return isTargetOfType(target, TargetType.APPLICATION) || isTargetOfType(target, TargetType.EXTENSION) || isTargetOfType(target, TargetType.WATCH) || isTargetOfType(target, TargetType.STICKER_PACK_EXTENSION);\n  });\n  if (applicationTargets.length === 0) {\n    throw new Error(\"Could not find any signable targets in project.pbxproj\");\n  }\n  return applicationTargets;\n}\nfunction findFirstNativeTarget(project) {\n  var targets = getNativeTargets(project);\n  var applicationTargets = targets.filter(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 2),\n      target = _ref10[1];\n    return isTargetOfType(target, TargetType.APPLICATION);\n  });\n  if (applicationTargets.length === 0) {\n    throw new Error(\"Could not find any application target in project.pbxproj\");\n  }\n  return applicationTargets[0];\n}\nfunction findNativeTargetByName(project, targetName) {\n  var nativeTargets = getNativeTargets(project);\n  var nativeTargetEntry = nativeTargets.find(function (_ref11) {\n    var _ref12 = _slicedToArray(_ref11, 2),\n      i = _ref12[1];\n    return (0, _string().trimQuotes)(i.name) === targetName;\n  });\n  if (!nativeTargetEntry) {\n    throw new Error(\"Could not find target '\" + targetName + \"' in project.pbxproj\");\n  }\n  return nativeTargetEntry;\n}\nfunction findNativeTargetById(project, targetId) {\n  var nativeTargets = getNativeTargets(project);\n  var nativeTargetEntry = nativeTargets.find(function (_ref13) {\n    var _ref14 = _slicedToArray(_ref13, 1),\n      key = _ref14[0];\n    return key === targetId;\n  });\n  if (!nativeTargetEntry) {\n    throw new Error(\"Could not find target with id '\" + targetId + \"' in project.pbxproj\");\n  }\n  return nativeTargetEntry;\n}","map":{"version":3,"names":["_BuildScheme","data","require","_Xcodeproj","_string","TargetType","getXCBuildConfigurationFromPbxproj","project","_ref","arguments","length","undefined","targetName","_ref$buildConfigurati","buildConfiguration","_ref2","findNativeTargetByName","findFirstNativeTarget","_ref3","_slicedToArray","nativeTarget","_ref4","getBuildConfigurationForListIdAndName","configurationListId","buildConfigurationList","_ref5","xcBuildConfiguration","findApplicationTargetWithDependenciesAsync","_x","_x2","_findApplicationTargetWithDependenciesAsync","apply","_asyncToGenerator","projectRoot","scheme","applicationTargetName","getApplicationTargetNameForSchemeAsync","getPbxproj","_findNativeTargetByNa","_findNativeTargetByNa2","applicationTarget","dependencies","getTargetDependencies","name","trimQuotes","type","APPLICATION","parentTarget","map","_ref6","value","_project$getPBXGroupB","getPBXGroupByKeyAndType","targetId","target","_findNativeTargetById","findNativeTargetById","_findNativeTargetById2","isTargetOfType","EXTENSION","OTHER","targetType","productType","getNativeTargets","section","pbxNativeTargetSection","Object","entries","filter","isNotComment","findSignableTargets","targets","applicationTargets","_ref7","_ref8","WATCH","STICKER_PACK_EXTENSION","Error","_ref9","_ref10","nativeTargets","nativeTargetEntry","find","_ref11","_ref12","i","_ref13","_ref14","key"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/ios/Target.ts"],"sourcesContent":["import { PBXNativeTarget, PBXTargetDependency, XCBuildConfiguration, XcodeProject } from 'xcode';\n\nimport { getApplicationTargetNameForSchemeAsync } from './BuildScheme';\nimport {\n  getBuildConfigurationForListIdAndName,\n  getPbxproj,\n  isNotComment,\n  NativeTargetSectionEntry,\n} from './utils/Xcodeproj';\nimport { trimQuotes } from './utils/string';\n\nexport enum TargetType {\n  APPLICATION = 'com.apple.product-type.application',\n  EXTENSION = 'com.apple.product-type.app-extension',\n  WATCH = 'com.apple.product-type.application.watchapp',\n  STICKER_PACK_EXTENSION = 'com.apple.product-type.app-extension.messages-sticker-pack',\n  OTHER = 'other',\n}\n\nexport interface Target {\n  name: string;\n  type: TargetType;\n  dependencies?: Target[];\n}\n\nexport function getXCBuildConfigurationFromPbxproj(\n  project: XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string } = {}\n): XCBuildConfiguration | null {\n  const [, nativeTarget] = targetName\n    ? findNativeTargetByName(project, targetName)\n    : findFirstNativeTarget(project);\n  const [, xcBuildConfiguration] = getBuildConfigurationForListIdAndName(project, {\n    configurationListId: nativeTarget.buildConfigurationList,\n    buildConfiguration,\n  });\n  return xcBuildConfiguration ?? null;\n}\n\nexport async function findApplicationTargetWithDependenciesAsync(\n  projectRoot: string,\n  scheme: string\n): Promise<Target> {\n  const applicationTargetName = await getApplicationTargetNameForSchemeAsync(projectRoot, scheme);\n  const project = getPbxproj(projectRoot);\n  const [, applicationTarget] = findNativeTargetByName(project, applicationTargetName);\n  const dependencies = getTargetDependencies(project, applicationTarget);\n  return {\n    name: trimQuotes(applicationTarget.name),\n    type: TargetType.APPLICATION,\n    dependencies,\n  };\n}\n\nfunction getTargetDependencies(\n  project: XcodeProject,\n  parentTarget: PBXNativeTarget\n): Target[] | undefined {\n  if (!parentTarget.dependencies || parentTarget.dependencies.length === 0) {\n    return undefined;\n  }\n  return parentTarget.dependencies.map(({ value }) => {\n    const { target: targetId } = project.getPBXGroupByKeyAndType(\n      value,\n      'PBXTargetDependency'\n    ) as PBXTargetDependency;\n\n    const [, target] = findNativeTargetById(project, targetId);\n\n    const type = isTargetOfType(target, TargetType.EXTENSION)\n      ? TargetType.EXTENSION\n      : TargetType.OTHER;\n    return {\n      name: trimQuotes(target.name),\n      type,\n      dependencies: getTargetDependencies(project, target),\n    };\n  });\n}\n\nexport function isTargetOfType(target: PBXNativeTarget, targetType: TargetType): boolean {\n  return trimQuotes(target.productType) === targetType;\n}\n\nexport function getNativeTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(isNotComment);\n}\n\nexport function findSignableTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const targets = getNativeTargets(project);\n  const applicationTargets = targets.filter(\n    ([, target]) =>\n      isTargetOfType(target, TargetType.APPLICATION) ||\n      isTargetOfType(target, TargetType.EXTENSION) ||\n      isTargetOfType(target, TargetType.WATCH) ||\n      isTargetOfType(target, TargetType.STICKER_PACK_EXTENSION)\n  );\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any signable targets in project.pbxproj`);\n  }\n  return applicationTargets;\n}\n\nexport function findFirstNativeTarget(project: XcodeProject): NativeTargetSectionEntry {\n  const targets = getNativeTargets(project);\n  const applicationTargets = targets.filter(([, target]) =>\n    isTargetOfType(target, TargetType.APPLICATION)\n  );\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any application target in project.pbxproj`);\n  }\n  return applicationTargets[0];\n}\n\nexport function findNativeTargetByName(\n  project: XcodeProject,\n  targetName: string\n): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([, i]) => trimQuotes(i.name) === targetName);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target '${targetName}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n\nfunction findNativeTargetById(project: XcodeProject, targetId: string): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([key]) => key === targetId);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target with id '${targetId}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}