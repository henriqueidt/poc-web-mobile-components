{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeAfterStaticPlugins = serializeAfterStaticPlugins;\nexports.serializeAndEvaluate = serializeAndEvaluate;\nexports.serializeSkippingMods = serializeSkippingMods;\nfunction _Errors() {\n  var data = require(\"./Errors\");\n  _Errors = function _Errors() {\n    return data;\n  };\n  return data;\n}\nfunction serializeAndEvaluate(val) {\n  if (['undefined', 'string', 'boolean', 'number', 'bigint'].includes(typeof val)) {\n    return val;\n  } else if (typeof val === 'function') {\n    return val();\n  } else if (Array.isArray(val)) {\n    return val.map(serializeAndEvaluate);\n  } else if (typeof val === 'object') {\n    var output = {};\n    for (var property in val) {\n      if (val.hasOwnProperty(property)) {\n        output[property] = serializeAndEvaluate(val[property]);\n      }\n    }\n    return output;\n  }\n  throw new (_Errors().ConfigError)(\"Expo config doesn't support `Symbols`: \" + val, 'INVALID_CONFIG');\n}\nfunction serializeSkippingMods(val) {\n  if (typeof val === 'object' && !Array.isArray(val)) {\n    var output = {};\n    for (var property in val) {\n      if (val.hasOwnProperty(property)) {\n        if (property === 'mods' || property === 'plugins') {\n          output[property] = val[property];\n        } else {\n          output[property] = serializeAndEvaluate(val[property]);\n        }\n      }\n    }\n    return output;\n  }\n  return serializeAndEvaluate(val);\n}\nfunction serializeAndEvaluatePlugin(val) {\n  if (['undefined', 'string', 'boolean', 'number', 'bigint'].includes(typeof val)) {\n    return val;\n  } else if (typeof val === 'function') {\n    var _val$name;\n    return (_val$name = val.name) !== null && _val$name !== void 0 ? _val$name : 'withAnonymous';\n  } else if (Array.isArray(val)) {\n    return val.map(serializeAndEvaluatePlugin);\n  } else if (typeof val === 'object') {\n    var output = {};\n    for (var property in val) {\n      if (val.hasOwnProperty(property)) {\n        output[property] = serializeAndEvaluatePlugin(val[property]);\n      }\n    }\n    return output;\n  }\n  throw new (_Errors().ConfigError)(\"Expo config doesn't support `Symbols`: \" + val, 'INVALID_CONFIG');\n}\nfunction serializeAfterStaticPlugins(val) {\n  if (typeof val === 'object' && !Array.isArray(val)) {\n    var output = {};\n    for (var property in val) {\n      if (val.hasOwnProperty(property)) {\n        if (property === 'mods') {\n          output[property] = val[property];\n        } else if (property === 'plugins' && Array.isArray(val[property])) {\n          output[property] = val[property].map(serializeAndEvaluatePlugin);\n        } else {\n          output[property] = serializeAndEvaluate(val[property]);\n        }\n      }\n    }\n    return output;\n  }\n  return serializeAndEvaluate(val);\n}","map":{"version":3,"names":["_Errors","data","require","serializeAndEvaluate","val","includes","Array","isArray","map","output","property","hasOwnProperty","ConfigError","serializeSkippingMods","serializeAndEvaluatePlugin","_val$name","name","serializeAfterStaticPlugins"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config/src/Serialize.ts"],"sourcesContent":["import { ConfigError } from './Errors';\n\nexport function serializeAndEvaluate(val: any): any {\n  if (['undefined', 'string', 'boolean', 'number', 'bigint'].includes(typeof val)) {\n    return val;\n  } else if (typeof val === 'function') {\n    // TODO: Bacon: Should we support async methods?\n    return val();\n  } else if (Array.isArray(val)) {\n    return val.map(serializeAndEvaluate);\n  } else if (typeof val === 'object') {\n    const output: { [key: string]: any } = {};\n    for (const property in val) {\n      if (val.hasOwnProperty(property)) {\n        output[property] = serializeAndEvaluate(val[property]);\n      }\n    }\n    return output;\n  }\n  // symbol\n  throw new ConfigError(`Expo config doesn't support \\`Symbols\\`: ${val}`, 'INVALID_CONFIG');\n}\n\nexport function serializeSkippingMods(val: any): any {\n  if (typeof val === 'object' && !Array.isArray(val)) {\n    const output: { [key: string]: any } = {};\n    for (const property in val) {\n      if (val.hasOwnProperty(property)) {\n        if (property === 'mods' || property === 'plugins') {\n          // Don't serialize mods or plugins\n          output[property] = val[property];\n        } else {\n          output[property] = serializeAndEvaluate(val[property]);\n        }\n      }\n    }\n    return output;\n  }\n  return serializeAndEvaluate(val);\n}\n\nfunction serializeAndEvaluatePlugin(val: any): any {\n  if (['undefined', 'string', 'boolean', 'number', 'bigint'].includes(typeof val)) {\n    return val;\n  } else if (typeof val === 'function') {\n    return val.name ?? 'withAnonymous';\n  } else if (Array.isArray(val)) {\n    return val.map(serializeAndEvaluatePlugin);\n  } else if (typeof val === 'object') {\n    const output: { [key: string]: any } = {};\n    for (const property in val) {\n      if (val.hasOwnProperty(property)) {\n        output[property] = serializeAndEvaluatePlugin(val[property]);\n      }\n    }\n    return output;\n  }\n  // symbol\n  throw new ConfigError(`Expo config doesn't support \\`Symbols\\`: ${val}`, 'INVALID_CONFIG');\n}\n\nexport function serializeAfterStaticPlugins(val: any): any {\n  if (typeof val === 'object' && !Array.isArray(val)) {\n    const output: { [key: string]: any } = {};\n    for (const property in val) {\n      if (val.hasOwnProperty(property)) {\n        if (property === 'mods') {\n          // Don't serialize mods\n          output[property] = val[property];\n        } else if (property === 'plugins' && Array.isArray(val[property])) {\n          // Serialize the mods by removing any config plugins\n          output[property] = val[property].map(serializeAndEvaluatePlugin);\n        } else {\n          output[property] = serializeAndEvaluate(val[property]);\n        }\n      }\n    }\n    return output;\n  }\n  return serializeAndEvaluate(val);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}