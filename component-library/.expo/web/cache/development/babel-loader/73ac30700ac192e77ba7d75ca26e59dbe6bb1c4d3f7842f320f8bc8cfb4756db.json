{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGoogleMapsApiKey = getGoogleMapsApiKey;\nexports.setGoogleMapsApiKey = setGoogleMapsApiKey;\nexports.withGoogleMapsApiKey = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar META_API_KEY = 'com.google.android.geo.API_KEY';\nvar LIB_HTTP = 'org.apache.http.legacy';\nvar withGoogleMapsApiKey = (0, _androidPlugins().createAndroidManifestPlugin)(setGoogleMapsApiKey, 'withGoogleMapsApiKey');\nexports.withGoogleMapsApiKey = withGoogleMapsApiKey;\nfunction getGoogleMapsApiKey(config) {\n  var _config$android$confi, _config$android, _config$android$confi2, _config$android$confi3;\n  return (_config$android$confi = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : (_config$android$confi2 = _config$android.config) === null || _config$android$confi2 === void 0 ? void 0 : (_config$android$confi3 = _config$android$confi2.googleMaps) === null || _config$android$confi3 === void 0 ? void 0 : _config$android$confi3.apiKey) !== null && _config$android$confi !== void 0 ? _config$android$confi : null;\n}\nfunction setGoogleMapsApiKey(config, androidManifest) {\n  var apiKey = getGoogleMapsApiKey(config);\n  var mainApplication = (0, _Manifest().getMainApplicationOrThrow)(androidManifest);\n  if (apiKey) {\n    (0, _Manifest().addMetaDataItemToMainApplication)(mainApplication, META_API_KEY, apiKey);\n    (0, _Manifest().addUsesLibraryItemToMainApplication)(mainApplication, {\n      name: LIB_HTTP,\n      required: false\n    });\n  } else {\n    (0, _Manifest().removeMetaDataItemFromMainApplication)(mainApplication, META_API_KEY);\n    (0, _Manifest().removeUsesLibraryItemFromMainApplication)(mainApplication, LIB_HTTP);\n  }\n  return androidManifest;\n}","map":{"version":3,"names":["_androidPlugins","data","require","_Manifest","META_API_KEY","LIB_HTTP","withGoogleMapsApiKey","createAndroidManifestPlugin","setGoogleMapsApiKey","getGoogleMapsApiKey","config","_config$android$confi","_config$android","_config$android$confi2","_config$android$confi3","android","googleMaps","apiKey","androidManifest","mainApplication","getMainApplicationOrThrow","addMetaDataItemToMainApplication","addUsesLibraryItemToMainApplication","name","required","removeMetaDataItemFromMainApplication","removeUsesLibraryItemFromMainApplication"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/GoogleMapsApiKey.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport {\n  addMetaDataItemToMainApplication,\n  addUsesLibraryItemToMainApplication,\n  AndroidManifest,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n  removeUsesLibraryItemFromMainApplication,\n} from './Manifest';\n\nconst META_API_KEY = 'com.google.android.geo.API_KEY';\nconst LIB_HTTP = 'org.apache.http.legacy';\n\nexport const withGoogleMapsApiKey = createAndroidManifestPlugin(\n  setGoogleMapsApiKey,\n  'withGoogleMapsApiKey'\n);\n\nexport function getGoogleMapsApiKey(config: Pick<ExpoConfig, 'android'>) {\n  return config.android?.config?.googleMaps?.apiKey ?? null;\n}\n\nexport function setGoogleMapsApiKey(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n) {\n  const apiKey = getGoogleMapsApiKey(config);\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    // If the item exists, add it back\n    addMetaDataItemToMainApplication(mainApplication, META_API_KEY, apiKey);\n    addUsesLibraryItemToMainApplication(mainApplication, {\n      name: LIB_HTTP,\n      required: false,\n    });\n  } else {\n    // Remove any existing item\n    removeMetaDataItemFromMainApplication(mainApplication, META_API_KEY);\n    removeUsesLibraryItemFromMainApplication(mainApplication, LIB_HTTP);\n  }\n\n  return androidManifest;\n}\n"],"mappings":";;;;;;;;AAEA,SAAAA,gBAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,eAAA,YAAAA,gBAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,UAAA;EAAA,IAAAF,IAAA,GAAAC,OAAA;EAAAC,SAAA,YAAAA,UAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AASA,IAAMG,YAAY,GAAG,gCAArB;AACA,IAAMC,QAAQ,GAAG,wBAAjB;AAEO,IAAMC,oBAAoB,GAAG,IAAAN,eAAA,GAAAO,2BAAA,EAClCC,mBADkC,EAElC,sBAFkC,CAA7B;;AAKA,SAASC,mBAATA,CAA6BC,MAA7B,EAAkE;EAAA,IAAAC,qBAAA,EAAAC,eAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACvE,QAAAH,qBAAA,IAAAC,eAAA,GAAOF,MAAM,CAACK,OAAd,cAAAH,eAAA,wBAAAC,sBAAA,GAAOD,eAAA,CAAgBF,MAAvB,cAAAG,sBAAA,wBAAAC,sBAAA,GAAOD,sBAAA,CAAwBG,UAA/B,cAAAF,sBAAA,uBAAOA,sBAAA,CAAoCG,MAA3C,cAAAN,qBAAA,cAAAA,qBAAA,GAAqD,IAArD;AACD;AAEM,SAASH,mBAATA,CACLE,MADK,EAELQ,eAFK,EAGL;EACA,IAAMD,MAAM,GAAGR,mBAAmB,CAACC,MAAD,CAAlC;EACA,IAAMS,eAAe,GAAG,IAAAhB,SAAA,GAAAiB,yBAAA,EAA0BF,eAA1B,CAAxB;EAEA,IAAID,MAAJ,EAAY;IAEV,IAAAd,SAAA,GAAAkB,gCAAA,EAAiCF,eAAjC,EAAkDf,YAAlD,EAAgEa,MAAhE;IACA,IAAAd,SAAA,GAAAmB,mCAAA,EAAoCH,eAApC,EAAqD;MACnDI,IAAI,EAAElB,QAD6C;MAEnDmB,QAAQ,EAAE;IAFyC,CAArD;EAID,CAPD,MAOO;IAEL,IAAArB,SAAA,GAAAsB,qCAAA,EAAsCN,eAAtC,EAAuDf,YAAvD;IACA,IAAAD,SAAA,GAAAuB,wCAAA,EAAyCP,eAAzC,EAA0Dd,QAA1D;EACD;EAED,OAAOa,eAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}