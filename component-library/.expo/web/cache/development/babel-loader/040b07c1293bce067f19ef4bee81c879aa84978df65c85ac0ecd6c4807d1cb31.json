{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDevServer = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar crypto_1 = __importDefault(require(\"crypto\"));\nvar fs_extra_1 = __importDefault(require(\"fs-extra\"));\nvar path = __importStar(require(\"path\"));\nvar env_1 = require(\"../env\");\nvar defaults_1 = require(\"../env/defaults\");\nvar evalSourceMapMiddleware_1 = require(\"../utils/evalSourceMapMiddleware\");\nvar ignoredFiles_1 = require(\"../utils/ignoredFiles\");\nvar noopServiceWorkerMiddleware_1 = require(\"../utils/noopServiceWorkerMiddleware\");\nvar redirectServedPathMiddleware_1 = require(\"../utils/redirectServedPathMiddleware\");\nfunction validateKeyAndCerts(_ref) {\n  var cert = _ref.cert,\n    key = _ref.key,\n    keyFile = _ref.keyFile,\n    crtFile = _ref.crtFile;\n  var encrypted;\n  try {\n    encrypted = crypto_1.default.publicEncrypt(cert, Buffer.from('test'));\n  } catch (_unused) {\n    return false;\n  }\n  try {\n    crypto_1.default.privateDecrypt(key, encrypted);\n  } catch (_unused2) {\n    return false;\n  }\n  return true;\n}\nfunction readEnvFile(file, type) {\n  if (!fs_extra_1.default.existsSync(file)) {\n    throw new Error(\"You specified \" + chalk_1.default.cyan(type) + \" in your env, but the file \\\"\" + chalk_1.default.yellow(file) + \"\\\" can't be found.\");\n  }\n  return fs_extra_1.default.readFileSync(file);\n}\nfunction getHttpsConfig(projectRoot, isHttps) {\n  var _process$env = process.env,\n    SSL_CRT_FILE = _process$env.SSL_CRT_FILE,\n    SSL_KEY_FILE = _process$env.SSL_KEY_FILE;\n  if (isHttps && SSL_CRT_FILE && SSL_KEY_FILE) {\n    var crtFile = path.resolve(projectRoot, SSL_CRT_FILE);\n    var keyFile = path.resolve(projectRoot, SSL_KEY_FILE);\n    var config = {\n      cert: readEnvFile(crtFile, 'SSL_CRT_FILE'),\n      key: readEnvFile(keyFile, 'SSL_KEY_FILE')\n    };\n    if (validateKeyAndCerts(_objectSpread(_objectSpread({}, config), {}, {\n      keyFile: keyFile,\n      crtFile: crtFile\n    }))) {\n      return config;\n    } else {\n      console.log(chalk_1.default.yellow(\"\\u203A Failed to self-sign SSL certificates for HTTPS. Falling back to insecure https. You can re run with `--no-https` to disable HTTPS, or delete the `.expo` folder and try again.\"));\n      return true;\n    }\n  }\n  return isHttps;\n}\nfunction withDevServer(webpackConfig, env) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  webpackConfig.devServer = createDevServer(env, options);\n  return webpackConfig;\n}\nexports.default = withDevServer;\nfunction createDevServer(env) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    allowedHost = _ref2.allowedHost,\n    proxy = _ref2.proxy;\n  var _env$https = env.https,\n    https = _env$https === void 0 ? false : _env$https;\n  var locations = env.locations || (0, env_1.getPaths)(env.projectRoot, env);\n  var _ref3 = (0, env_1.getPublicPaths)(env),\n    publicUrlOrPath = _ref3.publicPath;\n  var disableFirewall = !proxy || process.env.DANGEROUSLY_DISABLE_HOST_CHECK === 'true';\n  return {\n    allowedHosts: disableFirewall ? ['all'] : [allowedHost].filter(Boolean),\n    compress: true,\n    static: {\n      directory: locations.template.folder,\n      publicPath: [publicUrlOrPath],\n      watch: {\n        ignored: (0, ignoredFiles_1.ignoredFiles)(locations.root)\n      }\n    },\n    client: {\n      webSocketURL: {\n        hostname: defaults_1.sockHost,\n        pathname: defaults_1.sockPath,\n        port: defaults_1.sockPort\n      },\n      overlay: false\n    },\n    webSocketServer: {\n      type: 'ws',\n      options: {\n        host: defaults_1.sockHost,\n        port: defaults_1.sockPort,\n        path: defaults_1.sockPath\n      }\n    },\n    devMiddleware: {\n      index: true,\n      publicPath: publicUrlOrPath.slice(0, -1)\n    },\n    https: getHttpsConfig(env.projectRoot, https),\n    host: defaults_1.host,\n    historyApiFallback: {\n      disableDotRule: true,\n      index: publicUrlOrPath\n    },\n    proxy: proxy,\n    setupMiddlewares: function setupMiddlewares(middlewares, devServer) {\n      (0, assert_1.default)(devServer, 'webpack-dev-server is not defined');\n      middlewares.unshift((0, evalSourceMapMiddleware_1.createEvalSourceMapMiddleware)(devServer), (0, redirectServedPathMiddleware_1.createRedirectServedPathMiddleware)(publicUrlOrPath), (0, noopServiceWorkerMiddleware_1.createNoopServiceWorkerMiddleware)(publicUrlOrPath));\n      return middlewares;\n    }\n  };\n}\nexports.createDevServer = createDevServer;","map":{"version":3,"names":["assert_1","__importDefault","require","chalk_1","crypto_1","fs_extra_1","path","__importStar","env_1","defaults_1","evalSourceMapMiddleware_1","ignoredFiles_1","noopServiceWorkerMiddleware_1","redirectServedPathMiddleware_1","validateKeyAndCerts","_ref","cert","key","keyFile","crtFile","encrypted","default","publicEncrypt","Buffer","from","_unused","privateDecrypt","_unused2","readEnvFile","file","type","existsSync","Error","cyan","yellow","readFileSync","getHttpsConfig","projectRoot","isHttps","_process$env","process","env","SSL_CRT_FILE","SSL_KEY_FILE","resolve","config","_objectSpread","console","log","withDevServer","webpackConfig","options","arguments","length","undefined","devServer","createDevServer","exports","_ref2","allowedHost","proxy","_env$https","https","locations","getPaths","_ref3","getPublicPaths","publicUrlOrPath","publicPath","disableFirewall","DANGEROUSLY_DISABLE_HOST_CHECK","allowedHosts","filter","Boolean","compress","static","directory","template","folder","watch","ignored","ignoredFiles","root","client","webSocketURL","hostname","sockHost","pathname","sockPath","port","sockPort","overlay","webSocketServer","host","devMiddleware","index","slice","historyApiFallback","disableDotRule","setupMiddlewares","middlewares","unshift","createEvalSourceMapMiddleware","createRedirectServedPathMiddleware","createNoopServiceWorkerMiddleware"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/addons/withDevServer.ts"],"sourcesContent":["import assert from 'assert';\nimport chalk from 'chalk';\nimport crypto from 'crypto';\nimport fs from 'fs-extra';\nimport * as path from 'path';\nimport { Configuration } from 'webpack';\nimport {\n  ProxyConfigArray,\n  ProxyConfigMap,\n  Configuration as WebpackDevServerConfiguration,\n} from 'webpack-dev-server';\n\nimport { getPaths, getPublicPaths } from '../env';\nimport { host, sockHost, sockPath, sockPort } from '../env/defaults';\nimport { Environment } from '../types';\nimport { createEvalSourceMapMiddleware } from '../utils/evalSourceMapMiddleware';\nimport { ignoredFiles } from '../utils/ignoredFiles';\nimport { createNoopServiceWorkerMiddleware } from '../utils/noopServiceWorkerMiddleware';\nimport { createRedirectServedPathMiddleware } from '../utils/redirectServedPathMiddleware';\n\n// Ensure the certificate and key provided are valid and if not\n// throw an easy to debug error\nfunction validateKeyAndCerts({ cert, key, keyFile, crtFile }: any): boolean {\n  let encrypted;\n  try {\n    // publicEncrypt will throw an error with an invalid cert\n    encrypted = crypto.publicEncrypt(cert, Buffer.from('test'));\n  } catch {\n    return false;\n  }\n\n  try {\n    // privateDecrypt will throw an error with an invalid key\n    crypto.privateDecrypt(key, encrypted);\n  } catch {\n    return false;\n  }\n  return true;\n}\n\n// Read file and throw an error if it doesn't exist\nfunction readEnvFile(file: string, type: string): any {\n  if (!fs.existsSync(file)) {\n    throw new Error(\n      `You specified ${chalk.cyan(type)} in your env, but the file \"${chalk.yellow(\n        file\n      )}\" can't be found.`\n    );\n  }\n  return fs.readFileSync(file);\n}\n\n// Get the https config\n// Return cert files if provided in env, otherwise just true or false\nfunction getHttpsConfig(projectRoot: string, isHttps: boolean): any {\n  const { SSL_CRT_FILE, SSL_KEY_FILE } = process.env;\n\n  if (isHttps && SSL_CRT_FILE && SSL_KEY_FILE) {\n    const crtFile = path.resolve(projectRoot, SSL_CRT_FILE);\n    const keyFile = path.resolve(projectRoot, SSL_KEY_FILE);\n    const config = {\n      cert: readEnvFile(crtFile, 'SSL_CRT_FILE'),\n      key: readEnvFile(keyFile, 'SSL_KEY_FILE'),\n    };\n\n    if (validateKeyAndCerts({ ...config, keyFile, crtFile })) {\n      return config;\n    } else {\n      console.log(\n        chalk.yellow(\n          `\\u203A Failed to self-sign SSL certificates for HTTPS. Falling back to insecure https. You can re run with \\`--no-https\\` to disable HTTPS, or delete the \\`.expo\\` folder and try again.`\n        )\n      );\n      return true;\n    }\n  }\n  return isHttps;\n}\n\ntype SelectiveEnv = Pick<Environment, 'mode' | 'locations' | 'projectRoot' | 'https' | 'platform'>;\n\ntype DevServerOptions = {\n  allowedHost?: string;\n  proxy?: ProxyConfigMap | ProxyConfigArray;\n};\n\n/**\n * Add a valid dev server to the provided Webpack config.\n *\n * @param webpackConfig Existing Webpack config to modify.\n * @param env locations, projectRoot, and https options.\n * @param options Configure how the dev server is setup.\n * @category addons\n */\nexport default function withDevServer(\n  webpackConfig: Configuration,\n  env: SelectiveEnv,\n  options: DevServerOptions = {}\n): Configuration {\n  webpackConfig.devServer = createDevServer(env, options);\n  return webpackConfig;\n}\n\n/**\n * Create a valid Webpack dev server config.\n *\n * @param env locations, projectRoot, and https options.\n * @param options Configure how the dev server is setup.\n * @internal\n */\nexport function createDevServer(\n  env: SelectiveEnv,\n  { allowedHost, proxy }: DevServerOptions = {}\n): WebpackDevServerConfiguration {\n  const { https = false } = env;\n  const locations = env.locations || getPaths(env.projectRoot, env);\n  const { publicPath: publicUrlOrPath } = getPublicPaths(env);\n\n  const disableFirewall = !proxy || process.env.DANGEROUSLY_DISABLE_HOST_CHECK === 'true';\n\n  // Attempt to keep this as close to create-react-native app as possible.\n  // https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/config/webpackDevServer.config.js\n  return {\n    // WebpackDevServer 2.4.3 introduced a security fix that prevents remote\n    // websites from potentially accessing local content through DNS rebinding:\n    // https://github.com/webpack/webpack-dev-server/issues/887\n    // https://medium.com/webpack/webpack-dev-server-middleware-security-issues-1489d950874a\n    // However, it made several existing use cases such as development in cloud\n    // environment or subdomains in development significantly more complicated:\n    // https://github.com/facebook/create-react-app/issues/2271\n    // https://github.com/facebook/create-react-app/issues/2233\n    // While we're investigating better solutions, for now we will take a\n    // compromise. Since our WDS configuration only serves files in the `public`\n    // folder we won't consider accessing them a vulnerability. However, if you\n    // use the `proxy` feature, it gets more dangerous because it can expose\n    // remote code execution vulnerabilities in backends like Django and Rails.\n    // So we will disable the host check normally, but enable it if you have\n    // specified the `proxy` setting. Finally, we let you override it if you\n    // really know what you're doing with a special environment variable.\n    // Note: [\"localhost\", \".localhost\"] will support subdomains - but we might\n    // want to allow setting the allowedHosts manually for more complex setups\n    allowedHosts: disableFirewall ? ['all'] : ([allowedHost].filter(Boolean) as string[]),\n    // Enable gzip compression of generated files.\n    compress: true,\n    static: {\n      // By default WebpackDevServer serves physical files from current directory\n      // in addition to all the virtual build products that it serves from memory.\n      // This is confusing because those files won’t automatically be available in\n      // production build folder unless we copy them. However, copying the whole\n      // project directory is dangerous because we may expose sensitive files.\n      // Instead, we establish a convention that only files in `public` directory\n      // get served. Our build script will copy `public` into the `build` folder.\n      // In `index.html`, you can get URL of `public` folder with %PUBLIC_URL%:\n      // <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n      // In JavaScript code, you can access it with `process.env.PUBLIC_URL`.\n      // Note that we only recommend to use `public` folder as an escape hatch\n      // for files like `favicon.ico`, `manifest.json`, and libraries that are\n      // for some reason broken when imported through webpack. If you just want to\n      // use an image, put it in `src` and `import` it from JavaScript instead.\n      directory: locations.template.folder,\n      publicPath: [publicUrlOrPath],\n      // By default files from `contentBase` will not trigger a page reload.\n      watch: {\n        // Reportedly, this avoids CPU overload on some systems.\n        // https://github.com/facebook/create-react-app/issues/293\n        // src/node_modules is not ignored to support absolute imports\n        // https://github.com/facebook/create-react-app/issues/1065\n        ignored: ignoredFiles(locations.root),\n      },\n    },\n\n    client: {\n      webSocketURL: {\n        // Enable custom sockjs pathname for websocket connection to hot reloading server.\n        // Enable custom sockjs hostname, pathname and port for websocket connection\n        // to hot reloading server.\n        hostname: sockHost,\n        pathname: sockPath,\n        port: sockPort,\n      },\n      // overlay: true,\n      overlay: false,\n      // TODO: This is nonstandard, prevents logging in the browser\n      // logging: 'none',\n    },\n\n    webSocketServer: {\n      type: 'ws',\n      options: {\n        host: sockHost,\n        port: sockPort,\n        path: sockPath,\n      },\n    },\n    devMiddleware: {\n      index: true,\n      // It is important to tell WebpackDevServer to use the same \"publicPath\" path as\n      // we specified in the webpack config. When homepage is '.', default to serving\n      // from the root.\n      // remove last slash so user can land on `/test` instead of `/test/`\n      publicPath: publicUrlOrPath.slice(0, -1),\n    },\n\n    https: getHttpsConfig(env.projectRoot, https),\n    host,\n    historyApiFallback: {\n      // Paths with dots should still use the history fallback.\n      // See https://github.com/facebook/create-react-app/issues/387.\n      disableDotRule: true,\n      index: publicUrlOrPath,\n    },\n\n    // `proxy` is run between `before` and `after` `webpack-dev-server` hooks\n    proxy,\n    setupMiddlewares(middlewares, devServer) {\n      assert(devServer, 'webpack-dev-server is not defined');\n\n      middlewares.unshift(\n        // Keep `evalSourceMapMiddleware`\n        // middlewares before `redirectServedPath` otherwise will not have any effect\n        // This lets us fetch source contents from webpack for the error overlay\n        createEvalSourceMapMiddleware(devServer),\n        // Redirect to `PUBLIC_URL` or `homepage` from `package.json` if url not match\n        createRedirectServedPathMiddleware(publicUrlOrPath),\n        // This service worker file is effectively a 'no-op' that will reset any\n        // previous service worker registered for the same host:port combination.\n        // We do this in development to avoid hitting the production cache if\n        // it used the same host and port.\n        // https://github.com/facebook/create-react-app/issues/2272#issuecomment-302832432\n        createNoopServiceWorkerMiddleware(publicUrlOrPath)\n      );\n\n      return middlewares;\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}