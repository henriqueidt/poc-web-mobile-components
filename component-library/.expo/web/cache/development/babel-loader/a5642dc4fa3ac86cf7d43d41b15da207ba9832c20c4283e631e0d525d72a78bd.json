{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _fs;\ntry {\n  _fs = require('graceful-fs');\n} catch (_) {\n  _fs = require('fs');\n}\nvar universalify = require('universalify');\nvar _require = require(\"./utils\"),\n  stringify = _require.stringify,\n  stripBom = _require.stripBom;\nfunction _readFile(_x) {\n  return _readFile2.apply(this, arguments);\n}\nfunction _readFile2() {\n  _readFile2 = _asyncToGenerator(function* (file) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof options === 'string') {\n      options = {\n        encoding: options\n      };\n    }\n    var fs = options.fs || _fs;\n    var shouldThrow = 'throws' in options ? options.throws : true;\n    var data = yield universalify.fromCallback(fs.readFile)(file, options);\n    data = stripBom(data);\n    var obj;\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null);\n    } catch (err) {\n      if (shouldThrow) {\n        err.message = file + \": \" + err.message;\n        throw err;\n      } else {\n        return null;\n      }\n    }\n    return obj;\n  });\n  return _readFile2.apply(this, arguments);\n}\nvar readFile = universalify.fromPromise(_readFile);\nfunction readFileSync(file) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof options === 'string') {\n    options = {\n      encoding: options\n    };\n  }\n  var fs = options.fs || _fs;\n  var shouldThrow = 'throws' in options ? options.throws : true;\n  try {\n    var content = fs.readFileSync(file, options);\n    content = stripBom(content);\n    return JSON.parse(content, options.reviver);\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + \": \" + err.message;\n      throw err;\n    } else {\n      return null;\n    }\n  }\n}\nfunction _writeFile(_x2, _x3) {\n  return _writeFile2.apply(this, arguments);\n}\nfunction _writeFile2() {\n  _writeFile2 = _asyncToGenerator(function* (file, obj) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var fs = options.fs || _fs;\n    var str = stringify(obj, options);\n    yield universalify.fromCallback(fs.writeFile)(file, str, options);\n  });\n  return _writeFile2.apply(this, arguments);\n}\nvar writeFile = universalify.fromPromise(_writeFile);\nfunction writeFileSync(file, obj) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var fs = options.fs || _fs;\n  var str = stringify(obj, options);\n  return fs.writeFileSync(file, str, options);\n}\nvar jsonfile = {\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n};\nmodule.exports = jsonfile;","map":{"version":3,"names":["_fs","require","_","universalify","_require","stringify","stripBom","_readFile","_x","_readFile2","apply","arguments","_asyncToGenerator","file","options","length","undefined","encoding","fs","shouldThrow","throws","data","fromCallback","readFile","obj","JSON","parse","reviver","err","message","fromPromise","readFileSync","content","_writeFile","_x2","_x3","_writeFile2","str","writeFile","writeFileSync","jsonfile","module","exports"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/expo-pwa/node_modules/jsonfile/index.js"],"sourcesContent":["let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}