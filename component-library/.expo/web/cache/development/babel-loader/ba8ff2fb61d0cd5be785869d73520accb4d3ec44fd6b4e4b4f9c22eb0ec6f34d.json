{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = renderIntentFilters;\nexports.getIntentFilters = getIntentFilters;\nexports.setAndroidIntentFilters = setAndroidIntentFilters;\nexports.withAndroidIntentFilters = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar GENERATED_TAG = 'data-generated';\nvar withAndroidIntentFilters = (0, _androidPlugins().createAndroidManifestPlugin)(setAndroidIntentFilters, 'withAndroidIntentFilters');\nexports.withAndroidIntentFilters = withAndroidIntentFilters;\nfunction getIntentFilters(config) {\n  var _config$android$inten, _config$android;\n  return (_config$android$inten = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.intentFilters) !== null && _config$android$inten !== void 0 ? _config$android$inten : [];\n}\nfunction setAndroidIntentFilters(config, androidManifest) {\n  var _mainActivity$intent, _mainActivity$intent2;\n  var mainActivity = (0, _Manifest().getMainActivityOrThrow)(androidManifest);\n  if ((_mainActivity$intent = mainActivity['intent-filter']) !== null && _mainActivity$intent !== void 0 && _mainActivity$intent.length) {\n    mainActivity['intent-filter'] = mainActivity['intent-filter'].filter(function (value) {\n      var _value$$;\n      return ((_value$$ = value.$) === null || _value$$ === void 0 ? void 0 : _value$$[GENERATED_TAG]) !== 'true';\n    });\n  }\n  var intentFilters = getIntentFilters(config);\n  if (!intentFilters.length) {\n    return androidManifest;\n  }\n  mainActivity['intent-filter'] = (_mainActivity$intent2 = mainActivity['intent-filter']) === null || _mainActivity$intent2 === void 0 ? void 0 : _mainActivity$intent2.concat(renderIntentFilters(intentFilters));\n  return androidManifest;\n}\nfunction renderIntentFilters(intentFilters) {\n  return intentFilters.map(function (intentFilter) {\n    return {\n      $: _defineProperty({\n        'android:autoVerify': intentFilter.autoVerify ? 'true' : undefined\n      }, GENERATED_TAG, 'true'),\n      action: [{\n        $: {\n          'android:name': \"android.intent.action.\" + intentFilter.action\n        }\n      }],\n      data: renderIntentFilterData(intentFilter.data),\n      category: renderIntentFilterCategory(intentFilter.category)\n    };\n  });\n}\nfunction renderIntentFilterData(data) {\n  return (Array.isArray(data) ? data : [data]).filter(Boolean).map(function (datum) {\n    return {\n      $: Object.entries(datum !== null && datum !== void 0 ? datum : {}).reduce(function (prev, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, \"android:\" + key, value));\n      }, {})\n    };\n  });\n}\nfunction renderIntentFilterCategory(category) {\n  return (Array.isArray(category) ? category : [category]).filter(Boolean).map(function (cat) {\n    return {\n      $: {\n        'android:name': \"android.intent.category.\" + cat\n      }\n    };\n  });\n}","map":{"version":3,"names":["_androidPlugins","data","require","_Manifest","GENERATED_TAG","withAndroidIntentFilters","createAndroidManifestPlugin","setAndroidIntentFilters","getIntentFilters","config","_config$android$inten","_config$android","android","intentFilters","androidManifest","_mainActivity$intent","_mainActivity$intent2","mainActivity","getMainActivityOrThrow","length","filter","value","_value$$","$","concat","renderIntentFilters","map","intentFilter","_defineProperty","autoVerify","undefined","action","renderIntentFilterData","category","renderIntentFilterCategory","Array","isArray","Boolean","datum","Object","entries","reduce","prev","_ref","_ref2","_slicedToArray","key","_objectSpread","cat"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/android/IntentFilters.ts"],"sourcesContent":["import { Android, AndroidIntentFiltersData, ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow, ManifestIntentFilter } from './Manifest';\n\ntype AndroidIntentFilters = NonNullable<Android['intentFilters']>;\n\nconst GENERATED_TAG = 'data-generated';\n\nexport const withAndroidIntentFilters = createAndroidManifestPlugin(\n  setAndroidIntentFilters,\n  'withAndroidIntentFilters'\n);\n\nexport function getIntentFilters(config: Pick<ExpoConfig, 'android'>): AndroidIntentFilters {\n  return config.android?.intentFilters ?? [];\n}\n\nexport function setAndroidIntentFilters(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n): AndroidManifest {\n  // Always ensure old tags are removed.\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n  // Remove all generated tags from previous runs...\n  if (mainActivity['intent-filter']?.length) {\n    mainActivity['intent-filter'] = mainActivity['intent-filter'].filter(\n      value => value.$?.[GENERATED_TAG] !== 'true'\n    );\n  }\n\n  const intentFilters = getIntentFilters(config);\n  if (!intentFilters.length) {\n    return androidManifest;\n  }\n\n  mainActivity['intent-filter'] = mainActivity['intent-filter']?.concat(\n    renderIntentFilters(intentFilters)\n  );\n\n  return androidManifest;\n}\n\nexport default function renderIntentFilters(\n  intentFilters: AndroidIntentFilters\n): ManifestIntentFilter[] {\n  return intentFilters.map(intentFilter => {\n    // <intent-filter>\n    return {\n      $: {\n        'android:autoVerify': intentFilter.autoVerify ? 'true' : undefined,\n        // Add a custom \"generated\" tag that we can query later to remove.\n        [GENERATED_TAG]: 'true',\n      },\n      action: [\n        // <action android:name=\"android.intent.action.VIEW\"/>\n        {\n          $: {\n            'android:name': `android.intent.action.${intentFilter.action}`,\n          },\n        },\n      ],\n      data: renderIntentFilterData(intentFilter.data),\n      category: renderIntentFilterCategory(intentFilter.category),\n    };\n  });\n}\n\n/** Like `<data android:scheme=\"exp\"/>` */\nfunction renderIntentFilterData(data?: AndroidIntentFiltersData | AndroidIntentFiltersData[]) {\n  return (Array.isArray(data) ? data : [data]).filter(Boolean).map(datum => ({\n    $: Object.entries(datum ?? {}).reduce(\n      (prev, [key, value]) => ({ ...prev, [`android:${key}`]: value }),\n      {}\n    ),\n  }));\n}\n\n/** Like `<category android:name=\"android.intent.category.DEFAULT\"/>` */\nfunction renderIntentFilterCategory(category?: string | string[]) {\n  return (Array.isArray(category) ? category : [category]).filter(Boolean).map(cat => ({\n    $: {\n      'android:name': `android.intent.category.${cat}`,\n    },\n  }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}