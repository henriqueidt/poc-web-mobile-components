{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNativeModuleFileExtensions = exports.getModuleFileExtensions = void 0;\nvar paths_1 = require(\"@expo/config/paths\");\nfunction getModuleFileExtensions() {\n  for (var _len = arguments.length, platforms = new Array(_len), _key = 0; _key < _len; _key++) {\n    platforms[_key] = arguments[_key];\n  }\n  return (0, paths_1.getBareExtensions)(platforms).map(function (value) {\n    return \".\" + value;\n  });\n}\nexports.getModuleFileExtensions = getModuleFileExtensions;\nfunction getNativeModuleFileExtensions() {\n  for (var _len2 = arguments.length, platforms = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    platforms[_key2] = arguments[_key2];\n  }\n  return (0, paths_1.getBareExtensions)(platforms, {\n    isReact: true,\n    isTS: true,\n    isModern: false\n  }).map(function (value) {\n    return \".\" + value;\n  });\n}\nexports.getNativeModuleFileExtensions = getNativeModuleFileExtensions;","map":{"version":3,"names":["paths_1","require","getModuleFileExtensions","_len","arguments","length","platforms","Array","_key","getBareExtensions","map","value","exports","getNativeModuleFileExtensions","_len2","_key2","isReact","isTS","isModern"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/env/extensions.ts"],"sourcesContent":["import { getBareExtensions } from '@expo/config/paths';\n\n/**\n * Get the platform specific platform extensions in the format that Webpack expects (with a dot prefix).\n *\n * @param platforms supported platforms in order of priority. ex: ios, android, web, native, electron, etc...\n * @category env\n */\nexport function getModuleFileExtensions(...platforms: string[]): string[] {\n  // Webpack requires a `.` before each value\n  return getBareExtensions(platforms).map(value => `.${value}`);\n}\n\nexport function getNativeModuleFileExtensions(...platforms: string[]): string[] {\n  // Webpack requires a `.` before each value\n  // Disable modern when using `react-native`\n  return getBareExtensions(platforms, { isReact: true, isTS: true, isModern: false }).map(\n    value => `.${value}`\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAQA,SAAgBC,uBAAuBA,CAAA,EAAuB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAnBC,SAAmB,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAnBF,SAAmB,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAE5D,OAAO,IAAAR,OAAA,CAAAS,iBAAiB,EAACH,SAAS,CAAC,CAACI,GAAG,CAAC,UAAAC,KAAK;IAAA,aAAQA,KAAK;EAAA,CAAE,CAAC;AAC/D;AAHAC,OAAA,CAAAV,uBAAA,GAAAA,uBAAA;AAKA,SAAgBW,6BAA6BA,CAAA,EAAuB;EAAA,SAAAC,KAAA,GAAAV,SAAA,CAAAC,MAAA,EAAnBC,SAAmB,OAAAC,KAAA,CAAAO,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAnBT,SAAmB,CAAAS,KAAA,IAAAX,SAAA,CAAAW,KAAA;EAAA;EAGlE,OAAO,IAAAf,OAAA,CAAAS,iBAAiB,EAACH,SAAS,EAAE;IAAEU,OAAO,EAAE,IAAI;IAAEC,IAAI,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK,CAAE,CAAC,CAACR,GAAG,CACrF,UAAAC,KAAK;IAAA,aAAQA,KAAK;EAAA,CAAE,CACrB;AACH;AANAC,OAAA,CAAAC,6BAAA,GAAAA,6BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}