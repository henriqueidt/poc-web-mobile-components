{"ast":null,"code":"\"use strict\";\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNoopServiceWorkerMiddleware = void 0;\nvar path_1 = __importDefault(require(\"path\"));\nfunction createNoopServiceWorkerMiddleware(servedPath) {\n  return function noopServiceWorkerMiddleware(req, res, next) {\n    if (req.url === path_1.default.posix.join(servedPath, 'service-worker.js')) {\n      res.setHeader('Content-Type', 'text/javascript');\n      res.send(\"// This service worker file is effectively a 'no-op' that will reset any\\n // previous service worker registered for the same host:port combination.\\n // In the production build, this file is replaced with an actual service worker\\n // file that will precache your site's local assets.\\n // See https://github.com/facebook/create-react-app/issues/2272#issuecomment-302832432\\n self.addEventListener('install', () => self.skipWaiting());\\n self.addEventListener('activate', () => {\\n   self.clients.matchAll({ type: 'window' }).then(windowClients => {\\n     for (let windowClient of windowClients) {\\n       // Force open pages to refresh, so that they have a chance to load the\\n       // fresh navigation response from the local dev server.\\n       windowClient.navigate(windowClient.url);\\n     }\\n   });\\n });\\n \");\n    } else {\n      next();\n    }\n  };\n}\nexports.createNoopServiceWorkerMiddleware = createNoopServiceWorkerMiddleware;","map":{"version":3,"names":["path_1","__importDefault","require","createNoopServiceWorkerMiddleware","servedPath","noopServiceWorkerMiddleware","req","res","next","url","default","posix","join","setHeader","send","exports"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/utils/noopServiceWorkerMiddleware.ts"],"sourcesContent":["/**\n * Copyright (c) 2022 Expo, Inc.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on https://github.com/facebook/create-react-app/blob/a422bf2/packages/react-dev-utils/noopServiceWorkerMiddleware.js\n * But with Node LTS support.\n */\n\nimport type express from 'express';\nimport path from 'path';\n\nexport function createNoopServiceWorkerMiddleware(servedPath: string) {\n  return function noopServiceWorkerMiddleware(\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction\n  ) {\n    if (req.url === path.posix.join(servedPath, 'service-worker.js')) {\n      res.setHeader('Content-Type', 'text/javascript');\n      res.send(\n        `// This service worker file is effectively a 'no-op' that will reset any\n // previous service worker registered for the same host:port combination.\n // In the production build, this file is replaced with an actual service worker\n // file that will precache your site's local assets.\n // See https://github.com/facebook/create-react-app/issues/2272#issuecomment-302832432\n self.addEventListener('install', () => self.skipWaiting());\n self.addEventListener('activate', () => {\n   self.clients.matchAll({ type: 'window' }).then(windowClients => {\n     for (let windowClient of windowClients) {\n       // Force open pages to refresh, so that they have a chance to load the\n       // fresh navigation response from the local dev server.\n       windowClient.navigate(windowClient.url);\n     }\n   });\n });\n `\n      );\n    } else {\n      next();\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;AAYA,IAAAA,MAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,SAAgBC,iCAAiCA,CAACC,UAAkB;EAClE,OAAO,SAASC,2BAA2BA,CACzCC,GAAoB,EACpBC,GAAqB,EACrBC,IAA0B;IAE1B,IAAIF,GAAG,CAACG,GAAG,KAAKT,MAAA,CAAAU,OAAI,CAACC,KAAK,CAACC,IAAI,CAACR,UAAU,EAAE,mBAAmB,CAAC,EAAE;MAChEG,GAAG,CAACM,SAAS,CAAC,cAAc,EAAE,iBAAiB,CAAC;MAChDN,GAAG,CAACO,IAAI,mzBAiBP;KACF,MAAM;MACLN,IAAI,EAAE;;EAEV,CAAC;AACH;AA9BAO,OAAA,CAAAZ,iCAAA,GAAAA,iCAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}