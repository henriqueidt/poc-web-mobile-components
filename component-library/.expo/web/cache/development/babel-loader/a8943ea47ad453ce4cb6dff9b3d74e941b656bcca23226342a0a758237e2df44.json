{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _excluded = [\"mode\", \"projectRoot\", \"babelProjectRoot\", \"include\", \"verbose\", \"platform\", \"useCustom\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBabelLoaderFromEnvironment = void 0;\nvar core_1 = require(\"@babel/core\");\nvar paths_1 = require(\"@expo/config/paths\");\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar fs_1 = __importDefault(require(\"fs\"));\nvar getenv_1 = require(\"getenv\");\nvar path_1 = __importDefault(require(\"path\"));\nvar resolve_from_1 = __importDefault(require(\"resolve-from\"));\nvar env_1 = require(\"../env\");\nvar shouldUseSourceMap = (0, getenv_1.boolish)('GENERATE_SOURCEMAP', true);\nvar getModule = function getModule(name) {\n  return path_1.default.join('node_modules', name);\n};\nvar includeModulesThatContainPaths = [getModule('react-native'), getModule('react-navigation'), getModule('expo'), getModule('unimodules'), getModule('@react'), getModule('@expo'), getModule('@use-expo'), getModule('@unimodules'), getModule('native-base'), getModule('styled-components')];\nvar excludedRootPaths = ['/node_modules', '/bower_components', '/.expo/', '(webpack)'];\nvar parsedPackageNames = [];\nfunction packageNameFromPath(inputPath) {\n  var modules = inputPath.split('node_modules/');\n  var libAndFile = modules.pop();\n  if (!libAndFile) return null;\n  if (libAndFile.charAt(0) === '@') {\n    var _libAndFile$split = libAndFile.split('/'),\n      _libAndFile$split2 = _slicedToArray(_libAndFile$split, 2),\n      org = _libAndFile$split2[0],\n      lib = _libAndFile$split2[1];\n    return org + '/' + lib;\n  } else {\n    var components = libAndFile.split('/');\n    var first = components.shift();\n    return first || null;\n  }\n}\nfunction logPackage(packageName) {\n  if (!parsedPackageNames.includes(packageName)) {\n    parsedPackageNames.push(packageName);\n    console.log(chalk_1.default.cyan('\\nCompiling module: ' + chalk_1.default.bold(packageName)));\n  }\n}\nfunction ensureRoot(possibleProjectRoot) {\n  if (typeof possibleProjectRoot === 'string') {\n    return path_1.default.resolve(possibleProjectRoot);\n  }\n  return (0, paths_1.getPossibleProjectRoot)();\n}\nfunction generateCacheIdentifier(projectRoot) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';\n  var filename = path_1.default.join(projectRoot, 'foobar.js');\n  var cacheKey = \"babel-cache-\" + version + \"-\";\n  var partial = (0, core_1.loadPartialConfig)({\n    filename: filename,\n    cwd: projectRoot,\n    sourceFileName: filename\n  });\n  return \"\" + cacheKey + JSON.stringify(partial.options);\n}\nfunction createBabelLoaderFromEnvironment(env) {\n  var _a;\n  var mode = (0, env_1.getMode)(env);\n  var locations = env.locations || (0, env_1.getPaths)(env.projectRoot, env);\n  var appConfig = env.config || (0, env_1.getConfig)(env);\n  var _appConfig$web$build = appConfig.web.build,\n    build = _appConfig$web$build === void 0 ? {} : _appConfig$web$build;\n  var _build$babel = build.babel,\n    babel = _build$babel === void 0 ? {} : _build$babel;\n  return createBabelLoader({\n    projectRoot: locations.root,\n    mode: mode,\n    platform: env.platform,\n    babelProjectRoot: babel.root || locations.root,\n    verbose: babel.verbose,\n    include: [].concat(_toConsumableArray(babel.include || []), _toConsumableArray(((_a = env.babel) === null || _a === void 0 ? void 0 : _a.dangerouslyAddModulePathsToTranspile) || [])),\n    use: babel.use\n  });\n}\nexports.createBabelLoaderFromEnvironment = createBabelLoaderFromEnvironment;\nfunction createBabelLoader() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mode = _ref.mode,\n    inputProjectRoot = _ref.projectRoot,\n    babelProjectRoot = _ref.babelProjectRoot,\n    _ref$include = _ref.include,\n    include = _ref$include === void 0 ? [] : _ref$include,\n    verbose = _ref.verbose,\n    _ref$platform = _ref.platform,\n    platform = _ref$platform === void 0 ? 'web' : _ref$platform,\n    useCustom = _ref.useCustom,\n    options = _objectWithoutProperties(_ref, _excluded);\n  var ensuredProjectRoot = ensureRoot(babelProjectRoot);\n  var modules = [].concat(includeModulesThatContainPaths, _toConsumableArray(include));\n  var customUse = options.use || {};\n  var customUseOptions = customUse.options || {};\n  var isProduction = mode === 'production';\n  var projectRoot = inputProjectRoot || (0, paths_1.getPossibleProjectRoot)();\n  var presetOptions = {\n    babelrc: false,\n    configFile: true\n  };\n  if (!fs_1.default.existsSync(path_1.default.join(projectRoot, 'babel.config.js')) && !fs_1.default.existsSync(path_1.default.join(projectRoot, '.babelrc'))) {\n    var modulePath = resolve_from_1.default.silent(projectRoot, 'babel-preset-expo');\n    if (modulePath) {\n      presetOptions = {\n        babelrc: false,\n        configFile: false,\n        presets: [modulePath]\n      };\n    } else {\n      console.log(chalk_1.default.yellow(\"\\u203A Webpack failed to locate a valid Babel config\"));\n    }\n  }\n  presetOptions = _objectSpread(_objectSpread(_objectSpread({}, presetOptions), customUseOptions || {}), {}, {\n    sourceType: 'unambiguous',\n    root: ensuredProjectRoot,\n    compact: isProduction,\n    sourceMaps: shouldUseSourceMap,\n    inputSourceMap: shouldUseSourceMap\n  });\n  var cacheIdentifier = customUseOptions.cacheIdentifier;\n  if (!cacheIdentifier) {\n    try {\n      cacheIdentifier = generateCacheIdentifier(ensuredProjectRoot);\n    } catch (error) {\n      console.log(chalk_1.default.black.bgRed(\"The project's Babel config is invalid: \" + error.message));\n      throw error;\n    }\n  }\n  presetOptions.cacheIdentifier = cacheIdentifier;\n  presetOptions.cacheCompression = false;\n  presetOptions.cacheDirectory = customUseOptions.cacheDirectory || path_1.default.join(ensuredProjectRoot, '.expo', platform, 'cache', mode || 'development', 'babel-loader');\n  presetOptions.caller = {\n    __dangerous_rule_id: 'expo-babel-loader',\n    bundler: 'webpack',\n    platform: platform,\n    mode: mode\n  };\n  return _objectSpread(_objectSpread({\n    test: /\\.(js|mjs|jsx|ts|tsx)$/\n  }, options), {}, {\n    include: function include(inputPath) {\n      for (var possibleModule of modules) {\n        if (inputPath.includes(path_1.default.normalize(possibleModule))) {\n          if (verbose) {\n            var packageName = packageNameFromPath(inputPath);\n            if (packageName) logPackage(packageName);\n          }\n          return true;\n        }\n      }\n      if (inputPath.includes(ensuredProjectRoot)) {\n        for (var excluded of excludedRootPaths) {\n          if (inputPath.includes(path_1.default.normalize(excluded))) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    use: _objectSpread(_objectSpread({}, customUse), {}, {\n      loader: require.resolve('babel-loader'),\n      options: presetOptions\n    })\n  });\n}\nexports.default = createBabelLoader;","map":{"version":3,"names":["core_1","require","paths_1","chalk_1","__importDefault","fs_1","getenv_1","path_1","resolve_from_1","env_1","shouldUseSourceMap","boolish","getModule","name","default","join","includeModulesThatContainPaths","excludedRootPaths","parsedPackageNames","packageNameFromPath","inputPath","modules","split","libAndFile","pop","charAt","_libAndFile$split","_libAndFile$split2","_slicedToArray","org","lib","components","first","shift","logPackage","packageName","includes","push","console","log","cyan","bold","ensureRoot","possibleProjectRoot","resolve","getPossibleProjectRoot","generateCacheIdentifier","projectRoot","version","arguments","length","undefined","filename","cacheKey","partial","loadPartialConfig","cwd","sourceFileName","JSON","stringify","options","createBabelLoaderFromEnvironment","env","mode","getMode","locations","getPaths","appConfig","config","getConfig","_appConfig$web$build","web","build","_build$babel","babel","createBabelLoader","root","platform","babelProjectRoot","verbose","include","concat","_toConsumableArray","_a","dangerouslyAddModulePathsToTranspile","use","exports","_ref","inputProjectRoot","_ref$include","_ref$platform","useCustom","_objectWithoutProperties","_excluded","ensuredProjectRoot","customUse","customUseOptions","isProduction","presetOptions","babelrc","configFile","existsSync","modulePath","silent","presets","yellow","_objectSpread","sourceType","compact","sourceMaps","inputSourceMap","cacheIdentifier","error","black","bgRed","message","cacheCompression","cacheDirectory","caller","__dangerous_rule_id","bundler","test","possibleModule","normalize","excluded","loader"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/webpack-config/src/loaders/createBabelLoader.ts"],"sourcesContent":["import { loadPartialConfig } from '@babel/core';\nimport { getPossibleProjectRoot } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { boolish } from 'getenv';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { RuleSetRule } from 'webpack';\n\nimport { getConfig, getMode, getPaths } from '../env';\nimport { Environment, Mode } from '../types';\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = boolish('GENERATE_SOURCEMAP', true);\n\nconst getModule = (name: string) => path.join('node_modules', name);\n\n// Only compile files from the react ecosystem.\nconst includeModulesThatContainPaths = [\n  getModule('react-native'),\n  getModule('react-navigation'),\n  getModule('expo'),\n  getModule('unimodules'),\n  getModule('@react'),\n  getModule('@expo'),\n  getModule('@use-expo'),\n  getModule('@unimodules'),\n  getModule('native-base'),\n  getModule('styled-components'),\n];\n\nconst excludedRootPaths = [\n  '/node_modules',\n  '/bower_components',\n  '/.expo/',\n  // Prevent transpiling webpack generated files.\n  '(webpack)',\n];\n\nconst parsedPackageNames: string[] = [];\n// TODO: Bacon: Support internal packages. ex: react/fbjs\nfunction packageNameFromPath(inputPath: string): string | null {\n  const modules = inputPath.split('node_modules/');\n  const libAndFile = modules.pop();\n  if (!libAndFile) return null;\n  if (libAndFile.charAt(0) === '@') {\n    const [org, lib] = libAndFile.split('/');\n    return org + '/' + lib;\n  } else {\n    const components = libAndFile.split('/');\n    const first = components.shift();\n    return first || null;\n  }\n}\n\nfunction logPackage(packageName: string) {\n  if (!parsedPackageNames.includes(packageName)) {\n    parsedPackageNames.push(packageName);\n    console.log(chalk.cyan('\\nCompiling module: ' + chalk.bold(packageName)));\n  }\n}\n\nfunction ensureRoot(possibleProjectRoot?: string): string {\n  if (typeof possibleProjectRoot === 'string') {\n    return path.resolve(possibleProjectRoot);\n  }\n  return getPossibleProjectRoot();\n}\n\nfunction generateCacheIdentifier(projectRoot: string, version: string = '1'): string {\n  const filename = path.join(projectRoot, 'foobar.js');\n  const cacheKey = `babel-cache-${version}-`;\n\n  const partial = loadPartialConfig({\n    filename,\n    cwd: projectRoot,\n    sourceFileName: filename,\n  });\n\n  return `${cacheKey}${JSON.stringify(partial!.options)}`;\n}\n\n/**\n * Creates a Rule for loading Application code and packages from the Expo ecosystem.\n * This method attempts to recreate how Metro loads ES modules in the `node_modules` folder.\n *\n * @param env\n * @internal\n */\nexport function createBabelLoaderFromEnvironment(\n  env: Pick<Environment, 'babel' | 'locations' | 'projectRoot' | 'config' | 'mode' | 'platform'>\n): RuleSetRule {\n  const mode = getMode(env);\n  const locations = env.locations || getPaths(env.projectRoot, env);\n  const appConfig = env.config || getConfig(env);\n\n  const { build = {} } = appConfig.web;\n  const { babel = {} } = build;\n\n  return createBabelLoader({\n    projectRoot: locations.root,\n    mode,\n    platform: env.platform,\n    babelProjectRoot: babel.root || locations.root,\n    verbose: babel.verbose,\n    include: [...(babel.include || []), ...(env.babel?.dangerouslyAddModulePathsToTranspile || [])],\n    use: babel.use,\n  });\n}\n/**\n * A complex babel loader which uses the project's `babel.config.js`\n * to resolve all of the Unimodules which are shipped as ES modules (early 2019).\n * @category loaders\n */\nexport default function createBabelLoader({\n  /**\n   * The webpack mode: `\"production\" | \"development\"`\n   */\n  mode,\n  projectRoot: inputProjectRoot,\n  babelProjectRoot,\n  include = [],\n  verbose,\n  platform = 'web',\n  useCustom,\n  ...options\n}: {\n  projectRoot?: string;\n  useCustom?: boolean;\n  mode?: Mode;\n  babelProjectRoot?: string;\n  include?: string[];\n  verbose?: boolean;\n  [key: string]: any;\n} = {}): RuleSetRule {\n  const ensuredProjectRoot = ensureRoot(babelProjectRoot);\n  const modules = [...includeModulesThatContainPaths, ...include];\n  const customUse = options.use || {};\n  const customUseOptions = customUse.options || {};\n\n  const isProduction = mode === 'production';\n\n  const projectRoot = inputProjectRoot || getPossibleProjectRoot();\n  let presetOptions: any = {\n    // Explicitly use babel.config.js instead of .babelrc\n    babelrc: false,\n    // Attempt to use local babel.config.js file for compiling project.\n    configFile: true,\n  };\n\n  if (\n    !fs.existsSync(path.join(projectRoot, 'babel.config.js')) &&\n    !fs.existsSync(path.join(projectRoot, '.babelrc'))\n  ) {\n    // If no babel config exists then fallback on the default `babel-preset-expo`\n    // which is installed with `expo`.\n    const modulePath = resolveFrom.silent(projectRoot, 'babel-preset-expo');\n    if (modulePath) {\n      presetOptions = {\n        babelrc: false,\n        configFile: false,\n        presets: [modulePath],\n      };\n    } else {\n      console.log(chalk.yellow('\\u203A Webpack failed to locate a valid Babel config'));\n    }\n  }\n\n  presetOptions = {\n    ...presetOptions,\n    ...(customUseOptions || {}),\n\n    sourceType: 'unambiguous',\n    root: ensuredProjectRoot,\n    compact: isProduction,\n    // Babel sourcemaps are needed for debugging into node_modules\n    // code.  Without the options below, debuggers like VSCode\n    // show incorrect code and set breakpoints on the wrong lines.\n    sourceMaps: shouldUseSourceMap,\n    inputSourceMap: shouldUseSourceMap,\n  };\n\n  let cacheIdentifier: string | undefined = customUseOptions.cacheIdentifier;\n  if (!cacheIdentifier) {\n    try {\n      cacheIdentifier = generateCacheIdentifier(ensuredProjectRoot);\n    } catch (error: any) {\n      console.log(chalk.black.bgRed(`The project's Babel config is invalid: ${error.message}`));\n\n      throw error;\n    }\n  }\n  presetOptions.cacheIdentifier = cacheIdentifier;\n  presetOptions.cacheCompression = false;\n  presetOptions.cacheDirectory =\n    customUseOptions.cacheDirectory ||\n    path.join(\n      ensuredProjectRoot,\n      '.expo',\n      platform,\n      'cache',\n      mode || 'development',\n      'babel-loader'\n    );\n  presetOptions.caller = {\n    __dangerous_rule_id: 'expo-babel-loader',\n    bundler: 'webpack',\n    platform,\n    mode,\n  };\n  return {\n    test: /\\.(js|mjs|jsx|ts|tsx)$/,\n    // Can only clobber test\n    // Prevent clobbering the `include` and `use` values.\n    ...options,\n    include(inputPath: string): boolean {\n      for (const possibleModule of modules) {\n        if (inputPath.includes(path.normalize(possibleModule))) {\n          if (verbose) {\n            const packageName = packageNameFromPath(inputPath);\n            if (packageName) logPackage(packageName);\n          }\n          return true;\n        }\n      }\n      // Is inside the project and is not one of designated modules\n      if (inputPath.includes(ensuredProjectRoot)) {\n        for (const excluded of excludedRootPaths) {\n          if (inputPath.includes(path.normalize(excluded))) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    use: {\n      ...customUse,\n      loader: require.resolve('babel-loader'),\n      options: presetOptions,\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}