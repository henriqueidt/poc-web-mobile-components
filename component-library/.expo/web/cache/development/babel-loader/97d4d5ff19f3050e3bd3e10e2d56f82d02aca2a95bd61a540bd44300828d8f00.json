{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar createExpoWebpackConfigAsync = require(\"@expo/webpack-config\");\nmodule.exports = function () {\n  var _ref = _asyncToGenerator(function* (env, argv) {\n    var config = yield createExpoWebpackConfigAsync(env, argv);\n    if (config.mode === \"development\") {\n      config.devServer.compress = false;\n    }\n    return config;\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["createExpoWebpackConfigAsync","require","module","exports","_ref","_asyncToGenerator","env","argv","config","mode","devServer","compress","_x","_x2","apply","arguments"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/webpack.config.js"],"sourcesContent":["// const path = require(\"path\");\nconst createExpoWebpackConfigAsync = require(\"@expo/webpack-config\");\n\n// const prodConfig = {\n//   mode: \"production\",\n//   entry: path.join(__dirname, \"src/index.js\"),\n//   output: {\n//     filename: \"bundle.web.js\",\n//     path: path.join(__dirname, \"/web/build\"),\n//     library: \"component-library\",\n//     libraryTarget: \"umd\",\n//     umdNamedDefine: true,\n//   },\n//   module: {\n//     rules: [\n//       {\n//         test: /\\.(js|jsx)?$/,\n//         include: path.resolve(__dirname, \"src\"),\n//         exclude: /node_modules/,\n//         use: [\n//           {\n//             loader: \"babel-loader\",\n//             options: {\n//               cacheDirectory: true,\n//               presets: [\"module:metro-react-native-babel-preset\"],\n//               plugins: [\"react-native-web\"],\n//             },\n//           },\n//         ],\n//       },\n//       {\n//         test: /\\.(gif|jpe?g|png|svg)$/,\n//         use: {\n//           loader: \"url-loader\",\n//           options: {\n//             name: \"[name].[ext]\",\n//             esModule: false,\n//           },\n//         },\n//       },\n//     ],\n//   },\n//   resolve: {\n//     extensions: [\".js\", \".jsx\"],\n//     alias: {\n//       \"react-native$\": \"react-native-web\",\n//     },\n//   },\n//   externals: {\n//     react: {\n//       commonjs: \"react\",\n//       commonjs2: \"react\",\n//       amd: \"React\",\n//       root: \"React\",\n//     },\n//     \"react-dom\": {\n//       commonjs: \"react-dom\",\n//       commonjs2: \"react-dom\",\n//       amd: \"ReactDOM\",\n//       root: \"ReactDOM\",\n//     },\n//   },\n// };\n\nmodule.exports = async function (env, argv) {\n  // if (env.production) {\n  //   return prodConfig;\n  // }\n\n  const config = await createExpoWebpackConfigAsync(env, argv);\n\n  // Maybe you want to turn off compression in dev mode.\n  if (config.mode === \"development\") {\n    config.devServer.compress = false;\n  }\n\n  // Finally return the new config for the CLI to use.\n  return config;\n};\n"],"mappings":";AACA,IAAMA,4BAA4B,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AA+DpEC,MAAM,CAACC,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAgBC,GAAG,EAAEC,IAAI,EAAE;IAK1C,IAAMC,MAAM,SAASR,4BAA4B,CAACM,GAAG,EAAEC,IAAI,CAAC;IAG5D,IAAIC,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;MACjCD,MAAM,CAACE,SAAS,CAACC,QAAQ,GAAG,KAAK;IACnC;IAGA,OAAOH,MAAM;EACf,CAAC;EAAA,iBAAAI,EAAA,EAAAC,GAAA;IAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}