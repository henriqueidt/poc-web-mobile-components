{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEntitlementsPlugin = createEntitlementsPlugin;\nexports.createInfoPlistPlugin = createInfoPlistPlugin;\nexports.withXcodeProject = exports.withPodfileProperties = exports.withInfoPlist = exports.withExpoPlist = exports.withEntitlementsPlist = exports.withAppDelegate = void 0;\nfunction _withMod() {\n  var data = require(\"./withMod\");\n  _withMod = function _withMod() {\n    return data;\n  };\n  return data;\n}\nfunction createInfoPlistPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withInfoPlist(config, function () {\n      var _ref = _asyncToGenerator(function* (config) {\n        config.modResults = yield action(config, config.modResults);\n        return config;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n  return withUnknown;\n}\nfunction createEntitlementsPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withEntitlementsPlist(config, function () {\n      var _ref2 = _asyncToGenerator(function* (config) {\n        config.modResults = yield action(config, config.modResults);\n        return config;\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n  return withUnknown;\n}\nvar withAppDelegate = function withAppDelegate(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'appDelegate',\n    action: action\n  });\n};\nexports.withAppDelegate = withAppDelegate;\nvar withInfoPlist = function withInfoPlist(config, _action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'infoPlist',\n    action: function () {\n      var _action2 = _asyncToGenerator(function* (config) {\n        config = yield _action(config);\n        if (!config.ios) {\n          config.ios = {};\n        }\n        config.ios.infoPlist = config.modResults;\n        return config;\n      });\n      function action(_x3) {\n        return _action2.apply(this, arguments);\n      }\n      return action;\n    }()\n  });\n};\nexports.withInfoPlist = withInfoPlist;\nvar withEntitlementsPlist = function withEntitlementsPlist(config, _action3) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'entitlements',\n    action: function () {\n      var _action4 = _asyncToGenerator(function* (config) {\n        config = yield _action3(config);\n        if (!config.ios) {\n          config.ios = {};\n        }\n        config.ios.entitlements = config.modResults;\n        return config;\n      });\n      function action(_x4) {\n        return _action4.apply(this, arguments);\n      }\n      return action;\n    }()\n  });\n};\nexports.withEntitlementsPlist = withEntitlementsPlist;\nvar withExpoPlist = function withExpoPlist(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'expoPlist',\n    action: action\n  });\n};\nexports.withExpoPlist = withExpoPlist;\nvar withXcodeProject = function withXcodeProject(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'xcodeproj',\n    action: action\n  });\n};\nexports.withXcodeProject = withXcodeProject;\nvar withPodfileProperties = function withPodfileProperties(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'ios',\n    mod: 'podfileProperties',\n    action: action\n  });\n};\nexports.withPodfileProperties = withPodfileProperties;","map":{"version":3,"names":["_withMod","data","require","createInfoPlistPlugin","action","name","withUnknown","config","withInfoPlist","_ref","_asyncToGenerator","modResults","_x","apply","arguments","Object","defineProperty","value","createEntitlementsPlugin","withEntitlementsPlist","_ref2","_x2","withAppDelegate","withMod","platform","mod","_action2","ios","infoPlist","_x3","_action4","entitlements","_x4","withExpoPlist","withXcodeProject","withPodfileProperties"],"sources":["/Users/henriqueeidt/Documents/Projects/poc-web-mobile-components/component-library/node_modules/@expo/config-plugins/src/plugins/ios-plugins.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\nimport type { JSONObject, JSONValue } from '@expo/json-file';\nimport type { XcodeProject } from 'xcode';\n\nimport type { ConfigPlugin, Mod } from '../Plugin.types';\nimport type { ExpoPlist, InfoPlist } from '../ios/IosConfig.types';\nimport type { AppDelegateProjectFile } from '../ios/Paths';\nimport { withMod } from './withMod';\n\ntype MutateInfoPlistAction = (\n  expo: ExpoConfig,\n  infoPlist: InfoPlist\n) => Promise<InfoPlist> | InfoPlist;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createInfoPlistPlugin(action: MutateInfoPlistAction, name?: string): ConfigPlugin {\n  const withUnknown: ConfigPlugin = config =>\n    withInfoPlist(config, async config => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\ntype MutateEntitlementsPlistAction = (expo: ExpoConfig, entitlements: JSONObject) => JSONObject;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createEntitlementsPlugin(\n  action: MutateEntitlementsPlistAction,\n  name: string\n): ConfigPlugin {\n  const withUnknown: ConfigPlugin = config =>\n    withEntitlementsPlist(config, async config => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\n/**\n * Provides the AppDelegate file for modification.\n *\n * @param config\n * @param action\n */\nexport const withAppDelegate: ConfigPlugin<Mod<AppDelegateProjectFile>> = (config, action) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'appDelegate',\n    action,\n  });\n};\n\n/**\n * Provides the Info.plist file for modification.\n * Keeps the config's expo.ios.infoPlist object in sync with the data.\n *\n * @param config\n * @param action\n */\nexport const withInfoPlist: ConfigPlugin<Mod<InfoPlist>> = (config, action) => {\n  return withMod<InfoPlist>(config, {\n    platform: 'ios',\n    mod: 'infoPlist',\n    async action(config) {\n      config = await action(config);\n      if (!config.ios) {\n        config.ios = {};\n      }\n      config.ios.infoPlist = config.modResults;\n      return config;\n    },\n  });\n};\n\n/**\n * Provides the main .entitlements file for modification.\n * Keeps the config's expo.ios.entitlements object in sync with the data.\n *\n * @param config\n * @param action\n */\nexport const withEntitlementsPlist: ConfigPlugin<Mod<JSONObject>> = (config, action) => {\n  return withMod<JSONObject>(config, {\n    platform: 'ios',\n    mod: 'entitlements',\n    async action(config) {\n      config = await action(config);\n      if (!config.ios) {\n        config.ios = {};\n      }\n      config.ios.entitlements = config.modResults;\n      return config;\n    },\n  });\n};\n\n/**\n * Provides the Expo.plist for modification.\n *\n * @param config\n * @param action\n */\nexport const withExpoPlist: ConfigPlugin<Mod<ExpoPlist>> = (config, action) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'expoPlist',\n    action,\n  });\n};\n\n/**\n * Provides the main .xcodeproj for modification.\n *\n * @param config\n * @param action\n */\nexport const withXcodeProject: ConfigPlugin<Mod<XcodeProject>> = (config, action) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'xcodeproj',\n    action,\n  });\n};\n\n/**\n * Provides the Podfile.properties.json for modification.\n *\n * @param config\n * @param action\n */\nexport const withPodfileProperties: ConfigPlugin<Mod<Record<string, JSONValue>>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'ios',\n    mod: 'podfileProperties',\n    action,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}